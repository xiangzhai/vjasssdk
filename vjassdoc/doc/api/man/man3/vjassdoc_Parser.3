.TH "vjassdoc::Parser" 3 "9 Mar 2009" "Version 0.2.3" "vjassdoc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vjassdoc::Parser \- 
.SH SYNOPSIS
.br
.PP
\fC#include <parser.h>\fP
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBList\fP { \fBComments\fP, \fBKeywords\fP, \fBTextMacros\fP, \fBTextMacroInstances\fP, \fBTypes\fP, \fBGlobals\fP, \fBMembers\fP, \fBFunctionInterfaces\fP, \fBFunctions\fP, \fBMethods\fP, \fBInterfaces\fP, \fBStructs\fP, \fBScopes\fP, \fBLibraries\fP, \fBSourceFiles\fP, \fBDocComments\fP, \fBMaxLists\fP }"
.br
.ti -1c
.RI "enum \fBSearchMode\fP { \fBUnspecified\fP =  0, \fBCheckContainer\fP =  0x02, \fBCheckScope\fP =  0x04, \fBCheckLibrary\fP =  0x06 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBParser\fP ()"
.br
.ti -1c
.RI "\fB~Parser\fP ()"
.br
.ti -1c
.RI "void \fBparse\fP ()"
.br
.ti -1c
.RI "int \fBaddDatabase\fP (const char *filePath)"
.br
.ti -1c
.RI "void \fBremoveDatabase\fP (const int &index)"
.br
.ti -1c
.RI "class \fBObject\fP * \fBsearchObjectInList\fP (const class \fBObject\fP *object, const std::string &identifier, const enum \fBParser::List\fP &list, const enum \fBParser::SearchMode\fP &searchMode)"
.br
.ti -1c
.RI "std::list< class \fBObject\fP * > \fBgetSpecificList\fP (const class \fBObject\fP *object, const enum \fBList\fP &list, const struct \fBComparator\fP &comparator)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBComment\fP *comment)"
.br
.RI "\fIFinds the nearest object in the same line or ABOVE the line. \fP"
.ti -1c
.RI "void \fBadd\fP (class \fBKeyword\fP *keyword)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBTextMacro\fP *textMacro)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBTextMacroInstance\fP *textMacroInstance)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBType\fP *type)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBGlobal\fP *global)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBMember\fP *member)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBFunctionInterface\fP *functionInterface)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBFunction\fP *function)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBMethod\fP *method)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBInterface\fP *interface)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBStruct\fP *usedStruct)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBScope\fP *scope)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBLibrary\fP *library)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBSourceFile\fP *sourceFile)"
.br
.ti -1c
.RI "void \fBadd\fP (class \fBDocComment\fP *docComment)"
.br
.ti -1c
.RI "class \fBType\fP * \fBintegerType\fP () const "
.br
.ti -1c
.RI "class \fBType\fP * \fBrealType\fP () const "
.br
.ti -1c
.RI "class \fBType\fP * \fBstringType\fP () const "
.br
.ti -1c
.RI "class \fBType\fP * \fBbooleanType\fP () const "
.br
.ti -1c
.RI "class \fBType\fP * \fBhandleType\fP () const "
.br
.ti -1c
.RI "class \fBType\fP * \fBcodeType\fP () const "
.br
.ti -1c
.RI "class \fBSourceFile\fP * \fBcurrentSourceFile\fP () const "
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBComparator\fP"
.br
.ti -1c
.RI "struct \fBDatabase\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Provides methods for parsing Jass and vJass files. The \fBParser\fP class has the ability to create a simple HTML API documentation and/or a SQLite3 database. It contains a list for each \fBObject\fP child class. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBvjassdoc::Parser::List\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIComments \fP\fP
.TP
\fB\fIKeywords \fP\fP
.TP
\fB\fITextMacros \fP\fP
.TP
\fB\fITextMacroInstances \fP\fP
.TP
\fB\fITypes \fP\fP
.TP
\fB\fIGlobals \fP\fP
.TP
\fB\fIMembers \fP\fP
.TP
\fB\fIFunctionInterfaces \fP\fP
.TP
\fB\fIFunctions \fP\fP
.TP
\fB\fIMethods \fP\fP
.TP
\fB\fIInterfaces \fP\fP
.TP
\fB\fIStructs \fP\fP
.TP
\fB\fIScopes \fP\fP
.TP
\fB\fILibraries \fP\fP
.TP
\fB\fISourceFiles \fP\fP
.TP
\fB\fIDocComments \fP\fP
.TP
\fB\fIMaxLists \fP\fP

.SS "enum \fBvjassdoc::Parser::SearchMode\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUnspecified \fP\fP
.TP
\fB\fICheckContainer \fP\fP
No specific search mode. 
.TP
\fB\fICheckScope \fP\fP
Container has to be the same. 
.TP
\fB\fICheckLibrary \fP\fP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "vjassdoc::Parser::Parser ()"
.PP
.SS "vjassdoc::Parser::~Parser ()"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void vjassdoc::Parser::parse ()"
.PP

.PP
\fBTodo\fP
.RS 4
Test. 
.RE
.PP
.PP
\fBTodo\fP
.RS 4
Test. 
.RE
.PP

.SS "int vjassdoc::Parser::addDatabase (const char * filePath)"
.PP
.SS "void vjassdoc::Parser::removeDatabase (const int & index)"
.PP
.SS "class \fBObject\fP * vjassdoc::Parser::searchObjectInList (const class \fBObject\fP * object, const std::string & identifier, const enum \fBParser::List\fP & list, const enum \fBParser::SearchMode\fP & searchMode)"
.PP
.SS "std::list< class \fBObject\fP * > vjassdoc::Parser::getSpecificList (const class \fBObject\fP * object, const enum \fBList\fP & list, const struct \fBComparator\fP & comparator)"
.PP
.SS "void vjassdoc::Parser::add (class \fBComment\fP * comment)\fC [inline]\fP"
.PP
Finds the nearest object in the same line or ABOVE the line. 
.PP
.SS "void vjassdoc::Parser::add (class \fBKeyword\fP * keyword)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBTextMacro\fP * textMacro)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBTextMacroInstance\fP * textMacroInstance)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBType\fP * type)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBGlobal\fP * global)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBMember\fP * member)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBFunctionInterface\fP * functionInterface)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBFunction\fP * function)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBMethod\fP * method)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBInterface\fP * interface)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBStruct\fP * usedStruct)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBScope\fP * scope)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBLibrary\fP * library)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBSourceFile\fP * sourceFile)\fC [inline]\fP"
.PP
.SS "void vjassdoc::Parser::add (class \fBDocComment\fP * docComment)\fC [inline]\fP"
.PP
.SS "class \fBType\fP * vjassdoc::Parser::integerType () const\fC [inline]\fP"
.PP
.SS "class \fBType\fP * vjassdoc::Parser::realType () const\fC [inline]\fP"
.PP
.SS "class \fBType\fP * vjassdoc::Parser::stringType () const\fC [inline]\fP"
.PP
.SS "class \fBType\fP * vjassdoc::Parser::booleanType () const\fC [inline]\fP"
.PP
.SS "class \fBType\fP * vjassdoc::Parser::handleType () const\fC [inline]\fP"
.PP
.SS "class \fBType\fP * vjassdoc::Parser::codeType () const\fC [inline]\fP"
.PP
.SS "class \fBSourceFile\fP * vjassdoc::Parser::currentSourceFile () const\fC [inline]\fP"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for vjassdoc from the source code.
