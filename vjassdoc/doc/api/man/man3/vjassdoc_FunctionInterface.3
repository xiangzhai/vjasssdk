.TH "vjassdoc::FunctionInterface" 3 "9 Mar 2009" "Version 0.2.3" "vjassdoc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vjassdoc::FunctionInterface \- 
.SH SYNOPSIS
.br
.PP
\fC#include <functioninterface.h>\fP
.PP
Inherits \fBvjassdoc::Object\fP.
.PP
Inherited by \fBvjassdoc::Function\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFunctionInterface\fP (const std::string &identifier, class \fBSourceFile\fP *sourceFile, unsigned int line, class \fBDocComment\fP *docComment, class \fBLibrary\fP *library, class \fBScope\fP *scope, bool isPrivate, std::list< std::string > *parameterTypeExpressions, std::list< std::string > *parameters, const std::string &returnTypeExpression)"
.br
.ti -1c
.RI "\fBFunctionInterface\fP (std::vector< const unsigned char * > &columnVector)"
.br
.ti -1c
.RI "virtual \fB~FunctionInterface\fP ()"
.br
.ti -1c
.RI "virtual void \fBinit\fP ()"
.br
.ti -1c
.RI "virtual void \fBpageNavigation\fP (std::ofstream &file) const "
.br
.ti -1c
.RI "virtual void \fBpage\fP (std::ofstream &file) const "
.br
.ti -1c
.RI "virtual std::string \fBsqlStatement\fP () const "
.br
.ti -1c
.RI "virtual class \fBLibrary\fP * \fBlibrary\fP () const "
.br
.ti -1c
.RI "virtual class \fBScope\fP * \fBscope\fP () const "
.br
.ti -1c
.RI "bool \fBisPrivate\fP () const "
.br
.ti -1c
.RI "std::list< class \fBObject\fP * > * \fBparameterTypes\fP () const "
.br
.ti -1c
.RI "std::list< std::string > * \fBparameterTypeExpressions\fP () const "
.br
.ti -1c
.RI "std::list< std::string > * \fBparameters\fP () const "
.br
.ti -1c
.RI "class \fBObject\fP * \fBreturnType\fP () const "
.br
.ti -1c
.RI "std::string \fBreturnTypeExpression\fP () const "
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "vjassdoc::FunctionInterface::FunctionInterface (const std::string & identifier, class \fBSourceFile\fP * sourceFile, unsigned int line, class \fBDocComment\fP * docComment, class \fBLibrary\fP * library, class \fBScope\fP * scope, bool isPrivate, std::list< std::string > * parameterTypeExpressions, std::list< std::string > * parameters, const std::string & returnTypeExpression)"
.PP
.SS "vjassdoc::FunctionInterface::FunctionInterface (std::vector< const unsigned char * > & columnVector)"
.PP
.SS "vjassdoc::FunctionInterface::~FunctionInterface ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void vjassdoc::FunctionInterface::init ()\fC [virtual]\fP"
.PP
Implements \fBvjassdoc::Object\fP.
.PP
Reimplemented in \fBvjassdoc::Function\fP, and \fBvjassdoc::Method\fP.
.SS "void vjassdoc::FunctionInterface::pageNavigation (std::ofstream & file) const\fC [virtual]\fP"
.PP
Implements \fBvjassdoc::Object\fP.
.PP
Reimplemented in \fBvjassdoc::Function\fP, and \fBvjassdoc::Method\fP.
.SS "void vjassdoc::FunctionInterface::page (std::ofstream & file) const\fC [virtual]\fP"
.PP
Implements \fBvjassdoc::Object\fP.
.PP
Reimplemented in \fBvjassdoc::Function\fP, and \fBvjassdoc::Method\fP.
.SS "std::string vjassdoc::FunctionInterface::sqlStatement () const\fC [virtual]\fP"
.PP
Reimplemented from \fBvjassdoc::Object\fP.
.PP
Reimplemented in \fBvjassdoc::Function\fP, and \fBvjassdoc::Method\fP.
.SS "class \fBLibrary\fP * vjassdoc::FunctionInterface::library () const\fC [virtual]\fP"
.PP
Reimplemented from \fBvjassdoc::Object\fP.
.SS "class \fBScope\fP * vjassdoc::FunctionInterface::scope () const\fC [virtual]\fP"
.PP
Reimplemented from \fBvjassdoc::Object\fP.
.SS "bool vjassdoc::FunctionInterface::isPrivate () const\fC [inline]\fP"
.PP
.SS "std::list< class \fBObject\fP * > * vjassdoc::FunctionInterface::parameterTypes () const\fC [inline]\fP"
.PP
.SS "std::list< std::string > * vjassdoc::FunctionInterface::parameterTypeExpressions () const\fC [inline]\fP"
.PP
.SS "std::list< std::string > * vjassdoc::FunctionInterface::parameters () const\fC [inline]\fP"
.PP
.SS "class \fBObject\fP * vjassdoc::FunctionInterface::returnType () const\fC [inline]\fP"
.PP
.SS "std::string vjassdoc::FunctionInterface::returnTypeExpression () const\fC [inline]\fP"
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for vjassdoc from the source code.
