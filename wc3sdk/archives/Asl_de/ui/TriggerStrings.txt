// All entries in this file correspond to entries in TriggerData.txt
// with the same key, and define the text to display for a given
// function.
//
// The first value is the name of the function.
// Following values are the layout of the text description,
// and each value may either be raw text, or a parameter.
// Parameters are distinguished from raw text with a '~' as the first
// character.
//
// Any display text to have a comma must be contained in double quotes


//***************************************************************************
[TriggerEventStrings]

// Special events not defined in common.j,
// handled internally by the editor
MapInitializationEvent="Karteninitialisierung"
MapInitializationEvent="Karteninitialisierung"
MapInitializationEventHint="Die Karteninitialisierung findet während des Ladens der Karte statt."


// Destructible events
TriggerRegisterDeathEvent="Zerstörbares stirbt"
TriggerRegisterDeathEvent=~Zerstörbares," stirbt."
TriggerRegisterDeathEventHint="Benutzen Sie 'Ereignis-Reaktion - Sterbendes Zerstörbares', um das Zerstörbare, welches stirbt, zu erhalten."

TriggerRegisterDestDeathInRegionEvent="Zerstörbares innerhalb einer Region stirbt"
TriggerRegisterDestDeathInRegionEvent="Ein Zerstörbares innerhalb von ",~Region," stirbt"
TriggerRegisterDestDeathInRegionEventHint="Nur die ersten 64 Zerstörbaren innerhalb der Region werden auf ihren Tod hin überprüft, wenn dieses Ereignis registriert wird. Es ist das Beste, dieses Ereignis für Regionen, welche nur ein paar Zerstörbare enthalten, zu verwenden."

// Dialog events
TriggerRegisterDialogEventBJ="Dialog-Button-Klick"
TriggerRegisterDialogEventBJ="Ein Dialog-Button von ",~Dialog," wird angeklickt"
TriggerRegisterDialogEventBJHint=


// Game events
TriggerRegisterGameStateEventTimeOfDay="Tageszeit"
TriggerRegisterGameStateEventTimeOfDay="Die spielinterne Tageszeit wird ",~Operation," ",~Zeit
TriggerRegisterGameStateEventTimeOfDayHint="Ein Spieltag geht 24 Stunden lang. Sechs Uhr morgens ist 6.00 und sechs Uhr abends ist 18.00."

TriggerRegisterVariableEvent="Wert einer Real-Variablen"
TriggerRegisterVariableEvent=~Variable," wird ",~Operation," ",~Wert
TriggerRegisterVariableEventHint="Dies funktioniert nur mit Nicht-Array-Variablen des Typs 'Real'."

TriggerRegisterGameLoadedEventBJ="Spielladung"
TriggerRegisterGameLoadedEventBJ="Ein gespeichertes Spiel wird geladen"
TriggerRegisterGameLoadedEventBJHint="This fires immediately after the saved game is finished loading."

TriggerRegisterGameSavedEventBJ="Spielspeicherung"
TriggerRegisterGameSavedEventBJ="Das Spiel stets kurz davor gespeichert zu werden"
TriggerRegisterGameSavedEventBJHint="This fires immediately before the game is saved."

TriggerRegisterShowSkillEventBJ="Helden-Fähigkeiten-Button angeklickt"
TriggerRegisterShowSkillEventBJ="Der 'Helden-Fähigkeiten'-Button wird angeklickt"
TriggerRegisterShowSkillEventBJHint="Dieses Ereignis sollte nur in Einzelspielerkarten verwendet werden."

TriggerRegisterBuildSubmenuEventBJ="Gebäude-errichten-Button angeklickt"
TriggerRegisterBuildSubmenuEventBJ="Der 'Gebäude errichten'-Button wird angeklickt"
TriggerRegisterBuildSubmenuEventBJHint="Dieses Ereignis sollte nur in Einzelspielerkarten verwendet werden."

TriggerRegisterGameEvent="Turnier-Ereignis"
TriggerRegisterGameEvent="Das Turnier-Ereignis muss enden ",~Ereignistyp
TriggerRegisterGameEventHint="Dieses Ereignis tritt nur während automatischen Turnier-Spielen im Battle.net ein."


// Player events
TriggerRegisterPlayerChatEvent="Chat-Nachricht"
TriggerRegisterPlayerChatEvent=~Spieler," gibt eine Chat-Nachricht, welche den ",~Text," als ",~Übereinstimmungstyp," enthält, ein"
TriggerRegisterPlayerChatEventHint="Verwenden Sie 'Ereignis-Reaktion - Eingegebene/übereinstimmende Chat-Nachricht' um auf die Chat-Nachricht zu verweisen, die eingeben wurde/übereinstimmte.  Verwenden Sie 'Ereignis-Reaktion - Auslösender Spieler', um auf den Spieler zu verweisen, welcher die Nachricht eingegeben hat."

TriggerRegisterPlayerEventEndCinematic="Filmüberspringung"
TriggerRegisterPlayerEventEndCinematic=~Spieler," überspringt eine Filmsequenz"
TriggerRegisterPlayerEventEndCinematicHint="Dieses Ereignis tritt immer dann ein, wenn ein Spieler die 'Escape'-Taste drückt (ungeachtet ob sie gerade oder ob sie gerade nicht einen Film sehen)."

TriggerRegisterPlayerSelectionEventBJ="Auswahl-Ereignis"
TriggerRegisterPlayerSelectionEventBJ=~Spieler," ",~wählt aus/wählt ab," eine Einheit"
TriggerRegisterPlayerSelectionEventBJHint="Verwenden Sie 'Ereignisreaktion - Auslösende Einheit', um auf die Einheit, welche aus- oder abgewählt wird, zu verweisen."

TriggerRegisterPlayerKeyEventBJ="Tastatur-Ereignis"
TriggerRegisterPlayerKeyEventBJ=~Spieler," ",~drückt/lässt ," die ",~Taste," los"
TriggerRegisterPlayerKeyEventBJHint=

TriggerRegisterPlayerStateEvent="Eigenschaften"
TriggerRegisterPlayerStateEvent=~Spieler,"s ",~Eigenschaft," wird ",~Operation," ",~Wert
TriggerRegisterPlayerStateEventHint=

TriggerRegisterPlayerEventAllianceChanged="Bündnisänderung (beliebig)"
TriggerRegisterPlayerEventAllianceChanged=~Spieler," ändert Bündniseinstellungen"
TriggerRegisterPlayerEventAllianceChangedHint=

TriggerRegisterPlayerAllianceChange="Bündnisänderung (speziell)"
TriggerRegisterPlayerAllianceChange=~Spieler," ändert ",~Bündnistyp,"-Einstellungen"
TriggerRegisterPlayerAllianceChangeHint=

TriggerRegisterPlayerEventVictory="Sieg"
TriggerRegisterPlayerEventVictory=~Spieler," verlässt das Spiel mit einem Sieg"
TriggerRegisterPlayerEventVictoryHint=

TriggerRegisterPlayerEventDefeat="Niederlage"
TriggerRegisterPlayerEventDefeat=~Spieler," verlässt das Spiel mit einer Niederlage"
TriggerRegisterPlayerEventDefeatHint=

TriggerRegisterPlayerEventLeave="Verlässt das Spiel"
TriggerRegisterPlayerEventLeave=~Spieler," verlässt das Spiel."
TriggerRegisterPlayerEventLeaveHint="Dieses Ereignis tritt ein; ungeachtet dessen wie der Spieler das Spiel verlässt"


// Timer events
TriggerRegisterTimerEventSingle="Zeit ist vergangen"
TriggerRegisterTimerEventSingle="Vergangene Spielzeit beträgt ",~Zeit," Sekunden"
TriggerRegisterTimerEventSingleHint=

TriggerRegisterTimerEventPeriodic="Periodisches Ereignis"
TriggerRegisterTimerEventPeriodic="Alle ",~Zeit," Sekunden der Spielzeit"
TriggerRegisterTimerEventPeriodicHint=

TriggerRegisterTimerExpireEventBJ="Zeitgeber läuft ab"
TriggerRegisterTimerExpireEventBJ=~Zeitgeber," läuft ab"
TriggerRegisterTimerExpireEventBJHint="Ein Zeitgeber läuft ab wenn er 0 erreicht.  Wiederholende Zeitgeber laufen jedes Mal wenn sie 0 erreichen ab.  Verwenden Sie 'Ereignis-Reaktion - Abgelaufener Zeitgeber', um auf den Zeitgeber zu verweisen, der gerade abgelaufen ist."


// Unit events
TriggerRegisterUnitEvent="Spezielles Einheitenereignis"
TriggerRegisterUnitEvent=~Einheit," ",~Ereignis
TriggerRegisterUnitEventHint=

TriggerRegisterPlayerUnitEventSimple="Spielereigene-Einheit-Ereignis"
TriggerRegisterPlayerUnitEventSimple="Eine Einheit im Besitz von ",~Spieler," ",~Ereignis
TriggerRegisterPlayerUnitEventSimpleHint=

TriggerRegisterAnyUnitEventBJ="Allgemeines Einheitenereignis"
TriggerRegisterAnyUnitEventBJ="Eine Einheit ",~Ereignis
TriggerRegisterAnyUnitEventBJHint=

TriggerRegisterEnterRectSimple="Einheit betritt Region"
TriggerRegisterEnterRectSimple="Eine Einheit betritt ",~Region
TriggerRegisterEnterRectSimpleHint="Verwenden Sie 'Ereignisreaktion - Betretende Einheit', um auf die Einheit zu verweisen, die die Region betritt."

TriggerRegisterLeaveRectSimple="Einheit verlässt Region"
TriggerRegisterLeaveRectSimple="Eine Einheit verlässt ",~Region
TriggerRegisterLeaveRectSimpleHint="Verwenden Sie 'Ereignisreaktion - Verlassende Einheit', um auf die Einheit zu verweisen, die die Region verlässt."

TriggerRegisterUnitInRangeSimple="Einheit innerhalb Reichweite"
TriggerRegisterUnitInRangeSimple="Eine Einheit kommt innerhalb von ",~Reichweite," von ",~Einheit
TriggerRegisterUnitInRangeSimpleHint="Verwenden Sie 'Ereignisreaktion - Auslösende Einheit', um auf die innerhalb der Reichweite betrende Einheit zu verweisen."

TriggerRegisterUnitLifeEvent="Leben"
TriggerRegisterUnitLifeEvent=~Einheit,"s Leben wird ",~Operation," ",~Wert
TriggerRegisterUnitLifeEventHint=

TriggerRegisterUnitManaEvent="Mana"
TriggerRegisterUnitManaEvent=~Unit,"s Mana wird ",~Operation," ",~Wert
TriggerRegisterUnitManaEventHint=


//***************************************************************************
[TriggerConditionStrings]

OperatorCompareBoolean="Boolean-Vergleich"
OperatorCompareBoolean=~Wert," ",~Operator," ",~Wert
OperatorCompareBooleanHint=

OperatorCompareAbilityId="Fähigkeitenvergleich"
OperatorCompareAbilityId=~Wert," ",~Operator," ",~Wert
OperatorCompareAbilityIdHint=

OperatorCompareBuffId="Zauberverstärkervergleich"
OperatorCompareBuffId=~Wert," ",~Operator," ",~Wert
OperatorCompareBuffIdHint=

OperatorCompareDestructible="Zerstörbares-Vergleich"
OperatorCompareDestructible=~Wert," ",~Operator," ",~Wert
OperatorCompareDestructibleHint=

OperatorCompareDestructableCode="Zerstörbares-Typ-Vergleich"
OperatorCompareDestructableCode=~Wert," ",~Operator," ",~Wert
OperatorCompareDestructableCodeHint=

OperatorCompareButton="Dialog-Button-Vergleich"
OperatorCompareButton=~Wert," ",~Operator," ",~Wert
OperatorCompareButtonHint=

OperatorCompareGameDifficulty="Spielschwierigkeitsvergleich"
OperatorCompareGameDifficulty=~Wert," ",~Operator," ",~Wert
OperatorCompareGameDifficultyHint=

OperatorCompareGameSpeed="Spielgeschwindigkeitsvergleich"
OperatorCompareGameSpeed=~Wert," ",~Operator," ",~Wert
OperatorCompareGameSpeedHint=

OperatorCompareHeroSkill="Heldenfähigkeitsvergleich"
OperatorCompareHeroSkill=~Wert," ",~Operator," ",~Wert
OperatorCompareHeroSkillHint=

OperatorCompareInteger="Ganzzahlvergleich"
OperatorCompareInteger=~Wert," ",~Operator," ",~Wert
OperatorCompareIntegerHint=

OperatorCompareItem="Gegenstandsvergleich"
OperatorCompareItem=~Wert," ",~Operator," ",~Wert
OperatorCompareItemHint=

OperatorCompareItemType="Gegenstandsklassenvergleich"
OperatorCompareItemType=~Wert," ",~Operator," ",~Wert
OperatorCompareItemTypeHint=

OperatorCompareItemCode="Gegenstandstypvergleich"
OperatorCompareItemCode=~Wert," ",~Operator," ",~Wert
OperatorCompareItemCodeHint=

OperatorCompareMeleeDifficulty="Nahkampf-KI-Vergleich"
OperatorCompareMeleeDifficulty=~Wert," ",~Operator," ",~Wert
OperatorCompareMeleeDifficultyHint=

OperatorCompareOrderCode="Befehlsvergleich"
OperatorCompareOrderCode=~Wert," ",~Operator," ",~Wert
OperatorCompareOrderCodeHint=

OperatorComparePlayer="Spielervergleich"
OperatorComparePlayer=~Wert," ",~Operator," ",~Wert
OperatorComparePlayerHint=

OperatorComparePlayerColor="Spielerfarbevergleich"
OperatorComparePlayerColor=~Wert," ",~Operator," ",~Wert
OperatorComparePlayerColorHint=

OperatorComparePlayerControl="Player Controller Comparison"
OperatorComparePlayerControl=~Wert," ",~Operator," ",~Wert
OperatorComparePlayerControlHint=

OperatorComparePlayerSlotStatus="Spieler-Slot-Status-Vergleich"
OperatorComparePlayerSlotStatus=~Wert," ",~Operator," ",~Wert
OperatorComparePlayerSlotStatusHint=

//OperatorComparePoint="Point Comparison"
//OperatorComparePoint=~Value," ",~Operator," ",~Value
//OperatorComparePointHint=

OperatorCompareRace="Volk-Vergleich"
OperatorCompareRace=~Wert," ",~Operator," ",~Wert
OperatorCompareRaceHint=

OperatorCompareReal="Reelle-Vergleich"
OperatorCompareReal=~Wert," ",~Operator," ",~Wert
OperatorCompareRealHint=

//OperatorCompareRegion="Region Comparison"
//OperatorCompareRegion=~Value," ",~Operator," ",~Value
//OperatorCompareRegionHint=

OperatorCompareString="Zeichenkettenvergleich"
OperatorCompareString=~Wert," ",~Operator," ",~Wert
OperatorCompareStringHint="Damit zwei Zeichenketten gleich sind, müssen sie die gleiche Länge und den gleichen Inhalt haben."

OperatorCompareTechCode="Ausbautypvergleich"
OperatorCompareTechCode=~Wert," ",~Operator," ",~Wert
OperatorCompareTechCodeHint=

OperatorCompareTrigger="Auslöservergleich"
OperatorCompareTrigger=~Wert," ",~Operator," ",~Wert
OperatorCompareTriggerHint=

OperatorCompareUnit="Einheitenvergleich"
OperatorCompareUnit=~Wert," ",~Operator," ",~Wert
OperatorCompareUnitHint=

OperatorCompareUnitCode="Einheitentypvergleich"
OperatorCompareUnitCode=~Wert," ",~Operator," ",~Wert
OperatorCompareUnitCodeHint=

OperatorCompareTerrainType="Geländetypvergleich"
OperatorCompareTerrainType=~Wert," ",~Operator," ",~Wert
OperatorCompareTerrainTypeHint=

GetBooleanAnd="Und"
GetBooleanAnd=~Bedingung 1," und ",~Bedingung 2
GetBooleanAndHint=

GetBooleanOr="Oder"
GetBooleanOr=~Bedingung 1," oder ",~Bedingung 2
GetBooleanOrHint=

AndMultiple="Und, mehrere Bedingungen"
AndMultiple="Und - Alle (Bedingungen) sind wahr"
AndMultipleHint="Fügen Sie Bedingungen zu dieser Funktion in der Hauptanzeige hinzu."

OrMultiple="Oder, mehrere Bedingungen"
OrMultiple="Oder - Irgendeine (Bedingungen) ist wahr"
OrMultipleHint="Fügen Sie Bedingungen zu dieser Funktion in der Hauptanzeige hinzu."


//***************************************************************************
[TriggerActionStrings]

DoNothing="Nichts tun"
DoNothing="Tue nichts"
DoNothingHint=

CommentString="Kommentar"
CommentString="-------- ",~Kommentartext," --------"
CommentStringHint=

CustomScriptCode="Eigenes Skript"
CustomScriptCode="Eigenes Skript:   ",~Skript-Code
CustomScriptCodeHint="Geben Sie eine Zeile des Skript-Codes ein.  Beispiel: 'call my_func(udg_my_var)'"

TriggerSleepAction="Warten"
TriggerSleepAction="Warte ",~Zeit," Sekunden"
TriggerSleepActionHint="Die Dauer dieses Wartens wird in Echtzeitsekunden angegeben."

PolledWait="Warten (Spielzeit)"
PolledWait="Warte ",~Zeit," Spielzeitsekunden"
PolledWaitHint="Die Dauer dieses Wartens wird in Spielzeitsekunden angegeben. Dies ist ein 'polled' Warten, weshalb es geringfügig länger als benötigt dauern kann."

WaitForCondition="Auf Bedingung warten"
WaitForCondition="Warte bis ",~Bedingung,", überprüfe alle ",~Intervall," Sekunden"
WaitForConditionHint=

WaitForSoundBJ="Auf Geräusch warten"
WaitForSoundBJ="Warte auf ",~Geräusch," ist vor ",~Zeit," Sekunden abgespielt worden"
WaitForSoundBJHint="Diese Aktion wartet nur falls das Geräusch gerade abgespielt wird.  Falls das Geräusch noch nicht gestartet wurde oder bereits fertig ist, tut diese Aktion nichts."


// Specially handled by the editor
SetVariable="Variable setzen"
SetVariable="Setze ",~Variable," = ",~Wert
SetVariableHint=


// Specially handled by the editor
ReturnAction="Verbleibende Aktionen überspringen"
ReturnAction="Überspringe verbleibende Aktionen"
ReturnActionHint="Dies verursacht, dass alle verbleibenden Aktionen im Auslöser übersprungen werden."


// Specially handled by the editor
IfThenElseMultiple="Falls / Dann / Ansonsten, mehrere Aktionen"
IfThenElseMultiple="Falls (alle Bedingungen sind wahr) dann führe aus (Dann-Aktionen) ansonsten führe aus (Ansonsten-Aktionen)"
IfThenElseMultipleHint="Fügen Sie Bedingungen und Aktionen zu dieser Funktion in der Hauptanzeige hinzu."

// Specially handled by the editor
IfThenElse="Falls / Dann / Ansonsten"
IfThenElse="Falls ",~Bedingung," dann führe aus ",~Aktion," ansonsten führe aus ",~Aktion
IfThenElseHint=

// Specially handled by the editor
ForLoopAMultiple="Mehrere Aktionen für jede Ganzzahl A ausführen"
ForLoopAMultiple="Für jede (Ganzzahl A) von ",~Start," bis ",~Ende,", führe aus (Aktionen)"
ForLoopAMultipleHint="Fügen Sie Aktionen zu dieser Funktion in der Hauptanzeige hinzu. Voraussetzung ist, dass der Endwert größer als der Startwert ist."

// Specially handled by the editor
ForLoopBMultiple="Mehrere Aktionen für jede Ganzzahl B ausführen"
ForLoopBMultiple="Für jede (Ganzzahl B) von ",~Start," bis ",~Ende,", führe aus (Aktionen)"
ForLoopBMultipleHint="Fügen Sie Aktionen zu dieser Funktion in der Hauptanzeige hinzu. Voraussetzung ist, dass der Endwert größer als der Startwert ist."

// Specially handled by the editor
ForLoopVarMultiple="Mehrere Aktionen für jede Ganzzahlvariable ausführen"
ForLoopVarMultiple="Für jede (Ganzzahl-",~Variable,") von ",~Start," bis ",~Ende,", führe aus (Aktionen)"
ForLoopVarMultipleHint="Fügen Sie Aktionen zu dieser Funktion in der Hauptanzeige hinzu. Voraussetzung ist, dass der Endwert größer als der Startwert ist."

// Specially handled by the editor
ForLoopA="Aktion für jede Ganzzahl A ausführen"
ForLoopA="Für jede (Ganzzahl A) von ",~Start," bis ",~Ende,", führe ",~Aktion," aus"
ForLoopAHint="Der Endwert sollte größer als der Startwert sein."

// Specially handled by the editor
ForLoopB="Aktion für jede Ganzzahl B ausführen"
ForLoopB="Für jede (Ganzzahl B) von ",~Start," bis ",~Ende,", führe ",~Aktion," aus"
ForLoopBHint="Der Endwert sollte größer als der Startwert sein."

// Specially handled by the editor
ForLoopVar="Für jede Ganzzahlvariable Aktion ausführen"
ForLoopVar="Für jede (Ganzzahl-",~Variable," von ",~Start," bis ",~Ende,", führe ",~Aktion," aus"
ForLoopVarHint="Der Endwert sollte größer als der Startwert sein."


// AI actions
StartMeleeAI="Nahkampf-KI-Skript starten"
StartMeleeAI="Starte Nahkampf-KI-Skript für ",~Spieler,": ",~Skript
StartMeleeAIHint="Dies sollte auf jeden Fall nur für computergesteuerte Spieler-Slots verwendet werden.  Wenn Sie diese Aktion verwenden, wird ihnen geraten, dass Sie die 'Feste Spielereinstellungen'-Streitmachteigenschaft aktivieren."

StartCampaignAI="Kampagnen-KI-Skript starten"
StartCampaignAI="Starte Kampagnen-KI-Skript für ",~Spieler,": ",~Skript
StartCampaignAIHint="Dies sollte auf jeden Fall nur für computergesteuerte Spieler-Slots verwendet werden.  Wenn Sie diese Aktion verwenden, wird ihnen geraten, dass Sie die 'Feste Spielereinstellungen'-Streitmachteigenschaft aktivieren."

CommandAI="KI-Befehl senden"
CommandAI="Sende ",~Spieler," den KI-Befehl (",~Befehl,", ",~Daten,")"
CommandAIHint="Diese Aktion existiert für die interne Verwendung in KI-Skripts."

RemoveGuardPosition="Ignore Unit Guard Position"
RemoveGuardPosition="Ignore ",~Unit,"'s guard position"
RemoveGuardPositionHint="This action tells the AI to neither use nor replace a given preplaced unit.  This has no effect on Heroes and peon-type units."

RemoveAllGuardPositions="Ignore All Unit Guard Positions"
RemoveAllGuardPositions="Ignore the guard positions of all ",~Player," units"
RemoveAllGuardPositionsHint="This action tells the AI for the given player to neither use nor replace any of its preplaced units.  This has no effect on Heroes and peon-type units."

RecycleGuardPosition="Recycle Unit Guard Position"
RecycleGuardPosition="Recycle ",~Unit,"'s guard position"
RecycleGuardPositionHint="This action requests that the AI recycle the guard position that once belonged to the specified unit."

LockGuardPosition="Wachpostenposition sperren"
LockGuardPosition="Sperre Wachpostenposition von ",~Einheit
LockGuardPositionHint="Diese Aktion verhindert, dass die KI die Wachposten einer Einheit ändert."

// Animation actions
SetUnitAnimation="Einheitenanimation abspielen"
SetUnitAnimation="Spiele ",~Einheit,"s ",~Animationsname,"-Animation ab"
SetUnitAnimationHint="Verwenden Sie 'Einheitenanimation zurücksetzen' um zu einer normalen Animation der Einheit zurückzukehren."

SetUnitAnimationWithRarity="Spiele Einheitenanimation (bestimme Seltenheit)"
SetUnitAnimationWithRarity="Spiele ",~Einheit,"s ",~Animationsname,"-Animation, verwende nur ",~Seltenheit," Animationen"
SetUnitAnimationWithRarityHint=" Diese Animation wird solange wiederholt, bis sie mit 'Einheitenanimation zurücksetzen' zurückgesetzt wird."

QueueUnitAnimationBJ="Einheitenanimation einreihen"
QueueUnitAnimationBJ="Reihe ",~Einheit,"s ",~Animationsname,"-Animation ein"
QueueUnitAnimationBJHint=

ResetUnitAnimation="Einheitenanimation zurücksetzen"
ResetUnitAnimation="Setze ",~Einheit,"s Animation zurück"
ResetUnitAnimationHint="Setzt die Animation der Einheit zu dem was auch immer sie tut zurück."

AddUnitAnimationPropertiesBJ="Add/Remove Unit Animation Tag"
AddUnitAnimationPropertiesBJ=~Add/Remove," the ",~Tag," animation tag to ",~Unit
AddUnitAnimationPropertiesBJHint=

SetUnitLookAt="Lock Body-Part Facing"
SetUnitLookAt="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint="The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used.  The offset is taken as (X, Y, Z) from the target's feet."

ResetUnitLookAt="Reset Body-Part Facing"
ResetUnitLookAt="Reset ",~Unit,"'s body-part facing"
ResetUnitLookAtHint="Returns a unit's body-part facing to normal."

SetUnitScalePercent="Verändere Einheitengröße"
SetUnitScalePercent="Verändere ",~Einheit,"s Größe zu (",~X,"%, ",~Y,"%, ",~Z,"%) ihrer ursprünglichen Größe"
SetUnitScalePercentHint="Die Skalierungswerte treffen zu (Länge, Breite, Höhe) wenn eine Einheit frontal betrachtet wird."

SetUnitVertexColorBJ="Change Unit Vertex Coloring"
SetUnitVertexColorBJ="Change ",~Unit,"'s vertex coloring to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetUnitVertexColorBJHint="The color values are (Red, Green, Blue).  Most units default to 100% red, green, and blue, with 0% transparency.  A 100% transparent unit is completely invisible."

SetUnitTimeScalePercent="Ändere Einheitenanimationsgeschwindigkeit"
SetUnitTimeScalePercent="Ändere ",~Einheit,"s Animationsgeschwindigkeit zu ",~Prozent,"% ihrer ursprünglichen Geschwindigkeit"
SetUnitTimeScalePercentHint="Um die Animationsgeschwindigkeit einer Einheit auf den Standardwert zurückzusetzen, müssen Sie ihre Animationsgeschwindigkeit auf 100% setzen."

SetUnitTurnSpeedBJ="Change Unit Turn Speed"
SetUnitTurnSpeedBJ="Change ",~Unit," turn speed to ",~Value
SetUnitTurnSpeedBJHint="A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates."

SetUnitBlendTimeBJ="Change Unit Blend Time"
SetUnitBlendTimeBJ="Change ",~Unit," blend time to ",~Value
SetUnitBlendTimeBJHint="A unit's blend time determines how quickly the unit's body parts turn to face a direction."

SetUnitFlyHeightBJ="Change Unit Flying Height"
SetUnitFlyHeightBJ="Change ",~Unit," flying height to ",~Height," at ",~Rate
SetUnitFlyHeightBJHint="Only flying units use flying heights."

SetUnitPropWindowBJ="Change Unit Prop Window Angle"
SetUnitPropWindowBJ="Change ",~Unit," prop window angle to ",~Angle
SetUnitPropWindowBJHint=

SetDestructableAnimationBJ="Spiele Zerstörbares-Animation"
SetDestructableAnimationBJ="Spiele ",~Zerstörbares,"s ",~Animationsname," Animation"
SetDestructableAnimationBJHint=

QueueDestructableAnimationBJ="Queue Destructible Animation"
QueueDestructableAnimationBJ="Queue ",~Destructible,"'s ",~Animation Name," animation"
QueueDestructableAnimationBJHint=

SetDestAnimationSpeedPercent="Change Destructible Animation Speed"
SetDestAnimationSpeedPercent="Change ",~Destructible,"'s animation speed to ",~Percent,"% of its original speed"
SetDestAnimationSpeedPercentHint="To revert a destructible's animation speed to default, set its animation speed to 100%."

SetDoodadAnimationRectBJ="Play Animation For Doodads In Region"
SetDoodadAnimationRectBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Rect
SetDoodadAnimationRectBJHint="Special animation names: 'show', 'hide', 'soundon', 'soundoff'"

SetDoodadAnimationBJ="Play Animation For Doodads In Circle"
SetDoodadAnimationBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Radius," of ",~Point
SetDoodadAnimationBJHint="Special animation names: 'show', 'hide', 'soundon', 'soundoff'"


// Camera actions
CameraSetupApplyForPlayer="Kameraobjekt übernehmen (zeitgesteuert)"
CameraSetupApplyForPlayer="",~Übernahmemethode," ",~Kameraobjekt," für ",~Spieler," in ",~Zeit," Sekunden"
CameraSetupApplyForPlayerHint=

PanCameraToTimedLocForPlayer="Kamera schwenken (zeitgesteuert)"
PanCameraToTimedLocForPlayer="Schwenke Kamera für ",~Spieler," nach ",~Punkt," innerhalb in ",~Zeit," Sekunden"
PanCameraToTimedLocForPlayerHint=

PanCameraToTimedLocWithZForPlayer="Kamera mit interpolierter Höhe schwenken (zeitgesteuert)"
PanCameraToTimedLocWithZForPlayer="Schwenke Kamera für ",~Spieler," nach ",~Punkt," mit der Höhe ",~Z," über dem Gelände in ",~Zeit," Sekunden"
PanCameraToTimedLocWithZForPlayerHint="Die Kamera wird während ihres Kamerawegs nicht unter die Geländehöhe absinken."

SmartCameraPanBJ="Kamera wie nötig schwenken (zeitgesteuert)"
SmartCameraPanBJ="Schwenke Kamera wie nötig für ",~Spieler," nach ",~Punkt," in ",~Zeit," Sekunden"
SmartCameraPanBJHint="Falls die Kamera sehr weit vom Ziel entfernt ist, wird sie knipsen (snap?!) anstatt zu schwenken.  Falls die Kamera sehr nah am Ziel ist, wird die Schwenkanfrage übersprungen."

SetCameraFieldForPlayer="Kamerafeld festlegen (zeitgesteuert)"
SetCameraFieldForPlayer="Lege ",~Spieler,"s Kamer-",~Feld," auf ",~Wert," in ",~Zeit," Sekunden fest"
SetCameraFieldForPlayerHint=

RotateCameraAroundLocBJ="Kamera um Punkt drehen"
RotateCameraAroundLocBJ="Drehe Kamera ",~Winkel," Grad um ",~Punkt," für ",~Spieler," in ",~Zeit," Sekunden"
RotateCameraAroundLocBJHint=

SetCameraTargetControllerNoZForPlayer="Kameraziel auf Einheit einstellen"
SetCameraTargetControllerNoZForPlayer="Stelle Kameraziel für ",~Spieler," auf ",~Einheit," ein, ausgeglichen durch (",~X,", ",~Y,") mit ",~Drehungsquelle
SetCameraTargetControllerNoZForPlayerHint="Das Kameraziel wird durch (X, Y) von der Mitte der Einheitenfüße ausgeglichen."

SetCameraOrientControllerForPlayerBJ="Kameraorientierung auf Einheit einstellen"
SetCameraOrientControllerForPlayerBJ="Stelle Kameraorientierung für ",~Spieler," auf ",~Einheit," ein, ausgeglichen durch (",~X,", ",~Y,")"
SetCameraOrientControllerForPlayerBJHint=

SetCinematicCameraForPlayer="Filmkamera abspielen"
SetCinematicCameraForPlayer="Lasse Kamera für ",~Spieler," durch ",~Kameradatei,"-Filmkamera laufen"
SetCinematicCameraForPlayerHint=

StopCameraForPlayerBJ="Kamera stoppen"
StopCameraForPlayerBJ="Stoppe Kamera für ",~Spieler
StopCameraForPlayerBJHint=

ResetToGameCameraForPlayer="Spielkamera zurücksetzen"
ResetToGameCameraForPlayer="Setze Kamera für ",~Spieler," zur Standardspielansicht innerhalb von ",~Zeit," Sekunden zurück"
ResetToGameCameraForPlayerHint=

CameraSetSmoothingFactorBJ="Kameraglättungsfaktor ändern"
CameraSetSmoothingFactorBJ="Ändere Kameraglättungsfaktor zu ",~Faktor
CameraSetSmoothingFactorBJHint=

CameraResetSmoothingFactorBJ="Kameraglättungsfaktor zurücksetzen"
CameraResetSmoothingFactorBJ="Setze Kameraglättungsfaktor zurück"
CameraResetSmoothingFactorBJHint=

CameraSetSourceNoiseForPlayer="Kameraquelle schaukeln"
CameraSetSourceNoiseForPlayer="Schaukle Kameraquelle für ",~Spieler," mit der Stärke ",~Stärke," und der Geschwindigkeit ",~Geschwindigkeit
CameraSetSourceNoiseForPlayerHint=" Dies schaukelt die Kameraquelle durchgehend bis sie mit 'Kamera - Setze Spielkamera zurück' oder 'Kamera - Stoppe Schaukeln der Kamera' zurückgesetzt wird."

CameraSetTargetNoiseForPlayer="Sway Camera Target"
CameraSetTargetNoiseForPlayer="Sway the camera target for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetTargetNoiseForPlayerHint="This constantly sways the camera target until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'."

CameraSetEQNoiseForPlayer="Shake Camera"
CameraSetEQNoiseForPlayer="Shake the camera for ",~Player," with magnitude ",~Magnitude
CameraSetEQNoiseForPlayerHint="This constantly shakes the camera until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying/Shaking Camera'."

CameraClearNoiseForPlayer="Stop Swaying/Shaking Camera"
CameraClearNoiseForPlayer="Stop swaying/shaking the camera for ",~Player
CameraClearNoiseForPlayerHint="This stops the camera from swaying after a 'Camera - Sway Camera' or 'Camera - Shake Camera' action is used."

AdjustCameraBoundsForPlayerBJ="Extend/Shrink Camera Bounds"
AdjustCameraBoundsForPlayerBJ=~Extend/Shrink," the camera bounds for ",~Player," west by ",~West,", east by ",~East,", north by ",~North,", and south by ",~South
AdjustCameraBoundsForPlayerBJHint=

SetCameraBoundsToRectForPlayerBJ="Set Camera Bounds"
SetCameraBoundsToRectForPlayerBJ="Set the camera bounds for ",~Player," to ",~Region
SetCameraBoundsToRectForPlayerBJHint="This restricts the game camera to the specified region.  Changing the camera bounds does not change the scale of the minimap.  This should only be called while the camera is facing north."

SetCameraQuickPositionLocForPlayer="Set Spacebar-Point"
SetCameraQuickPositionLocForPlayer="Set a spacebar-point for ",~Player," at ",~Point
SetCameraQuickPositionLocForPlayerHint="A spacebar-point is a location that the game camera jumps to when the player presses the spacebar."


// Cinematic actions
TransmissionFromUnitWithNameBJ="Übertragung von Einheit"
TransmissionFromUnitWithNameBJ="Sende Übertragung an ",~Spielergruppe," von ",~Einheit," benannt ",~Name,": Spiele ",~Geräusch," und zeige ",~Nachricht," an.  Modifiziere Dauer: ",~Methode," ",~Zeit," Sekunden und ",~Warten/Nicht warten
TransmissionFromUnitWithNameBJHint="Die Dauer von 'Kein Geräusch' beträgt 5 Sekunden."

TransmissionFromUnitTypeWithNameBJ="Übertragung von Einheitentyp"
TransmissionFromUnitTypeWithNameBJ="Sende Übertragung an ",~Spielergruppe," von einer ",~Spieler,"-",~Einheitentyp,"-Einheit benannt ",~Name," an ",~Punkt,": Spiele ",~Geräusch," und zeige ",~Nachricht," an.  Modifiziere Dauer: ",~Methode," ",~Zeit," Sekunden und ",~Warten/Nicht warten
TransmissionFromUnitTypeWithNameBJHint="Die Dauer von 'Kein Geräusch' beträgt 5 Sekunden."

ForceCinematicSubtitlesBJ="Subtitle Display Override"
ForceCinematicSubtitlesBJ="Turn subtitle display override ",~On/Off
ForceCinematicSubtitlesBJHint="Turning this on will cause transmission text to be displayed on the screen even if the user normally has subtitles turned off."

CinematicModeBJ="Filmmodus"
CinematicModeBJ="Schalte Filmmodus ",~Ein/Aus," für ",~Spielergruppe
CinematicModeBJHint=

CinematicModeExBJ="Filmmodus (zeitgestuert)"
CinematicModeExBJ="Schalte Filmmodus ",~ein/aus," für ",~Spielergruppe," in ",~Zeit," Sekunden"
CinematicModeExBJHint=

CinematicFadeBJ="Fade Filter"
CinematicFadeBJ=~Fade Type," over ",~Duration," seconds using texture ",~Texture," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
CinematicFadeBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

CinematicFilterGenericBJ="Advanced Filter"
CinematicFilterGenericBJ="Apply a filter over ",~Duration," seconds using ",~Blending Method," on texture ",~Texture,", starting with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency and ending with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency"
CinematicFilterGenericBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

DisplayCineFilterBJ="Show/Hide Filter"
DisplayCineFilterBJ=~Show/Hide," filter"
DisplayCineFilterBJHint=

PingMinimapLocForForce="Ping Minimap"
PingMinimapLocForForce="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds"
PingMinimapLocForForceHint=

PingMinimapLocForForceEx="Ping Minimap With Color"
PingMinimapLocForForceEx="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds, using a ",~Style," ping of color ("~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint="The color values are (Red, Green, Blue).  Warning pings are always red."

UnitAddIndicatorBJ="Flash Speech Indicator For Unit"
UnitAddIndicatorBJ="Flash a speech indicator for ",~Unit," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
UnitAddIndicatorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

DestructableAddIndicatorBJ="Flash Speech Indicator For Destructible"
DestructableAddIndicatorBJ="Flash a speech indicator for ",~Destructible," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
DestructableAddIndicatorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

ItemAddIndicatorBJ="Flash Speech Indicator For Item"
ItemAddIndicatorBJ="Flash a speech indicator for ",~Item," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
ItemAddIndicatorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

ClearTextMessagesBJ="Entferne Textnachrichten"
ClearTextMessagesBJ="Befreit den Bildschirm für ",~Spielergruppe," von Textnachrichten
ClearTextMessagesBJHint=

ShowInterfaceForceOff="Letterbox Mode On"
ShowInterfaceForceOff="Turn on letterbox mode (hide interface) for ",~Player Group,": fade out over ",~Duration," seconds"
ShowInterfaceForceOffHint="Puts the camera into letterbox mode, hiding the game interface."

ShowInterfaceForceOn="Letterbox Mode Off"
ShowInterfaceForceOn="Turn off letterbox mode (show interface) for ",~Player Group,": fade in over ",~Duration," seconds"
ShowInterfaceForceOnHint="Puts the camera into normal (non-letterbox) mode, displaying the game interface."

SetUserControlForceOff="Benutzerkontrolle deaktivieren"
SetUserControlForceOff="Deaktiviere Benutzerkontrolle für  ",~Spielergruppe
SetUserControlForceOffHint=

SetUserControlForceOn="Benutzerkontrolle aktivieren"
SetUserControlForceOn="Aktiviere Benutzerkontrolle für ",~Spielergruppe
SetUserControlForceOnHint=

EnableOcclusionBJ="Enable/Disable Occlusion"
EnableOcclusionBJ=~Enable/Disable," occlusion for ",~Player Group
EnableOcclusionBJHint="When occlusion is enabled, trees that block vision of units become transparent."

EnableWorldFogBoundaryBJ="Enable/Disable Boundary Tinting"
EnableWorldFogBoundaryBJ=~Enable/Disable," boundary tinting for ",~Player Group
EnableWorldFogBoundaryBJHint=


// Countdown Timer actions
StartTimerBJ="Zeitgeber starten"
StartTimerBJ="Starte ",~Zeitgeber," als einen ",~Einmaligen/Wiederholenden," Zeitgeber, der in ",~Time," Sekunden ablaufen wird"
StartTimerBJHint=

PauseTimerBJ="Zeitgeber pausieren"
PauseTimerBJ=~Pausiere/Setze fort," ",~Zeitgeber
PauseTimerBJHint=

CreateTimerDialogBJ="Create Timer Window"
CreateTimerDialogBJ="Create a timer window for ",~Timer," with title ",~Title
CreateTimerDialogBJHint="Timer Windows cannot be displayed at map initialization."

DestroyTimerDialogBJ="Destroy Timer Window"
DestroyTimerDialogBJ="Destroy ",~Timer Window
DestroyTimerDialogBJHint=

TimerDialogDisplayForPlayerBJ="Show/Hide Timer Window For Player"
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," for ",~Player
TimerDialogDisplayForPlayerBJHint="Timer Windows cannot be displayed at map initialization."

TimerDialogDisplayBJ="Show/Hide Timer Window"
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint="Timer Windows cannot be displayed at map initialization."

TimerDialogSetTitleBJ="Change Timer Window Title"
TimerDialogSetTitleBJ="Change the title of ",~Timer Window," to ",~Title
TimerDialogSetTitleBJHint=

TimerDialogSetTitleColorBJ="Change Timer Window Title Color"
TimerDialogSetTitleColorBJ="Change the color of the title for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTitleColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

TimerDialogSetTimeColorBJ="Change Timer Window Time Color"
TimerDialogSetTimeColorBJ="Change the color of the time for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTimeColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

//TimerDialogSetSpeedBJ="Set Timer Window Speed"
//TimerDialogSetSpeedBJ="Set the speed of ",~Timer Window," to be ",~Factor," times normal speed"
//TimerDialogSetSpeedBJHint=


// Destructable actions
CreateDestructableLoc="Create"
CreateDestructableLoc="Create a ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableLocHint="The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible."

CreateDeadDestructableLocBJ="Create (Dead)"
CreateDeadDestructableLocBJ="Create a dead ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableLocBJHint="The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Destructible' to refer to this destructible."

KillDestructable="Zerstören"
KillDestructable="Zerstöre ",~Zerstörbares
KillDestructableHint=

RemoveDestructable="Entfernen"
RemoveDestructable="Entferne ",~Zerstörbares
RemoveDestructableHint=

DestructableRestoreLife="Wieder aufleben lassen"
DestructableRestoreLife="Lasse ",~Zerstörbares," mit ",~Wert," Leben und ",~Zeigen/Verbergen," Entstehungsanimation wieder aufleben"
DestructableRestoreLifeHint=

ShowDestructableBJ="Zeigen/verbergen"
ShowDestructableBJ=~Zeigen/Verbergen," ",~Destructible
ShowDestructableBJHint="Hidden destructibles are not displayed, but still affect pathing and visibility."

SetDestructableLifePercentBJ="Set Life (To Percentage)"
SetDestructableLifePercentBJ="Set life of ",~Destructible," to ",~Percent,"%"
SetDestructableLifePercentBJHint=

SetDestructableLife="Set Life (To Value)"
SetDestructableLife="Set life of ",~Destructible," to ",~Value
SetDestructableLifeHint=

SetDestructableMaxLifeBJ="Set Max Life"
SetDestructableMaxLifeBJ="Set max life of ",~Destructible," to ",~Value
SetDestructableMaxLifeBJHint=

ModifyGateBJ="Open/Close/Destroy Gate"
ModifyGateBJ=~Open/Close/Destroy," ",~Gate
ModifyGateBJHint=

ChangeElevatorWalls="Open/Close Elevator Walls"
ChangeElevatorWalls=~Open/Close," ",~Walls," of ",~Elevator
ChangeElevatorWallsHint=

ChangeElevatorHeight="Set Elevator Height"
ChangeElevatorHeight="Set height of ",~Elevator," to ",~Height
ChangeElevatorHeightHint=

SetDestructableInvulnerableBJ="Make Invulnerable/Vulnerable"
SetDestructableInvulnerableBJ="Make ",~Destructible," ",~Invulnerable/Vulnerable
SetDestructableInvulnerableBJHint=

SetDestructableOccluderHeight="Set Occlusion Height"
SetDestructableOccluderHeight="Set the occlusion height of ",~Destructible," to ",~Height
SetDestructableOccluderHeightHint=

EnumDestructablesInRectAllMultiple="Pick Every Destructible In Region And Do Multiple Actions"
EnumDestructablesInRectAllMultiple="Pick every destructible in ",~Region," and do (Actions)"
EnumDestructablesInRectAllMultipleHint="Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display."

EnumDestructablesInCircleBJMultiple="Pick Every Destructible In Circle And Do Multiple Actions"
EnumDestructablesInCircleBJMultiple="Pick every destructible within ",~Radius," of ",~Point," and do (Actions)"
EnumDestructablesInCircleBJMultipleHint="Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function.  Add actions to this function in the main display."

EnumDestructablesInRectAll="Pick Every Destructible In Region And Do Action"
EnumDestructablesInRectAll="Pick every destructible in ",~Region," and do ",~Action
EnumDestructablesInRectAllHint="Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function."

EnumDestructablesInCircleBJ="Pick Every Destructible In Circle And Do Action"
EnumDestructablesInCircleBJ="Pick every destructible within ",~Radius," of ",~Point," and do ",~Action
EnumDestructablesInCircleBJHint="Use 'Picked Destructible' to refer each destructible as it is picked.  This works for every destructible in the region, including dead destructibles.  Wait actions should not be used within this function."


// Dialog actions
DialogDisplayBJ="Show/Hide"
DialogDisplayBJ=~Show/Hide," ",~Dialog," for ",~Player
DialogDisplayBJHint="Dialogs cannot be displayed at map initialization."

DialogSetMessageBJ="Change Title"
DialogSetMessageBJ="Change the title of ",~Dialog," to ",~Title
DialogSetMessageBJHint=

DialogAddButtonBJ="Create Dialog Button"
DialogAddButtonBJ="Create a dialog button for ",~Dialog," labelled ",~Text
DialogAddButtonBJHint=

DialogClearBJ="Clear"
DialogClearBJ="Clear ",~Dialog
DialogClearBJHint="This clears the title and all buttons for the specified dialog."


// Environment actions
AddWeatherEffectSaveLast="Create Weather Effect"
AddWeatherEffectSaveLast="Create at ",~Region," the weather effect ",~Weather Id
AddWeatherEffectSaveLastHint=

EnableWeatherEffect="Enable/Disable Weather Effect"
EnableWeatherEffect="Turn ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint="You can create weather effects via the 'Environment - Create Weather Effect' action."

RemoveWeatherEffectBJ="Remove Weather Effect"
RemoveWeatherEffectBJ="Remove ",~Weather Effect
RemoveWeatherEffectBJHint=

TerrainDeformationCraterBJ="Create Terrain Deformation: Crater"
TerrainDeformationCraterBJ="Create a ",~Duration," second ",~Type," crater deformation at ",~Point," with radius ",~Radius," and depth ",~Depth
TerrainDeformationCraterBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps.  Permanent deformations are not preserved in saved game files."

TerrainDeformationRippleBJ="Create Terrain Deformation: Ripple"
TerrainDeformationRippleBJ="Create a ",~Duration," second ",~Type," ripple deformation at ",~Point," with starting radius ",~Radius,", ending radius ",~Radius,", and depth ",~Depth,", using ",~Time," second ripples spaced ",~Distance," apart"
TerrainDeformationRippleBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation."

TerrainDeformationWaveBJ="Create Terrain Deformation: Wave"
TerrainDeformationWaveBJ="Create a ",~Duration," second wave deformation from ",~Source," to ",~Target," with radius ",~Radius,", depth ",~Depth,", and a ",~Delay," second trailing delay"
TerrainDeformationWaveBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation.  Depth may be negative for bumps."

TerrainDeformationRandomBJ="Create Terrain Deformation: Random"
TerrainDeformationRandomBJ="Create a ",~Duration," second random deformation at ",~Point," with radius ",~Radius,", using depths between ",~Minimum," and ",~Maximum,", updating every ",~Update Interval," seconds"
TerrainDeformationRandomBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation."

TerrainDeformationStopBJ="Stop Terrain Deformation"
TerrainDeformationStopBJ="Stop ",~Terrain Deformation," over ",~Duration," seconds"
TerrainDeformationStopBJHint="The deformation will smoothly reduce to nothing over the duration."

TerrainDeformStopAll="Stop All Terrain Deformations"
TerrainDeformStopAll="Stop all active terrain deformations instantly"
TerrainDeformStopAllHint="This includes any terrain deformations indirectly caused by spells or abilities."

SetWaterDeforms="Turn Water Deformation On/Off"
SetWaterDeforms="Turn water deformation ",~On/Off
SetWaterDeformsHint="When this is turned on, terrain deformations will also apply to any water above the terrain.  This does not work with permanent deformations."

SetTerrainTypeBJ="Change Terrain Type"
SetTerrainTypeBJ="Change terrain type at ",~Location," to ",~Terrain Type," using variation ",~Variation," in an area of size ",~Area," and shape ",~Shape
SetTerrainTypeBJHint="Use a variation of -1 to generate random variations across the area."

SetTerrainPathableBJ="Turn Terrain Pathing On/Off"
SetTerrainPathableBJ="Set terrain pathing at ",~Location," of type ",~Pathing," to ",~On/Off
SetTerrainPathableBJHint="Turning pathing on causes the pathing cell to become pathable to the given type.  For example, turning 'Buildability' on makes the pathing cell buildable.  This only affects pathing restrictions caused by terrain (not doodads, units, etc.)."

SetWaterBaseColorBJ="Set Water Tinting Color"
SetWaterBaseColorBJ="Change water tinting color to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetWaterBaseColorBJHint="The color values are (Red, Green, Blue).  100% transparent water is completely invisible."

SetSkyModel="Lege Himmel fest"
SetSkyModel="Lege den Himmel auf ",~Himmel," fest"
SetSkyModelHint=

SetTerrainFogExBJ="Set Fog"
SetTerrainFogExBJ="Set fog to style ",~Style,", z-start ",~Z-Start,", z-end ",~Z-End,", density ",~Density," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint="The color values are (Red, Green, Blue)."

ResetTerrainFogBJ="Reset Fog"
ResetTerrainFogBJ="Reset fog to default values"
ResetTerrainFogBJHint=

SetBlightRectBJ="Create/Remove Blight Region"
SetBlightRectBJ=~Create/Remove," Blight for ",~Player," across ",~Region
SetBlightRectBJHint=

SetBlightRadiusLocBJ="Create/Remove Blight Circle"
SetBlightRadiusLocBJ=~Create/Remove," Blight for ",~Player," from ",~Point," to a radius of ",~Radius
SetBlightRadiusLocBJHint=

// Text Tag actions
CreateTextTagLocBJ="Create Floating Text At Point"
CreateTextTagLocBJ="Create floating text that reads ",~Message," at ",~Point," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagLocBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary."

CreateTextTagUnitBJ="Create Floating Text Above Unit"
CreateTextTagUnitBJ="Create floating text that reads ",~Message," above ",~Unit," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagUnitBJHint="Floating text created in this manner does not follow the unit's movement.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary."

DestroyTextTagBJ="Destroy"
DestroyTextTagBJ="Destroy ",~Floating Text
DestroyTextTagBJHint=

ShowTextTagForceBJ="Show/Hide"
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," for ",~Player Group
ShowTextTagForceBJHint=

SetTextTagVelocityBJ="Set Velocity"
SetTextTagVelocityBJ="Set the velocity of ",~Floating Text," to ",~Speed," towards ",~Angle," degrees"
SetTextTagVelocityBJHint="You can only accurately set the velocity of floating text once, when it is first created.  The angle is expected in degrees, with 0 being east and 90 being north."

SetTextTagColorBJ="Change Color"
SetTextTagColorBJ="Change the color of ",~Floating Text," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetTextTagColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

SetTextTagPosBJ="Change Position To Point"
SetTextTagPosBJ="Change the position of ",~Floating Text," to ",~Point," with Z offset ",~Z
SetTextTagPosBJHint=

SetTextTagPosUnitBJ="Change Position To Unit"
SetTextTagPosUnitBJ="Change the position of ",~Floating Text," to ",~Unit," with Z offset ",~Z
SetTextTagPosUnitBJHint=

SetTextTagTextBJ="Change Text"
SetTextTagTextBJ="Change text of ",~Floating Text," to ",~Message," using font size ",~Size
SetTextTagTextBJHint=

SetTextTagSuspendedBJ="Suspend/Resume"
SetTextTagSuspendedBJ="Change ",~Floating Text,": ",~Enable/Disable," suspend state"
SetTextTagSuspendedBJHint=

SetTextTagPermanentBJ="Permanent/Expires"
SetTextTagPermanentBJ="Change ",~Floating Text,": ",~Enable/Disable," permanence"
SetTextTagPermanentBJHint=

SetTextTagLifespanBJ="Change Lifespan"
SetTextTagLifespanBJ="Change the lifespan of ",~Floating Text," to ",~Time," seconds"
SetTextTagLifespanBJHint="This does not affect permanent floating text.  This sets the age at which floating text is removed and cleaned up."

SetTextTagFadepointBJ="Change Fading Age"
SetTextTagFadepointBJ="Change the fading age of ",~Floating Text," to ",~Time," seconds"
SetTextTagFadepointBJHint="This does not affect permanent floating text.  This sets the age at which floating text begins fading."

SetTextTagAgeBJ="Change Age"
SetTextTagAgeBJ="Change the age of ",~Floating Text," to ",~Time," seconds"
SetTextTagAgeBJHint="This does not affect permanent floating text."


// Game actions
DisplayTextToForce="Text Message (Auto-Timed)"
DisplayTextToForce="Display to ",~Player Group," the text: ",~Text
DisplayTextToForceHint="The text is shown for an amount of time that automatically increases with the text length."

DisplayTimedTextToForce="Text Message (Explicitly Timed)"
DisplayTimedTextToForce="Display to ",~Player Group," for ",~Time," seconds the text: ",~Text
DisplayTimedTextToForceHint=

PauseGameOn="Spiel pausieren"
PauseGameOn="Pausiere das Spiel"
PauseGameOnHint=

PauseGameOff="Spiel fortsetzen"
PauseGameOff="Setze das Spiel fort"
PauseGameOffHint=

SetGameSpeed="Set Game Speed"
SetGameSpeed="Set game speed to ",~Speed
SetGameSpeedHint="You can lock the game speed with the 'Game - Lock Game Speed' trigger action."

LockGameSpeedBJ="Lock Game Speed"
LockGameSpeedBJ="Lock the game speed"
LockGameSpeedBJHint="This prevents the game speed from being modified.  Not even triggers can modify the game speed when it is locked."

UnlockGameSpeedBJ="Unlock Game Speed"
UnlockGameSpeedBJ="Unlock the game speed"
UnlockGameSpeedBJHint="This allows the game speed to be modified again after a 'Game - Lock Game Speed' action is used."

SetMapFlag="Set Map Flag"
SetMapFlag="Set ",~Map Flag," to ",~On/Off
SetMapFlagHint=

SetTimeOfDay="Tageszeit festlegen"
SetTimeOfDay="Lege die Tageszeit auf ",~Zeit," fest"
SetTimeOfDayHint="Ein Spieltag dauert 24 Stunden.  Sechs Uhr morgens ist 6.00 und sechs Uhr abends ist 18.00."

SetTimeOfDayScalePercentBJ="Tageszeitgeschwindigkeit festlegen"
SetTimeOfDayScalePercentBJ="Lege Tageszeitgeschwindigkeit auf ",~Prozent,"% der normalen Geschwindigkeit fest"
SetTimeOfDayScalePercentBJHint="Verwenden Sie 100%, um die Geschwindigkeit auf den Standardwert zurückzusetzen."

UseTimeOfDayBJ="Turn Day/Night Cycle On/Off"
UseTimeOfDayBJ="Turn the day/night cycle ",~On/Off
UseTimeOfDayBJHint=

ShareEverythingWithTeam="Share Vision And Full Unit Control With Team"
ShareEverythingWithTeam="Grant shared vision and full shared unit control of ",~Player," units with his/her allies"
ShareEverythingWithTeamHint="Two players are considered allies if they are both allied with each other."

MakeUnitsPassiveForPlayer="Give Units To Neutral Victim"
MakeUnitsPassiveForPlayer="Give all ",~Player," units to the Neutral Victim player"
MakeUnitsPassiveForPlayerHint="By default, the Neutral Victim player treats all other players as allies, but is treated as an enemy by all other players."

SetNextLevelBJ="Set Next Level"
SetNextLevelBJ="Set the next level to ",~Level
SetNextLevelBJHint="This sets a level to be started after the current game ends."

CustomVictoryBJ="Sieg"
CustomVictoryBJ="Sieg ",~Spieler," (",~Zeige/Überspringe," Dialoge, ",~Zeige/Überspringe," Punkte)"
CustomVictoryBJHint=

CustomDefeatBJ="Niederlage"
CustomDefeatBJ="Niederlage ",~Spieler," mit der Nachricht: ",~Nachricht
CustomDefeatBJHint=

LoadGameBJ="Spiel laden"
LoadGameBJ="Lade ",~Dateiname," (",~Zeige/Überspringe," Punkte)"
LoadGameBJHint=

SaveAndLoadGameBJ="Save Game And Load Game"
SaveAndLoadGameBJ="Save game as ",~Filename," and load ",~Filename," (",~Show/Skip," scores)"
SaveAndLoadGameBJHint=

SaveAndChangeLevelBJ="Save Game And Change Level"
SaveAndChangeLevelBJ="Save game as ",~Filename," and change level to ",~Filename," (",~Show/Skip," scores)"
SaveAndChangeLevelBJHint=

RenameSaveDirectoryBJ="Rename Saved-Game Folder"
RenameSaveDirectoryBJ="Rename the ",~Folder," saved-game folder to ",~Folder
RenameSaveDirectoryBJHint=

RemoveSaveDirectoryBJ="Delete Saved-Game Folder"
RemoveSaveDirectoryBJ="Delete the ",~Folder," saved-game folder"
RemoveSaveDirectoryBJHint="This deletes the specified saved-game folder and all of its contents."

CopySaveGameBJ="Copy Saved-Game"
CopySaveGameBJ="Create a copy of the ",~Filename," saved-game and name it ",~Filename
CopySaveGameBJHint="This action only works in response to Game Load and Game Save events, and can only be used up to 16 times per event."

SetCampaignMenuRaceBJ="Set Campaign Screen"
SetCampaignMenuRaceBJ="Set campaign to ",~Campaign
SetCampaignMenuRaceBJHint=

SetMissionAvailableBJ="Enable/Disable Mission"
SetMissionAvailableBJ=~Enable/Disable," ",~Mission
SetMissionAvailableBJHint=

SetCampaignAvailableBJ="Aktiviere/Deaktiviere Kampagne"
SetCampaignAvailableBJ=~Aktiviere/Deaktiviere," die ",~Kampagne
SetCampaignAvailableBJHint=

SetCinematicAvailableBJ="Enable/Disable Cinematic"
SetCinematicAvailableBJ=~Enable/Disable," the ",~Cinematic
SetCinematicAvailableBJHint=

ShowCustomCampaignButton="Show/Hide Custom Campaign Button"
ShowCustomCampaignButton=~Show/Hide," custom campaign button ",~Number
ShowCustomCampaignButtonHint=

SetAllyColorFilterState="Set Ally Color Filter"
SetAllyColorFilterState="Set ally color filtering to ",~State
SetAllyColorFilterStateHint="A value of 0 disables filtering.  A value of 1 enables filtering for the minimap.  A value of 2 enables filtering for the minimap and the game view."

SetCreepCampFilterState="Show/Hide Creep Camps On Minimap"
SetCreepCampFilterState=~Show/Hide," creep camps on the minimap"
SetCreepCampFilterStateHint=

EnableMinimapFilterButtons="Enable/Disable Minimap Buttons"
EnableMinimapFilterButtons=~Enable/Disable," ally color button and ",~Enable/Disable," creep camp button"
EnableMinimapFilterButtonsHint=

EnableSelect="Enable/Disable Selection"
EnableSelect=~Enable/Disable," selection and deselection functionality (",~Enable/Disable," selection circles)"
EnableSelectHint="Objects can still be selected and deselected via trigger actions.  Disabling selection prevents drag-selection as well.  Selection circles are only displayed if selection is enabled."

EnableDragSelect="Enable/Disable Drag-Selection"
EnableDragSelect=~Enable/Disable," drag-selection functionality (",~Enable/Disable," drag-selection box)"
EnableDragSelectHint=

EnablePreSelect="Enable/Disable Pre-Selection"
EnablePreSelect=~Enable/Disable," pre-selection functionality (",~Enable/Disable," pre-selection circles, life bars, and object info)"
EnablePreSelectHint=

ForceUIKeyBJ="Force UI Key"
ForceUIKeyBJ="Force ",~Player," to press the key ",~Key
ForceUIKeyBJHint=

ForceUICancelBJ="Force UI Cancel"
ForceUICancelBJ="Force ",~Player," to press Escape/Cancel"
ForceUICancelBJHint=

Preload="Preload File"
Preload="Preload ",~Filename
PreloadHint=

PreloadEnd="Begin Preloading"
PreloadEnd="Begin preloading with a ",~Time," second timeout"
PreloadEndHint=

Preloader="Preload Batch"
Preloader="Preload all files listed in ",~Filename
PreloaderHint=


// Game Cache actions
InitGameCacheBJ="Create Game Cache"
InitGameCacheBJ="Create a game cache from ",~Filename
InitGameCacheBJHint="A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created."

SaveGameCacheBJ="Save Game Cache"
SaveGameCacheBJ="Save ",~Game Cache
SaveGameCacheBJHint="Saves the game cache, using the same filename from which it was created."

StoreUnitBJ="Store Unit"
StoreUnitBJ="Store ",~Unit," as ",~Label," of ",~Category," in ",~Game Cache
StoreUnitBJHint="Use the 'Game Cache - Restore Unit' actions to load this unit from a cache.  Label and Category names should not contain spaces."

StoreRealBJ="Store Real"
StoreRealBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreRealBJHint="Use the 'Game Cache - Load Real Value' function to load this value from a cache.  Label and Category names should not contain spaces."

StoreIntegerBJ="Store Integer"
StoreIntegerBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreIntegerBJHint="Use the 'Game Cache - Load Integer Value' function to load this value from a cache.  Label and Category names should not contain spaces."

StoreBooleanBJ="Store Boolean"
StoreBooleanBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreBooleanBJHint="Use the 'Game Cache - Load Boolean Value' function to load this value from a cache.  Label and Category names should not contain spaces."

StoreStringBJ="Store String"
StoreStringBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreStringBJHint="Use the 'Game Cache - Load String Value' function to load this value from a cache.  Label and Category names should not contain spaces."

RestoreUnitLocFacingAngleBJ="Restore Unit Facing Angle"
RestoreUnitLocFacingAngleBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Angle
RestoreUnitLocFacingAngleBJHint="Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'."

RestoreUnitLocFacingPointBJ="Restore Unit Facing Point"
RestoreUnitLocFacingPointBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Point
RestoreUnitLocFacingPointBJHint="Use 'Last Restored Unit' to refer to the unit created by this action.  If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'."

ReloadGameCachesFromDisk="Reload All"
ReloadGameCachesFromDisk="Reload all game cache data from disk"
ReloadGameCachesFromDiskHint=

FlushGameCacheBJ="Clear Game Cache"
FlushGameCacheBJ="Clear ",~Game Cache
FlushGameCacheBJHint="Clears all labels of all categories in a game cache."

FlushStoredMissionBJ="Clear Category"
FlushStoredMissionBJ="Clear all labels of ",~Category," in ",~Game Cache
FlushStoredMissionBJHint="Clears all labels of a specific category in a game cache."

// Hashtable actions
InitHashtableBJ="Create Hashtable"
InitHashtableBJ="Create a hashtable"
InitHashtableBJHint="A hashtable allows you to store data."

SaveRealBJ="Save Real"
SaveRealBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveRealBJHint="Use the 'Hashtable - Load Real Value' function to load this value from a hashtable."

SaveIntegerBJ="Save Integer"
SaveIntegerBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveIntegerBJHint="Use the 'Hashtable - Load Integer Value' function to load this value from a hashtable."

SaveBooleanBJ="Save Boolean"
SaveBooleanBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanBJHint="Use the 'Hashtable - Load Boolean Value' function to load this value from a hashtable."

SaveStringBJ="Save String"
SaveStringBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveStringBJHint="Use the 'Hashtable - Load String Value' function to load this value from a hashtable."

SavePlayerHandleBJ="Save Player Handle"
SavePlayerHandleBJ="Save Handle Of",~Player," as ",~Value," of ",~Value," in ",~Hashtable
SavePlayerHandleBJHint="Use the 'Hashtable - Load Player' actions to load this player from a hashtable."

SaveWidgetHandleBJ="Save Widget Handle"
SaveWidgetHandleBJ="Save Handle Of",~Widget," as ",~Value," of ",~Value," in ",~Hashtable
SaveWidgetHandleBJHint="Use the 'Hashtable - Load Widget' actions to load this widget from a hashtable."

SaveDestructableHandleBJ="Save Destructable Handle"
SaveDestructableHandleBJ="Save Handle Of",~Destructable," as ",~Value," of ",~Value," in ",~Hashtable
SaveDestructableHandleBJHint="Use the 'Hashtable - Load Destructable' actions to load this destructable from a hashtable."

SaveItemHandleBJ="Save Item Handle"
SaveItemHandleBJ="Save Handle Of",~Item," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemHandleBJHint="Use the 'Hashtable - Load Item' actions to load this item from a hashtable."

SaveUnitHandleBJ="Save Unit Handle"
SaveUnitHandleBJ="Save Handle Of",~Unit," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitHandleBJHint="Use the 'Hashtable - Load Unit' actions to load this unit from a hashtable."

SaveAbilityHandleBJ="Save Ability Handle"
SaveAbilityHandleBJ="Save Handle Of",~Ability," as ",~Value," of ",~Value," in ",~Hashtable
SaveAbilityHandleBJHint="Use the 'Hashtable - Load Ability' actions to load this ability from a hashtable."

SaveTimerHandleBJ="Save Timer Handle"
SaveTimerHandleBJ="Save Handle Of",~Timer," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerHandleBJHint="Use the 'Hashtable - Load Timer' actions to load this timer from a hashtable."

//SaveTriggerRegionHandleBJ="Save Region"
//SaveTriggerRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~Hashtable
//SaveTriggerRegionHandleBJHint="Use the 'Hashtable - Load Region' actions to load this region from a hashtable."

SaveTriggerHandleBJ="Save Trigger Handle"
SaveTriggerHandleBJ="Save Handle Of",~Trigger," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerHandleBJHint="Use the 'Hashtable - Load Trigger' actions to load this trigger from a hashtable."

SaveTriggerConditionHandleBJ="Save Triggercondition Handle"
SaveTriggerConditionHandleBJ="Save Handle Of",~Triggercondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerConditionHandleBJHint="Use the 'Hashtable - Load Triggercondition' actions to load this triggercondition from a hashtable."

SaveTriggerActionHandleBJ="Save Triggeraction Handle"
SaveTriggerActionHandleBJ="Save Handle Of",~Triggeraction," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerActionHandleBJHint="Use the 'Hashtable - Load Triggeraction' actions to load this triggeraction from a hashtable."

SaveTriggerEventHandleBJ="Save Eventid Handle"
SaveTriggerEventHandleBJ="Save Handle Of",~Eventid," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerEventHandleBJHint="Use the 'Hashtable - Load Eventid' actions to load this eventid from a hashtable."

SaveForceHandleBJ="Save Force Handle"
SaveForceHandleBJ="Save Handle Of",~Force," as ",~Value," of ",~Value," in ",~Hashtable
SaveForceHandleBJHint="Use the 'Hashtable - Load Force' actions to load this force from a hashtable."

SaveGroupHandleBJ="Save Group Handle"
SaveGroupHandleBJ="Save Handle Of",~Group," as ",~Value," of ",~Value," in ",~Hashtable
SaveGroupHandleBJHint="Use the 'Hashtable - Load Group' actions to load this group from a hashtable."

SaveLocationHandleBJ="Save Location Handle"
SaveLocationHandleBJ="Save Handle Of",~Location," as ",~Value," of ",~Value," in ",~Hashtable
SaveLocationHandleBJHint="Use the 'Hashtable - Load Location' actions to load this location from a hashtable."

SaveRegionHandleBJ="Save Region Handle"
SaveRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~Hashtable
SaveRegionHandleBJHint="Use the 'Hashtable - Load Region' actions to load this region from a hashtable."

SaveRectHandleBJ="Save Rect Handle"
SaveRectHandleBJ="Save Handle Of",~Rect," as ",~Value," of ",~Value," in ",~Hashtable
SaveRectHandleBJHint="Use the 'Hashtable - Load Rect' actions to load this rect from a hashtable."

SaveBooleanExprHandleBJ="Save Boolexpr Handle"
SaveBooleanExprHandleBJ="Save Handle Of",~Boolexpr," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanExprHandleBJHint="Use the 'Hashtable - Load Boolexpr' actions to load this boolexpr from a hashtable."

//SaveConditionFuncHandleBJ="Save Conditionfunc Handle"
//SaveConditionFuncHandleBJ="Save Handle Of",~Conditionfunc," as ",~Value," of ",~Value," in ",~Hashtable
//SaveConditionFuncHandleBJHint="Use the 'Hashtable - Load Conditionfunc' actions to load this conditionfunc from a hashtable."

//SaveFilterFuncHandleBJ="Save Filterfunc Handle"
//SaveFilterFuncHandleBJ="Save Handle Of",~Filterfunc," as ",~Value," of ",~Value," in ",~Hashtable
//SaveFilterFuncHandleBJHint="Use the 'Hashtable - Load Filterfunc' actions to load this filterfunc from a hashtable."

SaveSoundHandleBJ="Save Sound Handle"
SaveSoundHandleBJ="Save Handle Of",~Sound," as ",~Value," of ",~Value," in ",~Hashtable
SaveSoundHandleBJHint="Use the 'Hashtable - Load Sound' actions to load this sound from a hashtable."

//SaveRaceHandleBJ="Save Race Handle"
//SaveRaceHandleBJ="Save Handle Of",~Race," as ",~Value," of ",~Value," in ",~Hashtable
//SaveRaceHandleBJHint="Use the 'Hashtable - Load Race' actions to load this race from a hashtable."

SaveEffectHandleBJ="Save Effect Handle"
SaveEffectHandleBJ="Save Handle Of",~Effect," as ",~Value," of ",~Value," in ",~Hashtable
SaveEffectHandleBJHint="Use the 'Hashtable - Load Effect' actions to load this effect from a hashtable."

SaveUnitPoolHandleBJ="Save Unitpool Handle"
SaveUnitPoolHandleBJ="Save Handle Of",~Unitpool," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitPoolHandleBJHint="Use the 'Hashtable - Load Unitpool' actions to load this unitpool from a hashtable."

SaveItemPoolHandleBJ="Save Itempool Handle"
SaveItemPoolHandleBJ="Save Handle Of",~Itempool," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemPoolHandleBJHint="Use the 'Hashtable - Load Itempool' actions to load this itempool from a hashtable."

SaveQuestHandleBJ="Save Quest Handle"
SaveQuestHandleBJ="Save Handle Of",~Quest," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestHandleBJHint="Use the 'Hashtable - Load Quest' actions to load this quest from a hashtable."

SaveQuestItemHandleBJ="Save Questitem Handle"
SaveQuestItemHandleBJ="Save Handle Of",~Questitem," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestItemHandleBJHint="Use the 'Hashtable - Load Questitem' actions to load this questitem from a hashtable."

SaveDefeatConditionHandleBJ="Save Defeatcondition Handle"
SaveDefeatConditionHandleBJ="Save Handle Of",~Defeatcondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveDefeatConditionHandleBJHint="Use the 'Hashtable - Load Defeatcondition' actions to load this defeatcondition from a hashtable."

SaveTimerDialogHandleBJ="Save Timerdialog Handle"
SaveTimerDialogHandleBJ="Save Handle Of",~Timerdialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerDialogHandleBJHint="Use the 'Hashtable - Load Timerdialog' actions to load this timerdialog from a hashtable."

SaveLeaderboardHandleBJ="Save Leaderboard Handle"
SaveLeaderboardHandleBJ="Save Handle Of",~Leaderboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveLeaderboardHandleBJHint="Use the 'Hashtable - Load Leaderboard' actions to load this leaderboard from a hashtable."

SaveMultiboardHandleBJ="Save Multiboard Handle"
SaveMultiboardHandleBJ="Save Handle Of",~Multiboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardHandleBJHint="Use the 'Hashtable - Load Multiboard' actions to load this multiboard from a hashtable."

SaveMultiboardItemHandleBJ="Save Multiboarditem Handle"
SaveMultiboardItemHandleBJ="Save Handle Of",~Multiboarditem," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardItemHandleBJHint="Use the 'Hashtable - Load Multiboarditem' actions to load this multiboarditem from a hashtable."

SaveTrackableHandleBJ="Save Trackable Handle"
SaveTrackableHandleBJ="Save Handle Of",~Trackable," as ",~Value," of ",~Value," in ",~Hashtable
SaveTrackableHandleBJHint="Use the 'Hashtable - Load Trackable' actions to load this trackable from a hashtable."

SaveGameCacheHandleBJ="Save Gamecache Handle"
SaveGameCacheHandleBJ="Save Handle Of",~Gamecache," as ",~Value," of ",~Value," in ",~Hashtable
SaveGameCacheHandleBJHint="Use the 'Hashtable - Load Gamecache' actions to load this gamecache from a hashtable."

SaveDialogHandleBJ="Save Dialog Handle"
SaveDialogHandleBJ="Save Handle Of",~Dialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveDialogHandleBJHint="Use the 'Hashtable - Load Dialog' actions to load this dialog from a hashtable."

SaveButtonHandleBJ="Save Button Handle"
SaveButtonHandleBJ="Save Handle Of",~Button," as ",~Value," of ",~Value," in ",~Hashtable
SaveButtonHandleBJHint="Use the 'Hashtable - Load Button' actions to load this button from a hashtable."

//SaveVersionHandleBJ="Save Version Handle"
//SaveVersionHandleBJ="Save Handle Of",~Version," as ",~Value," of ",~Value," in ",~Hashtable
//SaveVersionHandleBJHint="Use the 'Hashtable - Load Version' actions to load this version from a hashtable."

//SaveItemTypeHandleBJ="Save Itemtype Handle"
//SaveItemTypeHandleBJ="Save Handle Of",~Itemtype," as ",~Value," of ",~Value," in ",~Hashtable
//SaveItemTypeHandleBJHint="Use the 'Hashtable - Load Itemtype' actions to load this itemtype from a hashtable."

SaveTextTagHandleBJ="Save Texttag Handle"
SaveTextTagHandleBJ="Save Handle Of",~Texttag," as ",~Value," of ",~Value," in ",~Hashtable
SaveTextTagHandleBJHint="Use the 'Hashtable - Load Texttag' actions to load this texttag from a hashtable."

SaveLightningHandleBJ="Save Lightning Handle"
SaveLightningHandleBJ="Save Handle Of",~Lightning," as ",~Value," of ",~Value," in ",~Hashtable
SaveLightningHandleBJHint="Use the 'Hashtable - Load Lightning' actions to load this lightning from a hashtable."

SaveImageHandleBJ="Save Image Handle"
SaveImageHandleBJ="Save Handle Of",~Image," as ",~Value," of ",~Value," in ",~Hashtable
SaveImageHandleBJHint="Use the 'Hashtable - Load Image' actions to load this image from a hashtable."

SaveUbersplatHandleBJ="Save Ubersplat Handle"
SaveUbersplatHandleBJ="Save Handle Of",~Ubersplat," as ",~Value," of ",~Value," in ",~Hashtable
SaveUbersplatHandleBJHint="Use the 'Hashtable - Load Ubersplat' actions to load this ubersplat from a hashtable."

SaveFogStateHandleBJ="Save Fogstate Handle"
SaveFogStateHandleBJ="Save Handle Of",~Fogstate," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogStateHandleBJHint="Use the 'Hashtable - Load Fogstate' actions to load this fogstate from a hashtable."

SaveFogModifierHandleBJ="Save Fogmodifier Handle"
SaveFogModifierHandleBJ="Save Handle Of",~Fogmodifier," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogModifierHandleBJHint="Use the 'Hashtable - Load Fogmodifier' actions to load this fogmodifier from a hashtable."

FlushParentHashtableBJ="Clear Parent Hashtable"
FlushParentHashtableBJ="Clear ",~Hashtable
FlushParentHashtableBJHint="Clears all parent and child hashtables."

FlushChildHashtableBJ="Clear Child Hashtable"
FlushChildHashtableBJ="Clear all child hashtables of child ",~Value," in ",~Hashtable
FlushChildHashtableBJHint="Clears all childen of a specific parent in a hashtable."

// Hero actions
SelectHeroSkill="Learn Skill"
SelectHeroSkill="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkillHint="This only works if the Hero has at least one skill point to spend."

SetHeroLevel="Set Level"
SetHeroLevel="Set ",~Hero," Hero-level to ",~Level,", ",~Show/Hide," level-up graphics"
SetHeroLevelHint=

SetHeroXP="Set Experience"
SetHeroXP="Set ",~Hero," experience to ",~Quantity,", ",~Show/Hide," level-up graphics"
SetHeroXPHint=

AddHeroXPSwapped="Add Experience"
AddHeroXPSwapped="Add ",~Quantity," experience to ",~Hero,", ",~Show/Hide," level-up graphics"
AddHeroXPSwappedHint=

SuspendHeroXPBJ="Enable/Disable Experience Gain"
SuspendHeroXPBJ=~Enable/Disable," experience gain for ",~Hero
SuspendHeroXPBJHint=

SetPlayerHandicapXPBJ="Set Experience Rate"
SetPlayerHandicapXPBJ="Make ",~Player," Heroes gain ",~Percent,"% experience from future kills"
SetPlayerHandicapXPBJHint=

ReviveHeroLoc="Belebe wieder (sofort)"
ReviveHeroLoc="Belebe ",~Held," an ",~Punkt," sofort wieder, ",~Zeige/Verberge," Wiederbelebungsgrafik"
ReviveHeroLocHint="This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive."

ModifyHeroStat="Modify Hero Attribute"
ModifyHeroStat="Modify ",~Attribute," of ",~Hero,": ",~Modify," ",~Value
ModifyHeroStatHint=

ModifyHeroSkillPoints="Modify Hero Skill Points"
ModifyHeroSkillPoints="Modify unspent skill points of ",~Hero,": ",~Modify," ",~Value," points"
ModifyHeroSkillPointsHint=

SetReservedLocalHeroButtons="Reserve Hero Buttons"
SetReservedLocalHeroButtons="Reserve ",~Number," Hero buttons for the local player"
SetReservedLocalHeroButtonsHint="Button slots reserved by this action are not used by Heroes controlled via shared unit control."

UnitAddItemSwapped="Gebe Gegenstand einem Helden"
UnitAddItemSwapped="Gebe ",~Gegenstand," ",~Held
UnitAddItemSwappedHint=

UnitAddItemByIdSwapped="Create Item For Hero"
UnitAddItemByIdSwapped="Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint=

UnitRemoveItemSwapped="Drop Item From Hero"
UnitRemoveItemSwapped="Drop ",~Item," from ",~Hero
UnitRemoveItemSwappedHint="The item is removed from the Hero and placed on the ground at the Hero's feet."

UnitRemoveItemFromSlotSwapped="Drop Item From Hero Inventory Slot"
UnitRemoveItemFromSlotSwapped="Drop the item from slot ",~Index," of ",~Hero
UnitRemoveItemFromSlotSwappedHint="If an item exists in the given slot, it is removed from the Hero and placed on the ground at the Hero's feet."

UnitUseItemTarget="Use Item On A Unit"
UnitUseItemTarget="Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint=

UnitUseItemPointLoc="Use Item On A Point"
UnitUseItemPointLoc="Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint=

UnitUseItemDestructable="Use Item On A Destructible"
UnitUseItemDestructable="Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint=

UnitUseItem="Gegenstand verwenden"
UnitUseItem="Befehle ",~Held," ",~Item," zu verwenden"
UnitUseItemHint=


// Item actions
CreateItemLoc="Erzeugen"
CreateItemLoc="Erzeuge ",~Gegenstand," an ",~Punkt
CreateItemLocHint=

RemoveItem="Entfernen"
RemoveItem="Entferne ",~Gegenstand
RemoveItemHint=

SetItemVisibleBJ="Gegenstand zeigen/verbergen"
SetItemVisibleBJ=~Zeigen/Verbergen," ",~Gegenstand
SetItemVisibleBJHint="This hides items on the ground.  It does not affect items held by units."

SetItemPositionLoc="Verschieben (sofort)"
SetItemPositionLoc="Verschiebe ",~Gegenstand," nach ",~Punkt
SetItemPositionLocHint=

SetItemLifeBJ="Leben festlegen"
SetItemLifeBJ="Lege Leben von ",~Gegenstand," auf ",~Wert," fest"
SetItemLifeBJHint=

SetItemCharges="Verbleibende Aufladungen festlegen"
SetItemCharges="Lege verbleibende Aufladungen von ",~Gegenstand," auf ",~Aufladungen," fest"
SetItemChargesHint="Verwenden Sie einen Wert von null, um dem Gegenstand unbegrenzte Aufladungen zu geben."

SetItemInvulnerableBJ="Unverwundbar/verwundbar machen"
SetItemInvulnerableBJ="Mache ",~Gegenstand," ",~verwundbar/unverwundbar
SetItemInvulnerableBJHint=

SetItemPawnable="Verpfändbar machen"
SetItemPawnable="Mache ",~Gegenstand," ",~verpfändbar/unverpfändbar
SetItemPawnableHint="Ein verpfändbarer Gegenstand kann an Gegenstandsverkäufern verkauft werden."

SetItemDroppableBJ="Make Undroppable"
SetItemDroppableBJ="Make ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint="An undroppable item cannot be removed from a Hero's inventory once it has been picked up."

SetItemDropOnDeathBJ="Make Item Drop From Heroes Upon Death"
SetItemDropOnDeathBJ="Make ",~Item," ",~Drop from/Stay with," Heroes upon death"
SetItemDropOnDeathBJHint=

SetItemPlayerBJ="Change Owner"
SetItemPlayerBJ="Change ownership of ",~Item," to ",~Player," and ",~Change/Retain Color
SetItemPlayerBJHint="Not all items are capable of changing color."

SetItemUserData="Set Custom Value"
SetItemUserData="Set the custom value of ",~Item," to ",~Index
SetItemUserDataHint="Custom values are only used in triggers, and can be used to store any integer value."

EnumItemsInRectBJMultiple="Pick Every Item In Region And Do Multiple Actions"
EnumItemsInRectBJMultiple="Pick every item in ",~Region," and do (Actions)"
EnumItemsInRectBJMultipleHint="Use 'Picked Item' to refer each item as it is picked.  This works for every item in the region, including hidden items.  Wait actions should not be used within this function.  Add actions to this function in the main display."

EnumItemsInRectBJ="Pick Every Item In Region And Do Action"
EnumItemsInRectBJ="Pick every item in ",~Region," and do ",~Action
EnumItemsInRectBJHint="Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function."


// Image actions
CreateImageBJ="Create"
CreateImageBJ="Create an image using ",~Image," of size ",~Size," at ",~Point," with Z offset ",~Z," using image type ",~Type
CreateImageBJHint="Use 'Image - Change Render Always State' to toggle display of this image.  By default, images are not rendered.  The point specified is used as the bottom-left corner of the image.  Images need an alpha channel in order to be displayed properly."

DestroyImage="Destroy"
DestroyImage="Destroy ",~Image
DestroyImageHint=

ShowImageBJ="Show/Hide"
ShowImageBJ=~Show/Hide," ",~Image
ShowImageBJHint=

SetImageConstantHeight="Change Constant Height"
SetImageConstantHeight="Change the height state of ",~Image," to ",~Enable/Disable," at ",~Height
SetImageConstantHeightHint=

SetImagePositionBJ="Change Position"
SetImagePositionBJ="Change the position of ",~Image," to ",~Position," with Z offset ",~Z
SetImagePositionBJHint="The point specified is used as the bottom-left corner of the image."

SetImageColorBJ="Change Color"
SetImageColorBJ="Change the color of ",~Image," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetImageColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

SetImageRender="Change Render State"
SetImageRender="Change ",~Image,": ",~Enable/Disable," rendering state"
SetImageRenderHint=

SetImageRenderAlways="Change Render Always State"
SetImageRenderAlways="Change ",~Image,": ",~Enable/Disable," render always state"
SetImageRenderAlwaysHint=

SetImageAboveWater="Change Above Water State"
SetImageAboveWater="Change ",~Image,": ",~Enable/Disable," above water state, ",~Enable/Disable," water alpha inheritance"
SetImageAboveWaterHint=

SetImageType="Change Type"
SetImageType="Change type of ",~Image," to ",~Type
SetImageTypeHint=

// Leaderboard actions
CreateLeaderboardBJ="Create"
CreateLeaderboardBJ="Create a leaderboard for ",~Player Group," titled ",~Title
CreateLeaderboardBJHint="Leaderboards cannot be displayed at map initialization.  If no title is specified, the title line will not be displayed."

DestroyLeaderboardBJ="Destroy"
DestroyLeaderboardBJ="Destroy ",~Leaderboard
DestroyLeaderboardBJHint=

LeaderboardSortItemsBJ="Sortiere"
LeaderboardSortItemsBJ="Sortiere ",~Bestenliste," nach ",~Feld," in ",~aufsteigender/absteigender," Reihenfolge"
LeaderboardSortItemsBJHint=

LeaderboardDisplayBJ="Show/Hide"
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint="Leaderboards cannot be displayed at map initialization."

LeaderboardSetLabelBJ="Change Title"
LeaderboardSetLabelBJ="Change the title of ",~Leaderboard," to ",~Title
LeaderboardSetLabelBJHint=

LeaderboardSetLabelColorBJ="Change Label Colors"
LeaderboardSetLabelColorBJ="Change the color of all labels for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetLabelColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

LeaderboardSetValueColorBJ="Change Value Colors"
LeaderboardSetValueColorBJ="Change the color of all values for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetValueColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

LeaderboardSetStyleBJ="Change Style"
LeaderboardSetStyleBJ="Change the display style for ",~Leaderboard," to ",~Show/Hide," the title, ",~Show/Hide," labels, ",~Show/Hide," values, and ",~Show/Hide," icons"
LeaderboardSetStyleBJHint=

LeaderboardAddItemBJ="Spieler hinzufügen"
LeaderboardAddItemBJ="Füge ",~Spieler," zu ",~Bestenliste," mit Kennung ",~Kennung," und Wert ",~Wert," hinzu"
LeaderboardAddItemBJHint=

LeaderboardRemovePlayerItemBJ="Spieler entfernen"
LeaderboardRemovePlayerItemBJ="Entferne ",~Spieler," von ",~Bestenliste
LeaderboardRemovePlayerItemBJHint=

LeaderboardSetPlayerItemLabelBJ="Spielerkennung ändern"
LeaderboardSetPlayerItemLabelBJ="Ändere die Kennung für ",~Spieler," in ",~Bestenliste," zu ",~Kennung
LeaderboardSetPlayerItemLabelBJHint=

LeaderboardSetPlayerItemLabelColorBJ="Change Player Label Color"
LeaderboardSetPlayerItemLabelColorBJ="Change the color of the label for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemLabelColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

LeaderboardSetPlayerItemValueBJ="Change Player Value"
LeaderboardSetPlayerItemValueBJ="Change the value for ",~Player," in ",~Leaderboard," to ",~Value
LeaderboardSetPlayerItemValueBJHint=

LeaderboardSetPlayerItemValueColorBJ="Change Player Value Color"
LeaderboardSetPlayerItemValueColorBJ="Change the color of the value for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemValueColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

LeaderboardSetPlayerItemStyleBJ="Change Player Style"
LeaderboardSetPlayerItemStyleBJ="Change the display style for ",~Player," in ",~Leaderboard," to ",~Show/Hide," the label, ",~Show/Hide," the value, and ",~Show/Hide," the icon"
LeaderboardSetPlayerItemStyleBJHint=


// Lightning actions
AddLightningLoc="Create Lightning Effect"
AddLightningLoc="Create a ",~Type," lightning effect from source ",~Point," to target ",~Point
AddLightningLocHint=

DestroyLightningBJ="Destroy Lightning Effect"
DestroyLightningBJ="Destroy ",~Lightning
DestroyLightningBJHint=

MoveLightningLoc="Move Lightning Effect"
MoveLightningLoc="Move ",~Lightning," to source ",~Point," and target ",~Point
MoveLightningLocHint=

SetLightningColorBJ="Set Lightning Effect Color"
SetLightningColorBJ="Change color of ",~Lightning," to (",~Red," ",~Green," ",~Blue,") with ",~Alpha," alpha"
SetLightningColorBJHint="The color values are (Red, Green, Blue).  Color and alpha values are expected in the range of 0 to 1.  A lightning effect with 0 alpha is completely invisible."


// Melee Game actions
MeleeStartingVisibility="Use Melee Time Of Day"
MeleeStartingVisibility="Use melee time of day (for all players)"
MeleeStartingVisibilityHint=

MeleeStartingHeroLimit="Heldenbeschränkungen"
MeleeStartingHeroLimit="Beschränke Helden pro Heldentyp auf 1 (für alle Spieler)"
MeleeStartingHeroLimitHint=

MeleeGrantHeroItems="Helden-Startgegenstände"
MeleeGrantHeroItems="Gebe ausgebildeten Helden eine Rolle des Stadtportals (für alle Spieler)"
MeleeGrantHeroItemsHint=

MeleeStartingResources="Start-Rohstoffe festlegen"
MeleeStartingResources="Lege Start-Rohstoffe fest (für alle Spieler)"
MeleeStartingResourcesHint=

MeleeClearExcessUnits="Remove Excess Units"
MeleeClearExcessUnits="Remove creeps and critters from used start locations (for all players)"
MeleeClearExcessUnitsHint="Removes all Neutral Hostile units and non-building Neutral Passive units within a radius of 1024 around each used start location."

MeleeStartingUnits="Create Starting Units"
MeleeStartingUnits="Create starting units (for all players)"
MeleeStartingUnitsHint=

MeleeStartingAI="Run AI"
MeleeStartingAI="Run melee AI scripts (for computer players)"
MeleeStartingAIHint="Players should have starting units and resources before this action is run."

MeleeInitVictoryDefeat="Victory/Defeat Conditions"
MeleeInitVictoryDefeat="Enforce victory/defeat conditions (for all players)"
MeleeInitVictoryDefeatHint="Players should have starting units before this action is run."

MeleeStartingUnitsForPlayer="Create Starting Units For Player"
MeleeStartingUnitsForPlayer="Create ",~Race," starting units for ",~Player," at ",~Point," (",~Include/Exclude," Heroes)"
MeleeStartingUnitsForPlayerHint="This action creates the same starting units that are created for melee games."


// Multiboard actions
CreateMultiboardBJ="Create"
CreateMultiboardBJ="Create a multiboard with ",~Columns," columns and ",~Rows," rows, titled ",~Title
CreateMultiboardBJHint="Multiboards cannot be displayed at map initialization."

DestroyMultiboardBJ="Destroy"
DestroyMultiboardBJ="Destroy ",~Multiboard
DestroyMultiboardBJHint=

MultiboardDisplayBJ="Show/Hide"
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint="Multiboards cannot be displayed at map initialization."

MultiboardAllowDisplayBJ="Show/Hide All Multiboards"
MultiboardAllowDisplayBJ=~Show/Hide," all multiboards"
MultiboardAllowDisplayBJHint=

MultiboardMinimizeBJ="Minimize/Maximize"
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint="A minimized multiboard will only display the title."

MultiboardClear="Clear"
MultiboardClear="Clear ",~Multiboard
MultiboardClearHint="This will remove all rows and columns from the multiboard."

MultiboardSetTitleText="Change Title"
MultiboardSetTitleText="Change the title of ",~Multiboard," to ",~Title
MultiboardSetTitleTextHint=

MultiboardSetTitleTextColorBJ="Change Title Color"
MultiboardSetTitleTextColorBJ="Change the color of the title for ",~Multiboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetTitleTextColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

MultiboardSetRowCount="Change Number Of Rows"
MultiboardSetRowCount="Change the number of rows for ",~Multiboard," to ",~Rows
MultiboardSetRowCountHint=

MultiboardSetColumnCount="Change Number Of Columns"
MultiboardSetColumnCount="Change the number of columns for ",~Multiboard," to ",~Columns
MultiboardSetColumnCountHint=

MultiboardSetItemStyleBJ="Set Item Display Style"
MultiboardSetItemStyleBJ="Set the display style for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Show/Hide," text and ",~Show/Hide," icons"
MultiboardSetItemStyleBJHint="Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows."

MultiboardSetItemValueBJ="Set Item Text"
MultiboardSetItemValueBJ="Set the text for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Text
MultiboardSetItemValueBJHint="Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows."

MultiboardSetItemColorBJ="Set Item Color"
MultiboardSetItemColorBJ="Set the color for ",~Multiboard," item in column ",~Column,", row ",~Row," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetItemColorBJHint="Use a column value of zero to affect all columns.  Use a row value of zero to affect all rows.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."

MultiboardSetItemWidthBJ="Set Item Width"
MultiboardSetItemWidthBJ="Set the width for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Width,"% of the total screen width"
MultiboardSetItemWidthBJHint=

MultiboardSetItemIconBJ="Set Item Icon"
MultiboardSetItemIconBJ="Set the icon for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Icon File
MultiboardSetItemIconBJHint=


// Neutral Building actions
AddResourceAmountBJ="Gold zur Goldmine hinzufügen"
AddResourceAmountBJ="Füge ",~Menge," Gold zu ",~Goldmine," hinzu"
AddResourceAmountBJHint="Verwenden Sie einen negativen Wert, um den Wert abzuziehen."

SetResourceAmount="Rohstoffe einer Goldmine festlegen"
SetResourceAmount="Lege für ",~Goldmine," ",~Menge," Gold fest"
SetResourceAmountHint=

BlightGoldMineForPlayer="Haunt Gold Mine (Instantly)"
BlightGoldMineForPlayer="Haunt ",~Gold Mine," for ",~Player
BlightGoldMineForPlayerHint="This replaces the Gold Mine with a Haunted Gold Mine of equal resources."

WaygateActivateBJ="Portal aktivieren/deaktivieren"
WaygateActivateBJ=~Aktiviere/Deaktiviere," ",~Portal
WaygateActivateBJHint=

WaygateSetDestinationLocBJ="Portalziel festlegen"
WaygateSetDestinationLocBJ="Lege ",~Portal,"-Ziel nach ",~Ziel
WaygateSetDestinationLocBJHint=

SetAltMinimapIcon="Minikarten-Extrasymbol ändern"
SetAltMinimapIcon="Ändere Minikarten-Extrasymbol zu ",~Bild
SetAltMinimapIconHint="Das für diese Aktion verwendete Bild muss eine exakte Größe von 16x16 Pixeln haben."

UnitSetUsesAltIconBJ="Turn Special Minimap Icon On/Off"
UnitSetUsesAltIconBJ="Turn special minimap icon ",~On/Off," for ",~Unit
UnitSetUsesAltIconBJHint="Use the 'Neutral Building - Change Special Minimap Icon' action to control the icon that is displayed."

AddItemToStockBJ="Add Item-Type (To Marketplace)"
AddItemToStockBJ="Add ",~Item-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddItemToStockBJHint="This only affects a building if it has the 'Sell Items' ability."

AddItemToAllStock="Add Item-Type (To All Marketplaces)"
AddItemToAllStock="Add ",~Item-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddItemToAllStockHint="This affects all buildings that have the 'Sell Items' ability."

AddUnitToStockBJ="Add Unit-Type (To Marketplace)"
AddUnitToStockBJ="Add ",~Unit-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddUnitToStockBJHint="This only affects a building if it has the 'Sell Units' ability."

AddUnitToAllStock="Add Unit-Type (To All Marketplaces)"
AddUnitToAllStock="Add ",~Unit-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddUnitToAllStockHint="This affects all buildings that have the 'Sell Units' ability."

RemoveItemFromStockBJ="Remove Item-Type (From Marketplace)"
RemoveItemFromStockBJ="Remove ",~Item-Type," from ",~Marketplace
RemoveItemFromStockBJHint="This only affects a building if it has the 'Sell Items' ability."

RemoveItemFromAllStock="Remove Item-Type (From All Marketplaces)"
RemoveItemFromAllStock="Remove ",~Item-Type," from all marketplaces"
RemoveItemFromAllStockHint="This affects all buildings that have the 'Sell Items' ability."

RemoveUnitFromStockBJ="Remove Unit-Type (From Marketplace)"
RemoveUnitFromStockBJ="Remove ",~Unit-Type," from ",~Marketplace
RemoveUnitFromStockBJHint="This only affects a building if it has the 'Sell Units' ability."

RemoveUnitFromAllStock="Remove Unit-Type (From All Marketplaces)"
RemoveUnitFromAllStock="Remove ",~Unit-Type," from all marketplaces"
RemoveUnitFromAllStockHint="This affects all buildings that have the 'Sell Units' ability."

SetItemTypeSlots="Limit Item Slots (Of Marketplace)"
SetItemTypeSlots="Limit ",~Marketplace," to ",~Quantity," item slots"
SetItemTypeSlotsHint="This only affects a building if it has the 'Sell Items' ability."

SetAllItemTypeSlots="Limit Item Slots (Of All Marketplaces)"
SetAllItemTypeSlots="Limit all marketplaces to ",~Quantity," item slots"
SetAllItemTypeSlotsHint="This affects all buildings that have the 'Sell Items' ability."

SetUnitTypeSlots="Limit Unit Slots (Of Marketplace)"
SetUnitTypeSlots="Limit ",~Marketplace," to ",~Quantity," unit slots"
SetUnitTypeSlotsHint="This only affects a building if it has the 'Sell Units' ability."

SetAllUnitTypeSlots="Limit Unit Slots (Of All Marketplaces)"
SetAllUnitTypeSlots="Limit all marketplaces to ",~Quantity," unit slots"
SetAllUnitTypeSlotsHint="This affects all buildings that have the 'Sell Units' ability."


// Player actions
SetPlayerState="Eigenschaft festlegen"
SetPlayerState="Lege ",~Spieler," ",~Eigenschaft," auf ",~Wert," fest"
SetPlayerStateHint=

AdjustPlayerStateBJ="Add Property"
AdjustPlayerStateBJ="Add ",~Value," to ",~Player," ",~Property
AdjustPlayerStateBJHint="Use a negative number to subtract."

SetPlayerFlagBJ="Turn Player Flag On/Off"
SetPlayerFlagBJ="Turn ",~Player Flag," ",~On/Off," for ",~Player
SetPlayerFlagBJHint=

SetPlayerTaxRateBJ="Divert Player Income (Tax)"
SetPlayerTaxRateBJ="Divert ",~Rate,"% of the ",~Resource," income of ",~Player," to ",~Player
SetPlayerTaxRateBJHint="Income lost in this way can be accessed using the 'Player Score' function with 'Gold/Lumber Lost To Tax' values."

EnableCreepSleepBJ="Enable/Disable Sleeping For All Creeps"
EnableCreepSleepBJ=~Enable/Disable," sleeping for all creeps"
EnableCreepSleepBJHint="This affects nocturnal sleep, not magical sleep."

SetPlayerAllianceStateBJ="Set Alliance"
SetPlayerAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetPlayerAllianceStateBJHint="Note that neutral player slots cannot share their vision."

SetPlayerAllianceBJ="Set Aspect Of Alliance"
SetPlayerAllianceBJ="For ",~Player,", turn ",~Alliance Type," ",~On/Off," toward ",~Player
SetPlayerAllianceBJHint="This modifies one aspect of a player's alliance state, leaving others untouched.  Note that neutral player slots cannot share their vision."

SetPlayerAbilityAvailableBJ="Enable/Disable Ability"
SetPlayerAbilityAvailableBJ=~Enable/Disable," ",~Ability," for ",~Player
SetPlayerAbilityAvailableBJHint=

SetPlayerUnitAvailableBJ="Set Training/Construction Availability Of Unit"
SetPlayerUnitAvailableBJ="Make ",~Unit-Type," ",~Available/Unavailable," for training/construction by ",~Player
SetPlayerUnitAvailableBJHint="This determines whether or not a type of unit can be trained or constructed by a player."

SetPlayerUnitMaxAllowed="Limit Training Of Unit-Type"
SetPlayerUnitMaxAllowed="Limit training of ",~Unit-Type," to ",~Limit," for ",~Player
SetPlayerUnitMaxAllowedHint="A limit of -1 allows unlimited training of the unit-type.  A limit of 0 makes the unit-type unavailable for training."

SetPlayerMaxHeroesAllowed="Limit Training Of Heroes"
SetPlayerMaxHeroesAllowed="Limit training of Heroes to ",~Limit," for ",~Player
SetPlayerMaxHeroesAllowedHint="A limit of -1 allows unlimited training of Heroes.  A limit of 0 makes Heroes unavailable for training."

SetPlayerTechResearchedSwap="Set Current Research Level"
SetPlayerTechResearchedSwap="Set the current research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechResearchedSwapHint="Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades.  Tech cannot be unlearned through the use of this action."

SetPlayerTechMaxAllowedSwap="Set Max Research Level"
SetPlayerTechMaxAllowedSwap="Set the max research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechMaxAllowedSwapHint="Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades."

SetPlayerColorBJ="Change Color"
SetPlayerColorBJ="Change color of ",~Player," to ",~Color,", ",~Changing/Retaining color," of existing units"
SetPlayerColorBJHint=

SetPlayerHandicapBJ="Set Handicap"
SetPlayerHandicapBJ="Set ",~Player," handicap to ",~Percent,"%"
SetPlayerHandicapBJHint="Handicaps apply to the max life of all units owned or created for the player.  Heroes are less affected by handicaps than non-Hero units."

SetPlayerOnScoreScreenBJ="Show/Hide In Score Screen"
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," in the post-game score screen"
SetPlayerOnScoreScreenBJHint=

SetPlayerName="Set Name"
SetPlayerName="Set name of ",~Player," to ",~Name
SetPlayerNameHint=


// Player Group actions
ForForceMultiple="Pick Every Player In Player Group And Do Multiple Actions"
ForForceMultiple="Pick every player in ",~Player Group," and do (Actions)"
ForForceMultipleHint="Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function.  Add actions to this function in the main display."

ForForce="Pick Every Player In Player Group And Do Action"
ForForce="Pick every player in ",~Player Group," and do ",~Action
ForForceHint="Use 'Picked Player' to refer each player as he/she is picked.  Wait actions should not be used within this function."

ForceAddPlayerSimple="Add Player"
ForceAddPlayerSimple="Add ",~Player," to ",~Player Group
ForceAddPlayerSimpleHint="This adds a player to a Player Group variable.  This does not affect the player."

ForceRemovePlayerSimple="Remove Player"
ForceRemovePlayerSimple="Remove ",~Player," from ",~Player Group
ForceRemovePlayerSimpleHint="This removes a player from a Player Group variable.  This does not affect the player."

ForceClear="Clear"
ForceClear="Remove all players from ",~Player Group
ForceClearHint="This removes all players from a Player Group variable.  This does not affect the players themselves."

SetForceAllianceStateBJ="Set Alliance"
SetForceAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetForceAllianceStateBJHint="Note that neutral player slots cannot share their vision."


// Quest actions
QuestMessageBJ="Quest Message"
QuestMessageBJ="Display to ",~Player Group," the ",~Quest Message Type," message: ",~Message
QuestMessageBJHint=

CreateQuestBJ="Create Quest"
CreateQuestBJ="Create a ",~Quest Type," quest titled ",~Title," with the description ",~Description,", using icon path ",~Icon Path
CreateQuestBJHint=

DestroyQuestBJ="Destroy Quest"
DestroyQuestBJ="Destroy ",~Quest
DestroyQuestBJHint="Destroyed quests are removed from the quest log."

QuestSetEnabledBJ="Enable/Disable Quest"
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint="Disabled quests are not displayed in the quest log."

QuestSetCompletedBJ="Mark Quest As Completed"
QuestSetCompletedBJ="Mark ",~Quest," as ",~Completed/Incomplete
QuestSetCompletedBJHint=

QuestSetFailedBJ="Mark Quest As Failed"
QuestSetFailedBJ="Mark ",~Quest," as ",~Failed/Not Failed
QuestSetFailedBJHint=

QuestSetDiscoveredBJ="Mark Quest As Discovered"
QuestSetDiscoveredBJ="Mark ",~Quest," as ",~Discovered/Undiscovered
QuestSetDiscoveredBJHint=

QuestSetTitleBJ="Change Quest Title"
QuestSetTitleBJ="Change the title of ",~Quest," to ",~Title
QuestSetTitleBJHint=

QuestSetDescriptionBJ="Change Quest Description"
QuestSetDescriptionBJ="Change the description of ",~Quest," to ",~Description
QuestSetDescriptionBJHint=

CreateQuestItemBJ="Create Quest Requirement"
CreateQuestItemBJ="Create a quest requirement for ",~Quest," with the description ",~Description
CreateQuestItemBJHint=

QuestItemSetCompletedBJ="Mark Quest Requirement As Completed"
QuestItemSetCompletedBJ="Mark ",~Quest Requirement," as ",~Completed/Incomplete
QuestItemSetCompletedBJHint=

QuestItemSetDescriptionBJ="Change Quest Requirement Description"
QuestItemSetDescriptionBJ="Change the description of ",~Quest Requirement," to ",~Description
QuestItemSetDescriptionBJHint=

CreateDefeatConditionBJ="Create Defeat Condition"
CreateDefeatConditionBJ="Create a defeat condition with the description ",~Description
CreateDefeatConditionBJHint="Defeat conditions are displayed for every quest."

DestroyDefeatConditionBJ="Destroy Defeat Condition"
DestroyDefeatConditionBJ="Destroy ",~Defeat Condition
DestroyDefeatConditionBJHint="Destroyed defeat conditions are removed from the quest log."

DefeatConditionSetDescriptionBJ="Change Defeat Condition Description"
DefeatConditionSetDescriptionBJ="Change the description of ",~Defeat Condition," to ",~Description
DefeatConditionSetDescriptionBJHint=

FlashQuestDialogButtonBJ="Flash Quest Dialog Button"
FlashQuestDialogButtonBJ="Flash the quest dialog button"
FlashQuestDialogButtonBJHint=


// Region actions
MoveRectToLoc="Verschieben"
MoveRectToLoc="Zentriere ",~Region," auf ",~Punkt
MoveRectToLocHint="Dies hat keine Auswirkungen, außer die angegebene Region ist eine Variable."


// Selection actions
ClearSelectionForPlayer="Clear Selection For Player"
ClearSelectionForPlayer="Clear selection for ",~Player
ClearSelectionForPlayerHint="Forces a player to deselect all units."

SelectGroupForPlayerBJ="Select Unit Group For Player"
SelectGroupForPlayerBJ="Select ",~Unit Group," for ",~Player
SelectGroupForPlayerBJHint="Forces a player to deselect all units and select up to 12 units of the unit group."

SelectUnitForPlayerSingle="Select Unit For Player"
SelectUnitForPlayerSingle="Select ",~Unit," for ",~Player
SelectUnitForPlayerSingleHint="Forces a player to deselect all units and select only the given unit."

SelectUnitAddForPlayer="Add Unit To Selection For Player"
SelectUnitAddForPlayer="Add ",~Unit," to selection for ",~Player
SelectUnitAddForPlayerHint="Forces a player to select the given unit in addition to whatever is already selected."

SelectUnitRemoveForPlayer="Remove Unit From Selection For Player"
SelectUnitRemoveForPlayer="Remove ",~Unit," from selection for ",~Player
SelectUnitRemoveForPlayerHint="Forces a player to deselect the given unit, retaining the rest of the current selection."

ClearSelection="Leeren"
ClearSelection="Leere Auswahl"
ClearSelectionHint="Alle Einheiten abwählen."

SelectGroupBJ="Einheitengruppe auswählen"
SelectGroupBJ="Wähle ",~Einheitengruppe," aus"
SelectGroupBJHint="Wählt alle Einheiten ab und wählt bis zu 12 Einheiten der Einheitengruppe aus."

SelectUnitSingle="Einheit auswählen"
SelectUnitSingle="Wähle ",~Einheit," aus"
SelectUnitSingleHint="Wählt alle Einheiten ab und wählt nur die angegebene Einheit aus."

SelectUnitAdd="Füge Einheit hinzu"
SelectUnitAdd="Füge ",~Einheit," zur Auswahl hinzu"
SelectUnitAddHint="Wählt die angegebene Einheit zusätzlich zu was auch immer bereits ausgewählt ist aus."

SelectUnitRemove="Einheit entfernen"
SelectUnitRemove="Entferne ",~Einheit," aus Auswahl"
SelectUnitRemoveHint="Wählt die angegebene Einheit ab, behält den Rest der derzeitigen Auswahl bei."


// Sound actions
PlaySoundBJ="Geräusch abspielen"
PlaySoundBJ="Spiele ",~Geräusch," ab"
PlaySoundBJHint="Geräusche können nicht während der Karteninitialisierung abgespielt werden.  Verwenden Sie den Sound-Editor, um Geräusch-Variable zu erzeugen.  Beachten Sie, dass ein 3D-Geräusch positioniert werden muss, um abgespielt werden zu können."

PlaySoundAtPointBJ="Play Sound At Point"
PlaySoundAtPointBJ="Play ",~3D Sound," at ",~Volume,"% volume, located at ",~Point," with Z offset ",~Z
PlaySoundAtPointBJHint="Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."

PlaySoundOnUnitBJ="Play Sound On Unit"
PlaySoundOnUnitBJ="Play ",~3D Sound," at ",~Volume,"% volume, attached to ",~Unit
PlaySoundOnUnitBJHint="Sounds cannot be played at map initialization.  This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."

PlaySoundFromOffsetBJ="Play Sound From Offset"
PlaySoundFromOffsetBJ="Play ",~Sound," at ",~Volume,"% volume, skipping the first ",~Offset," seconds"
PlaySoundFromOffsetBJHint="Sounds cannot be played at map initialization.  This should not be used on 3D sounds."

StopSoundBJ="Stop Sound"
StopSoundBJ="Stop ",~Sound," ",~After Fading/Immediately
StopSoundBJHint=

KillSoundWhenDoneBJ="Destroy Sound"
KillSoundWhenDoneBJ="Destroy ",~Sound
KillSoundWhenDoneBJHint="If the sound is already playing, it will be destroyed upon finishing."

SetSoundVolumeBJ="Set Sound Volume"
SetSoundVolumeBJ="Set volume of ",~Sound," to ",~Volume,"%"
SetSoundVolumeBJHint=

SetSoundOffsetBJ="Skip To Sound Offset"
SetSoundOffsetBJ="Skip to ",~Offset," seconds from the start of ",~Sound
SetSoundOffsetBJHint="This should only be used on sounds that are currently playing.  This should not be used on 3D sounds."

SetSoundDistanceCutoffBJ="Set Sound Cutoff Distance"
SetSoundDistanceCutoffBJ="Set cutoff distance of ",~Sound," to ",~Distance
SetSoundDistanceCutoffBJHint=

SetSoundPitchBJ="Set Sound Pitch"
SetSoundPitchBJ="Set pitch of ",~Sound," to ",~Pitch
SetSoundPitchBJHint=

AttachSoundToUnitBJ="Attach 3D Sound To Unit"
AttachSoundToUnitBJ="Attach ",~3D Sound," to ",~Unit
AttachSoundToUnitBJHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."

SetSoundPositionLocBJ="Set 3D Sound Position"
SetSoundPositionLocBJ="Set position of ",~3D Sound," to ",~Point," with Z offset ",~Z
SetSoundPositionLocBJHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."

SetSoundDistances="Set 3D Sound Distances"
SetSoundDistances="Set ",~3D Sound," distances to ",~Distance," minimum and ",~Distance," maximum"
SetSoundDistancesHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."

SetStackedSoundBJ="Add/Remove 3D Sound Across Region"
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," across ",~Region
SetStackedSoundBJHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."

SetAmbientDaySound="Use Daytime Ambient Theme"
SetAmbientDaySound="Use the ",~Theme," daytime ambient theme"
SetAmbientDaySoundHint=

SetAmbientNightSound="Use Nighttime Ambient Theme"
SetAmbientNightSound="Use the ",~Theme," nighttime ambient theme"
SetAmbientNightSoundHint=

EnableDawnDusk="Enable/Disable Dawn And Dusk Sounds"
EnableDawnDusk=~Enable/Disable," dawn and dusk sounds"
EnableDawnDuskHint=

SetMapMusicIndexedBJ="Set Music List (Using A Specific Initial Song)"
SetMapMusicIndexedBJ="Set the music list to ",~Music,", starting with song ",~Index
SetMapMusicIndexedBJHint="This sets the list of music to use when the current song ends.  This does not stop the currently playing music."

SetMapMusicRandomBJ="Set Music List (Using A Random Initial Song)"
SetMapMusicRandomBJ="Set the music list to ",~Music,", starting with a random song"
SetMapMusicRandomBJHint="This sets the list of music to use when the current song ends.  This does not stop the currently playing music."

ClearMapMusicBJ="Clear Music List"
ClearMapMusicBJ="Clear the music list"
ClearMapMusicBJHint="Clearing the music list will cause music to cease after the currently playing music ends."

PlayMusicBJ="Play Music"
PlayMusicBJ="Play ",~Music
PlayMusicBJHint=

PlayMusicExBJ="Play Music From Offset"
PlayMusicExBJ="Play ",~Music,", skipping the first ",~Offset," seconds and fading in over ",~Fade Time," seconds"
PlayMusicExBJHint=

PlayThematicMusicBJ="Play Music Theme"
PlayThematicMusicBJ="Play ",~Music Theme
PlayThematicMusicBJHint="This will play a music theme once, and then resume the game music."

PlayThematicMusicExBJ="Play Music Theme From Offset"
PlayThematicMusicExBJ="Play ",~Music Theme,", skipping the first ",~Offset," seconds"
PlayThematicMusicExBJHint="This will play a music theme once, and then resume the game music."

EndThematicMusicBJ="Stop Music Theme"
EndThematicMusicBJ="Stop the currently playing music theme"
EndThematicMusicBJHint=

StopMusicBJ="Stop Music"
StopMusicBJ="Stop music ",~After Fading/Immediately
StopMusicBJHint=

ResumeMusicBJ="Resume Music"
ResumeMusicBJ="Resume music"
ResumeMusicBJHint=

SetMusicVolumeBJ="Musiklautstärke festlegen"
SetMusicVolumeBJ="Lege Musiklautstärke auf ",~Lautstärke,"% fest"
SetMusicVolumeBJHint=

SetMusicOffsetBJ="Skip To Music Offset"
SetMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music"
SetMusicOffsetBJHint=

SetThematicMusicOffsetBJ="Skip To Music Theme Offset"
SetThematicMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music theme"
SetThematicMusicOffsetBJHint=

VolumeGroupSetVolumeBJ="Set Volume Channel"
VolumeGroupSetVolumeBJ="Set ",~Volume Channel," to ",~Volume,"%"
VolumeGroupSetVolumeBJHint=

SetCineModeVolumeGroupsBJ="Set All Volume Channels For Cinematics"
SetCineModeVolumeGroupsBJ="Setup all volume channels for cinematics"
SetCineModeVolumeGroupsBJHint="This uses the same volume channel settings as the 'Cinematic - Cinematic Mode' action."

SetSpeechVolumeGroupsBJ="Set All Volume Channels For Speech"
SetSpeechVolumeGroupsBJ="Setup all volume channels for speech"
SetSpeechVolumeGroupsBJHint=

VolumeGroupResetBJ="Reset All Volume Channels"
VolumeGroupResetBJ="Reset all volume channels to 100%"
VolumeGroupResetBJHint=


// Special Effect actions
AddSpecialEffectLocBJ="Create Special Effect At Point"
AddSpecialEffectLocBJ="Create a special effect at ",~Point," using ",~Model File
AddSpecialEffectLocBJHint=

AddSpecialEffectTargetUnitBJ="Create Special Effect On Unit"
AddSpecialEffectTargetUnitBJ="Create a special effect attached to the ",~Attachment Point," of ",~Unit," using ",~Model File
AddSpecialEffectTargetUnitBJHint=

DestroyEffectBJ="Destroy Special Effect"
DestroyEffectBJ="Destroy ",~Special Effect
DestroyEffectBJHint=


// Trigger actions
DisableTrigger="Ausschalten"
DisableTrigger="Schalte ",~Trigger," aus"
DisableTriggerHint="Unterbricht die laufenden Ausführungen des Auslösers nicht, verhindert aber zukünftige Ausführungen."

EnableTrigger="Einschalten"
EnableTrigger="Schalte ",~Trigger," ein"
EnableTriggerHint="Erlaubt es dem Auslöser, ausgeführt zu werden."

ConditionalTriggerExecute="Run (Checking Conditions)"
ConditionalTriggerExecute="Run ",~Trigger," (checking conditions)"
ConditionalTriggerExecuteHint="Runs the trigger's actions if its conditions are true."

TriggerExecute="Run (Ignoring Conditions)"
TriggerExecute="Run ",~Trigger," (ignoring conditions)"
TriggerExecuteHint="Runs the trigger's actions while ignoring events and conditions."

QueuedTriggerAddBJ="Add To Trigger Queue"
QueuedTriggerAddBJ="Add ",~Trigger," to the trigger queue (",~Checking/Ignoring," conditions)"
QueuedTriggerAddBJHint="Triggers added to the trigger queue are executed one at a time, in turn.  Triggers added in this manner should remove themselves using 'Trigger - Remove From Queue'."

QueuedTriggerRemoveBJ="Remove From Trigger Queue"
QueuedTriggerRemoveBJ="Remove ",~Trigger," from the trigger queue"
QueuedTriggerRemoveBJHint="If a trigger is already running via the trigger queue, removing it will allow the next trigger in the trigger queue to run, but will not stop the trigger itself from finishing its execution."

QueuedTriggerClearBJ="Clear Trigger Queue"
QueuedTriggerClearBJ="Clear the trigger queue"
QueuedTriggerClearBJHint="This will remove all triggers from the trigger queue."

QueuedTriggerClearInactiveBJ="Clear Trigger Queue Of Pending Triggers"
QueuedTriggerClearInactiveBJ="Clear all pending triggers from the trigger queue"
QueuedTriggerClearInactiveBJHint="This will remove all pending triggers from the trigger queue.  If a trigger is currently running in the queue, it will not be removed."

AddTriggerEvent="Ereignis hinzufügen"
AddTriggerEvent="Füge zu ",~Auslöser," das ",~Ereignis," hinzu"
AddTriggerEventHint=


// Unit actions
CreateNUnitsAtLoc="Create Units Facing Angle"
CreateNUnitsAtLoc="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreateNUnitsAtLocHint="The facing angle is expected in degrees, with 0 being east and 90 being north.  Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units."

CreateNUnitsAtLocFacingLocBJ="Create Units Facing Point"
CreateNUnitsAtLocFacingLocBJ="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Point
CreateNUnitsAtLocFacingLocBJHint="Use 'Last Created Unit Group' to refer to these created units.  Use 'Last Created Unit' to refer to exactly one of these units."

CreateCorpseLocBJ="Create Corpse"
CreateCorpseLocBJ="Create a ",~Unit," corpse for ",~Player," at ",~Point
CreateCorpseLocBJHint="Not all units have corpse forms.  Use 'Last Created Unit' to refer to this unit."

CreatePermanentCorpseLocBJ="Dauerhafte Leiche erzeugen"
CreatePermanentCorpseLocBJ="Erzeuge eine dauerhafte ",~Stil," ",~Einheit,"-Leiche für ",~Spieler," an ",~Punkt," ausgerichtet mit ",~Richtung," Grad"
CreatePermanentCorpseLocBJHint="Fleischige Leichen erscheinen oft für die ersten 8 Sekunden ihrer Existenz knochig."

KillUnit="Töten"
KillUnit="Töte ",~Einheit
KillUnitHint=

RemoveUnit="Entfernen"
RemoveUnit="Entferne ",~Einheit," aus dem Spiel"
RemoveUnitHint="Hinterlässt keine Leiche.  Falls auf einen Helden angewandt, kann dieser Held nicht wiederbelebt werden."

ExplodeUnitBJ="Explodieren lassen"
ExplodeUnitBJ="Lasse ",~Einheit," explodieren"
ExplodeUnitBJHint=

ReplaceUnitBJ="Ersetzen"
ReplaceUnitBJ="Ersetze ",~Einheit," durch eine ",~Einheitentyp,"-Einheit mit ",~Eigenschaftenverwendung," Leben und Mana"
ReplaceUnitBJHint="Verwenden Sie 'Zuletzt ersetzte Einheit', um auf die Ersetzungseinheit zu verweisen.  Berücksichtigen Sie, dass alle Variablen, die auf die alte Einheit verweisen, aktualisiert werden müssen.  Eine verhexte Goldmine zu ersetzen, erzeugt normalerweise zusätzlich zur Ersetzungseinheit eine normale Goldmine."

ShowUnitHide="Verbergen"
ShowUnitHide="Verberge ",~Einheit
ShowUnitHideHint="Verwenden Sie die 'Mache Einheit sichtbar'-Aktion, um eine Einheit zu zeigen.  Verborgene Einheiten tauchen in 'Einheiten in Region'-Abfragen nicht auf."

ShowUnitShow="Sichtbar machen"
ShowUnitShow="Mache ",~Einheit," sichtbar"
ShowUnitShowHint="Verwenden Sie die 'Verberge Einheit'-Aktion, um eine Einheit zu verbergen.  Verborgene Einheiten tauchen in 'Einheiten in Region'-Abfragen nicht auf."

SetUnitColor="Farbe ändern"
SetUnitColor="Change color of ",~Unit," to ",~Color
SetUnitColorHint="Changing a unit's color does not change the unit's ownership."

SetUnitOwner="Besitzer ändern"
SetUnitOwner="Ändere Besitz von ",~Einheit," zu ",~Spieler," und ",~Ändere/Behalte Farbe bei
SetUnitOwnerHint=

UnitShareVisionBJ="Shared Vision"
UnitShareVisionBJ=~Grant/Deny," shared vision of ",~Unit," to ",~Player
UnitShareVisionBJHint="Note that neutral player slots cannot share their vision."

SetUnitPositionLoc="Move Unit (Instantly)"
SetUnitPositionLoc="Move ",~Unit," instantly to ",~Point
SetUnitPositionLocHint=

SetUnitPositionLocFacingBJ="Move Unit And Face Angle (Instantly)"
SetUnitPositionLocFacingBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Direction," degrees"
SetUnitPositionLocFacingBJHint="The facing angle is expected in degrees, with 0 being east and 90 being north."

SetUnitPositionLocFacingLocBJ="Move Unit And Face Point (Instantly)"
SetUnitPositionLocFacingLocBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Point
SetUnitPositionLocFacingLocBJHint=

SetUnitRallyPoint="Set Rally-Point To Point"
SetUnitRallyPoint="Set Rally-Point for ",~Unit," to ",~Point
SetUnitRallyPointHint=

SetUnitRallyUnit="Set Rally-Point To Unit"
SetUnitRallyUnit="Set Rally-Point for ",~Unit," to ",~Unit
SetUnitRallyUnitHint=

SetUnitRallyDestructable="Set Rally-Point To Destructible"
SetUnitRallyDestructable="Set Rally-Point for ",~Unit," to ",~Destructible
SetUnitRallyDestructableHint=

SetUnitLifePercentBJ="Set Life (To Percentage)"
SetUnitLifePercentBJ="Set life of ",~Unit," to ",~Percent,"%"
SetUnitLifePercentBJHint=

SetUnitManaPercentBJ="Set Mana (To Percentage)"
SetUnitManaPercentBJ="Set mana of ",~Unit," to ",~Percent,"%"
SetUnitManaPercentBJHint=

SetUnitLifeBJ="Set Life (To Value)"
SetUnitLifeBJ="Set life of ",~Unit," to ",~Value
SetUnitLifeBJHint=

SetUnitManaBJ="Set Mana (To Value)"
SetUnitManaBJ="Set mana of ",~Unit," to ",~Value
SetUnitManaBJHint=

SetUnitInvulnerable="Make Invulnerable/Vulnerable"
SetUnitInvulnerable="Make ",~Unit," ",~Invulnerable/Vulnerable
SetUnitInvulnerableHint=

PauseUnitBJ="Pause/Unpause"
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint="A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused."

PauseAllUnitsBJ="Pause/Unpause All Units"
PauseAllUnitsBJ=~Pause/Unpause," all units"
PauseAllUnitsBJHint="A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused.  This action only affects units that exist when this action is run."

UnitPauseTimedLifeBJ="Pause/Unpause Expiration Timer"
UnitPauseTimedLifeBJ=~Pause/Unpause," the expiration timer for ",~Unit
UnitPauseTimedLifeBJHint="Only summoned units have expiration timers."

UnitApplyTimedLifeBJ="Add Expiration Timer"
UnitApplyTimedLifeBJ="Add a ",~Duration," second ",~Buff Type," expiration timer to ",~Unit
UnitApplyTimedLifeBJHint=

SetUnitExplodedBJ="Make Unit Explode On Death"
SetUnitExplodedBJ="Make ",~Unit," ",~Explode/Die Normally," on death"
SetUnitExplodedBJHint=

UnitSuspendDecayBJ="Suspend Corpse Decay"
UnitSuspendDecayBJ=~Suspend/Resume," corpse decay for ",~Unit
UnitSuspendDecayBJHint="This only works on corpses, and only after the corpses' death animations have finished."

UnitResetCooldown="Fähigkeitenabklingzeiten zurücksetzen"
UnitResetCooldown="Setze Fähigkeitenabklingzeiten für ",~Einheit," zurück"
UnitResetCooldownHint="Dies macht alle Fähigkeiten der Einheit beinahe sofort für eine weitere Verwendung verfügbar."

UnitSetConstructionProgress="Set Building Construction Progress"
UnitSetConstructionProgress="Set ",~Building," construction progress to ",~Progress,"%"
UnitSetConstructionProgressHint="This should only be used on buildings that are currently under construction."

UnitSetUpgradeProgress="Set Building Upgrade Progress"
UnitSetUpgradeProgress="Set ",~Building," upgrade progress to ",~Progress,"%"
UnitSetUpgradeProgressHint="This should only be used on buildings that are currently being upgraded.  This does not affect research-based upgrades."

UnitAddSleepPerm="Make Unit Sleep"
UnitAddSleepPerm="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked"
UnitAddSleepPermHint="Units owned by players 1 through 12 never sleep."

UnitSetCanSleepBJ="Make Unit Sleep At Night"
UnitSetCanSleepBJ="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked at night"
UnitSetCanSleepBJHint="Units owned by players 1 through 12 never sleep."

UnitWakeUpBJ="Aufwecken"
UnitWakeUpBJ="Wecke ",~Einheit," auf"
UnitWakeUpBJHint="Dies wirkt sich auf den nächtlichen, nicht den magischen Schlaf aus."

UnitGenerateAlarms="Turn Alarm Generation On/Off"
UnitGenerateAlarms="Turn alarm generation for ",~Unit," ",~On/Off
UnitGenerateAlarmsHint="This only affects buildings."

RescueUnitBJ="Rescue Unit"
RescueUnitBJ="Rescue ",~Unit," for ",~Player," and ",~Change/Retain Color
RescueUnitBJHint=

MakeUnitRescuableToForceBJ="Make Rescuable"
MakeUnitRescuableToForceBJ="Make ",~Unit," ",~Rescuable/Unrescuable," by ",~Player Group
MakeUnitRescuableToForceBJHint=

SetUnitRescueRange="Set Rescue Range"
SetUnitRescueRange="Limit rescue events for ",~Unit," to a range of ",~Range
SetUnitRescueRangeHint="To make a unit rescuable, use 'Unit - Make Rescuable' or set the unit's owner to 'Rescuable'."

SetRescueUnitColorChangeBJ="Set Rescue Behavior For Units"
SetRescueUnitColorChangeBJ="Make units ",~Change/Retain Color," when rescued"
SetRescueUnitColorChangeBJHint="By default, units owned by 'Rescuable' players do not change color when rescued.  This action does not affect units that have already been rescued."

SetRescueBuildingColorChangeBJ="Set Rescue Behavior For Buildings"
SetRescueBuildingColorChangeBJ="Make buildings ",~Change/Retain Color," when rescued"
SetRescueBuildingColorChangeBJHint="By default, buildings owned by 'Rescuable' players change color when rescued.  This action does not affect buildings that have already been rescued."

SetUnitUseFoodBJ="Enable/Disable Supply Usage"
SetUnitUseFoodBJ=~Enable/Disable," supply usage for ",~Unit
SetUnitUseFoodBJHint=

SetUnitFacingToFaceUnitTimed="Make Unit Face Unit"
SetUnitFacingToFaceUnitTimed="Make ",~Unit," face ",~Unit," over ",~Time," seconds"
SetUnitFacingToFaceUnitTimedHint="Forces a unit to face another unit.  This only works if the source unit is not moving at the time."

SetUnitFacingToFaceLocTimed="Make Unit Face Point"
SetUnitFacingToFaceLocTimed="Make ",~Unit," face ",~Point," over ",~Time," seconds"
SetUnitFacingToFaceLocTimedHint="Forces a unit to face a point.  This only works if the source unit is not moving at the time."

SetUnitFacingTimed="Make Unit Face Angle"
SetUnitFacingTimed="Make ",~Unit," face ",~Angle," over ",~Time," seconds"
SetUnitFacingTimedHint="Forces a unit to face a directional angle, expected in degrees, with 0 being east.  This only works if the source unit is not moving at the time."

SetUnitMoveSpeed="Set Movement Speed"
SetUnitMoveSpeed="Set ",~Unit," movement speed to ",~Speed
SetUnitMoveSpeedHint="Common movement speeds range from 150 to 300."

SetUnitPathing="Turn Collision On/Off"
SetUnitPathing="Turn collision for ",~Unit," ",~On/Off
SetUnitPathingHint="Collision-disabled units ignore obstacles, but are still themselves treated as obstacles."

SetUnitAcquireRangeBJ="Set Acquisition Range"
SetUnitAcquireRangeBJ="Set ",~Unit," acquisition range to ",~Range
SetUnitAcquireRangeBJHint="The acquisition range of a unit is the distance at which the unit acquires targets to attack."

SetUnitUserData="Set Custom Value"
SetUnitUserData="Set the custom value of ",~Unit," to ",~Index
SetUnitUserDataHint="Custom values are only used in triggers, and can be used to store any integer value."

UnitRemoveBuffsBJ="Zauberverstärker entfernen"
UnitRemoveBuffsBJ="Entferne ",~Zauberverstärkertyp,"-Zauberverstärker von ",~Einheit
UnitRemoveBuffsBJHint=

UnitRemoveBuffsExBJ="Remove Buffs By Type"
UnitRemoveBuffsExBJ="Remove ",~Buff Type," buffs considered ",~Buff Resist," from ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"
UnitRemoveBuffsExBJHint=

UnitRemoveBuffBJ="Remove Specific Buff"
UnitRemoveBuffBJ="Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint=

UnitAddAbilityBJ="Fähigkeit hinzufügen"
UnitAddAbilityBJ="Füge ",~Fähigkeit," zu ",~Einheit," hinzu"
UnitAddAbilityBJHint=

UnitRemoveAbilityBJ="Entferne Fähigkeit"
UnitRemoveAbilityBJ="Entferne ",~Fähigkeit," von ",~Einheit
UnitRemoveAbilityBJHint="In den meisten Fällen ist das Entfernen einer Fähigkeit auf diese Weise dauerhaft."

UnitAddTypeBJ="Klassifikation hinzufügen"
UnitAddTypeBJ="Füge Klassifikation von ",~Klassifikation," zu ",~Einheit," hinzu"
UnitAddTypeBJHint="Die Info-Leiste der ausgewählten Einheit wird nicht aktualisiert, bis die Einheit neu ausgewählt wurde."

UnitRemoveTypeBJ="Klassifikation entfernen"
UnitRemoveTypeBJ="Entferne Klassifikation von ",~Klassifikation," von ",~Einheit
UnitRemoveTypeBJHint="Die Info-Leiste der ausgewählten Einheit wird nicht aktualisiert, bis die Einheit neu ausgewählt wurde."

IssueTargetOrder="Issue Order Targeting A Unit"
IssueTargetOrder="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint=

IssuePointOrderLoc="Issue Order Targeting A Point"
IssuePointOrderLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint=

IssueTargetDestructableOrder="Issue Order Targeting A Destructible"
IssueTargetDestructableOrder="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=

IssueTargetItemOrder="Issue Order Targeting An Item"
IssueTargetItemOrder="Order ",~Unit," to ",~Order," ",~Item
IssueTargetItemOrderHint=

IssueImmediateOrder="Issue Order With No Target"
IssueImmediateOrder="Order ",~Unit," to ",~Order
IssueImmediateOrderHint=

IssueBuildOrderByIdLocBJ="Issue Build Order"
IssueBuildOrderByIdLocBJ="Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint=

IssueTrainOrderByIdBJ="Issue Train/Upgrade Order"
IssueTrainOrderByIdBJ="Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint="This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep."

IssueUpgradeOrderByIdBJ="Issue Research Order"
IssueUpgradeOrderByIdBJ="Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint="Weapons and armor upgrades can be researched multiple times via this trigger action."

UnitDropItemPointLoc="Issue Drop Item Order"
UnitDropItemPointLoc="Order ",~Unit," to drop ",~Item," at ",~Point
UnitDropItemPointLocHint=

UnitDropItemSlotBJ="Issue Move Item In Inventory Order"
UnitDropItemSlotBJ="Order ",~Unit," to move ",~Item," to inventory slot ",~Index
UnitDropItemSlotBJHint="This only works if the unit is already carrying the item.  If an item exists in the slot, the items will be swapped."

UnitDropItemTargetBJ="Issue Give Item Order"
UnitDropItemTargetBJ="Order ",~Unit," to give ",~Item," to ",~Unit
UnitDropItemTargetBJHint=

UnitDamagePointLoc="Damage Area"
UnitDamagePointLoc="Cause ",~Unit," to damage circular area after ",~Seconds," seconds of radius ",~Size," at ",~Location,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamagePointLocHint="This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage."

UnitDamageTargetBJ="Damage Target"
UnitDamageTargetBJ="Cause ",~Unit," to damage ",~Target,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamageTargetBJHint="This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage."

DecUnitAbilityLevelSwapped="Decrease Level Of Ability For Unit"
DecUnitAbilityLevelSwapped="Decrease level of ",~Ability," for ",~Unit
DecUnitAbilityLevelSwappedHint="If the unit does not have the ability, this does nothing."

IncUnitAbilityLevelSwapped="Increase Level Of Ability For Unit"
IncUnitAbilityLevelSwapped="Increase level of ",~Ability," for ",~Unit
IncUnitAbilityLevelSwappedHint="If the unit does not have the ability, this does nothing."

SetUnitAbilityLevelSwapped="Set Level Of Ability For Unit"
SetUnitAbilityLevelSwapped="Set level of ",~Ability," for ",~Unit," to ",~Level
SetUnitAbilityLevelSwappedHint="If the unit does not have the ability, this does nothing."

// Unit Group actions
ForGroupMultiple="Pick Every Unit In Unit Group And Do Multiple Actions"
ForGroupMultiple="Pick every unit in ",~Unit Group," and do (Actions)"
ForGroupMultipleHint="Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function.  Add actions to this function in the main display."

ForGroup="Pick Every Unit In Unit Group And Do Action"
ForGroup="Pick every unit in ",~Unit Group," and do ",~Action
ForGroupHint="Use 'Picked Unit' to refer each unit as it is picked.  This works for every unit in the group, including dead units.  Wait actions should not be used within this function."

GroupAddUnitSimple="Einheit hinzufügen"
GroupAddUnitSimple="Füge ",~Einheit," zu ",~Einheitengruppe," hinzu"
GroupAddUnitSimpleHint="Dies fügt eine Einheit zu einer Einheitengruppe-Variablen hinzu..  Dies wirkt sich nicht auf die Einheit selbst aus."

GroupAddGroup="Einheitenguppe hinzufügen"
GroupAddGroup="Füge alle Einheiten von ",~Einheitengruppe," zu ",~Einheitengruppe," hinzu"
GroupAddGroupHint="Dies fügt alle Einheiten einer Einheitengruppe zu einer Einheitengruppe-Variable hinzu.  Dies wirkt sich nicht auf die Einheiten selbst aus."

GroupRemoveUnitSimple="Einheit entfernen"
GroupRemoveUnitSimple="Entferne ",~Einheit," aus ",~Einheitengruppe
GroupRemoveUnitSimpleHint="Dies entfernt eine Einheit von einer Einheitengruppe-Variablen.  Dies wirkt sich nicht auf die Einheit selbst aus."

GroupRemoveGroup="Entferne Einheitengruppe"
GroupRemoveGroup="Entferne alle Einheiten von ",~Einheitengruppe," aus ",~Einheitengruppe
GroupRemoveGroupHint="Dies entfernt alle Einheiten einer Einheitengruppe aus einer Einheitengruppe-Variablen.  Dies wirkt sich nicht auf die Einheiten selbst aus."

GroupClear="Leeren"
GroupClear="Entfernt alle Einheiten aus ",~Einheitengruppe
GroupClearHint="Dies entfernt alle Einheiten aus einer Einheitengruppe-Variablen.  Dies wirkt sich nicht auf die Einheiten selbst aus."

GroupTargetOrder="Issue Order Targeting A Unit"
GroupTargetOrder="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint="This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game."

GroupPointOrderLoc="Issue Order Targeting A Point"
GroupPointOrderLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint="This will issue an order to at most 12 units from the specified unit group."

GroupTargetDestructableOrder="Issue Order Targeting A Destructible"
GroupTargetDestructableOrder="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint="This will issue an order to at most 12 units from the specified unit group."

GroupTargetItemOrder="Issue Order Targeting An Item"
GroupTargetItemOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetItemOrderHint="This will issue an order to at most 12 units from the specified unit group."

GroupImmediateOrder="Issue Order With No Target"
GroupImmediateOrder="Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint="This will issue an order to at most 12 units from the specified unit group."

GroupTrainOrderByIdBJ="Issue Train Order"
GroupTrainOrderByIdBJ="Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint="This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group."


// Ubersplat actions
CreateUbersplatBJ="Erzeugen"
CreateUbersplatBJ="Erzeuge Ubersplat an ",~Punkt," des Typs ",~Typ," mit Farbe (",~Rot,"%, ",~Grün,"%, ",~Blau,"%) und ",~Transparenz,"% Transparenz (",~Aktiviere/Deaktiviere," pausierten Zustand, ",~Aktiviere/Deaktiviere," Erzeugungszeit überspringen)"
CreateUbersplatBJHint="Die Farbwerte sind (Rot, grün, blau).  Eine 100% transparente Farbe ist vollständig unsichtbar.  Verwenden Sie 'Ubersplat - Immer-Rendern-Zustand ändern', um die Anzeige dieses Ubersplats zu kippen.  Standardmäßig werden Ubersplats nicht gerendert."

DestroyUbersplat="Zerstöre"
DestroyUbersplat="Zerstöre ",~Ubersplat
DestroyUbersplatHint=

ResetUbersplat="Zurücksetzen"
ResetUbersplat="Setze ",~Ubersplat," zurück"
ResetUbersplatHint=

FinishUbersplat="Beenden"
FinishUbersplat="Beende ",~Ubersplat
FinishUbersplatHint=

ShowUbersplatBJ="Anzeigen/verbergen"
ShowUbersplatBJ=~Zeige an/verberge," ",~Ubersplat
ShowUbersplatBJHint=

SetUbersplatRender="Render-Zustand ändern"
SetUbersplatRender="Ändere ",~Ubersplat,": ",~Aktiviere/deaktiviere," Render-Zustand"
SetUbersplatRenderHint=

SetUbersplatRenderAlways="Immer-Rendern-Zustand ändern"
SetUbersplatRenderAlways="Ändere ",~Ubersplat,": ",~Aktiviere/deaktiviere," Immer-Rendern-Zustand"
SetUbersplatRenderAlwaysHint=


// Visibility actions
FogEnableOn="Nebel des Krieges aktivieren"
FogEnableOn="Aktiviere Nebel des Krieges"
FogEnableOnHint=

FogEnableOff="Nebel des Krieges deaktivieren"
FogEnableOff="Deaktiviere Nebel des Krieges"
FogEnableOffHint=

FogMaskEnableOn="Schwarze Maske aktivieren"
FogMaskEnableOn="Aktiviere schwarze Maske"
FogMaskEnableOnHint=

FogMaskEnableOff="Schwarze Maske deaktivieren"
FogMaskEnableOff="Deaktiviere schwarze Maske"
FogMaskEnableOffHint=

CreateFogModifierRectBJ="Sichtbarkeitsmodifikatorregion erzeugen"
CreateFogModifierRectBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," across ",~Region
CreateFogModifierRectBJHint=

CreateFogModifierRadiusLocBJ="Sichtbarkeitsmodifikatorkreis erzeugen"
CreateFogModifierRadiusLocBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," from ",~Point," to a radius of ",~Radius
CreateFogModifierRadiusLocBJHint=

FogModifierStart="Sichtbarkeitsmodifikator aktivieren"
FogModifierStart="Aktiviere ",~Sichtbarkeitsmodifikator
FogModifierStartHint=

FogModifierStop="Sichtbarkeitsmodifikator deaktivieren"
FogModifierStop="Deaktiviere ",~Sichtbarkeitsmodifikator
FogModifierStopHint=

DestroyFogModifier="Sichtbarkeitsmodifikator zerstören"
DestroyFogModifier="Zerstöre ",~Sichtbarkeitsmodifikator
DestroyFogModifierHint=

// ASL
sc__Asl_init="Initialisiere ASL"
sc__Asl_init="Initialisiere ASL."
sc__Asl_initHint="Initialisiert die Advanced Script Library. Diese Aktion sollte vor jeglicher Verwendung von ASL-Elementen aufgerufen werden (zum Beispiel während der Karteninitialisierung)."

Print="Zeige Testausgabe"
Print="Zeige ",~Testausgabe," an"
PrintHint="Zeigt eine Testausgabe an."

PrintIf="Zeige bedingte Testausgabe"
PrintIf="Falls die ",~Bedingung," wahr ist, zeige ",~Testausgabe," an."
PrintIfHint="Zeigt eine bedingte Testausgabe an."

MakeUnitMovable="Mache Einheit bewegbar/nicht bewegbar"
MakeUnitMovable=~Einheit," wird ",~bewegbar,"."

MakeUnitAttackable="Einheit wird angriffsfähig/nicht angriffsfähig"
MakeUnitAttackable=~Einheit," wird ",~angriffsfähig,"."

// Bonus Mod
AInitBonusMod="Initialisiere Bonus-Mod"
AInitBonusMod="Initialisiere Bonus-Mod."
AInitBonusModHint="Initialisiert den Bonus-Mod."

sc__ASpawnPoint_init="Initialisiere Erzeugungspunktsystem"
sc__ASpawnPoint_init="Initialisiere das Erzeugungspunktsystem mit der Erzeugungszeit von ",~Zeit," Sekunden, dem Erzeugungseffekt ",~Effekt,", dem Erzeugungsgeräusch ",~Geräusch," und der prozentualen Chance von ",~Chance,"%, Gegenstände fallen zu lassen. Außerdem ",~werden," fallen gelassene Gegenstände an Spieler verteilt. Die erzeugten Einheiten haben einen bestimmten",~Besitzer," und dieser ",~Text," wird beim Verteilen der fallen gelassenen Gegenstände angezeigt."

sc__ASpawnPoint_destroy="Entferne Erzeugungspunkt"
sc__ASpawnPoint_destroy="Entferne ",~Erzeugungspunkt,"."

sc__ARoutine_destroy="Entferne Tagesablauf"
sc__ARoutine_destroy="Entferne ",~Tagesablauf,"."


// Obsolete actions
AddPerfLogLabel="** AddPerfLogLabel **"
AddPerfLogLabel="** AddPerfLogLabel(",~Label,") **"
AddPerfLogLabelHint="** This is for debugging purposes only - remove before ship. **"

Cheat="** Cheat **"
Cheat="** Cheat(",~Label,") **"
CheatHint="** This is for debugging purposes only - remove before ship. **"



//***************************************************************************
[TriggerCallStrings]

// returns boolean
IsDestructableAliveBJ="Zerstörbares ist am Leben"
IsDestructableAliveBJ=~Zerstörbares," ist am Leben"
IsDestructableAliveBJHint=

IsDestructableDeadBJ="Zerstörbares ist tot"
IsDestructableDeadBJ=~Zerstörbares," ist tot"
IsDestructableDeadBJHint=

IsDestructableInvulnerableBJ="Zerstörbares ist unverwundbar"
IsDestructableInvulnerableBJ=~Zerstörbares," ist unverwundbar"
IsDestructableInvulnerableBJHint=

IsPointBlightedBJ="Punkt ist verseucht"
IsPointBlightedBJ=~Punkt," ist verseucht"
IsPointBlightedBJHint=

IsTerrainPathableBJ="Gelände-Verlauf ist abgeschaltet"
IsTerrainPathableBJ="Der Gelände-Verlauf am ",~Punkt," vom Typ ",~Verlauftyp," ist abgeschaltet"
IsTerrainPathableBJHint="Der Gelände-Verlauf ist abgeschaltet falls es nicht für den angegebenen Verlauftyp passierbar ist.  Zum Beispiel ist 'Bebaubarkeit' abgeschaltet wenn die Verlaufszelle unbebaubar ist. Verwenden Sie 'Umgebung - Schalte Geländeverlauf ein/ab', um den Geländeverlauf zu verändern."

IsMapFlagSet="Karten-Flag gesetzt"
IsMapFlagSet=~Karten-Flag," ist gesetzt"
IsMapFlagSetHint=

IsCustomCampaignButtonVisibile="Eigener Kampagnen-Button ist sichtbar"
IsCustomCampaignButtonVisibile="Eigener Kampagnen-Button ",~Nummer," ist sichtbar"
IsCustomCampaignButtonVisibileHint=

GetCreepCampFilterState="Unhold-Lager-Anzeige ist an"
GetCreepCampFilterState="Unhold-Lager-Minikartenanzeige ist eingeschaltet"
GetCreepCampFilterStateHint=

SaveGameExists="Gespeichertes Spiel existiert"
SaveGameExists="Das ",~Dateiname,"-Gespeicherte-Spiel existiert"
SaveGameExistsHint=

GetStoredBooleanBJ="Lade Boolean-Wert"
GetStoredBooleanBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredBooleanBJHint="If the label is not found, this function returns False."

HaveStoredValue="Cache Value Exists"
HaveStoredValue=~Label," is stored as a ",~Type," of ",~Category," in ",~Game Cache
HaveStoredValueHint=

HaveSavedValue="Hashtable Value Exists"
HaveSavedValue=~Value," is stored as a ",~Type," of ",~Value," in ",~Hashtable
HaveSavedValueHint=

UnitHasItem="Hero Has Item"
UnitHasItem=~Hero," has ",~Item
UnitHasItemHint=

UnitHasItemOfTypeBJ="Hero Has Item Of Type"
UnitHasItemOfTypeBJ=~Hero," has an item of type ",~Item-Type
UnitHasItemOfTypeBJHint=

IsSuspendedXP="Erfahrung ist für Held deaktiviert"
IsSuspendedXP="Erfahring ist für ",~Held," deaktiviert"
IsSuspendedXPHint="Verwenden Sie die 'Held - Aktiviere/Deaktiviere Erfahrung'-Aktion, um die Erfahrung eines Helden zu deaktivieren."

CheckItemStatus="Item Status Check"
CheckItemStatus=~Item," is ",~Status
CheckItemStatusHint=

CheckItemcodeStatus="Item-Type Status Check"
CheckItemcodeStatus=~Item-Type," is ",~Status
CheckItemcodeStatusHint=

IsItemHiddenBJ="Gegenstand ist verborgen"
IsItemHiddenBJ=~Gegenstand," ist verborgen"
IsItemHiddenBJHint="Von Einheiten aufgenommene Gegenstände werden als verborgen betrachtet."

IsItemOwned="Item Is Owned"
IsItemOwned=~Item," is owned"
IsItemOwnedHint="Any item in a unit's inventory is considered owned, even if the owner is dead."

RectContainsItem="Item In Region"
RectContainsItem=~Item," is in ",~Region
RectContainsItemHint="An owned item is not considered to be in any regions."

IsItemInvulnerable="Item Is Invulnerable"
IsItemInvulnerable=~Item," is invulnerable"
IsItemInvulnerableHint=

LeaderboardHasPlayerItemBJ="Leaderboard Contains Player"
LeaderboardHasPlayerItemBJ=~Leaderboard," contains ",~Player
LeaderboardHasPlayerItemBJHint=

IsMultiboardDisplayed="Multiboard Is Showing"
IsMultiboardDisplayed=~Multiboard," is showing"
IsMultiboardDisplayedHint=

IsMultiboardMinimized="Multiboard Is Minimized"
IsMultiboardMinimized=~Multiboard," is minimized"
IsMultiboardMinimizedHint=

WaygateIsActiveBJ="Way Gate Is Enabled"
WaygateIsActiveBJ=~Way Gate," is enabled"
WaygateIsActiveBJHint=

IsPlayerFlagSetBJ="Player Flag Is On"
IsPlayerFlagSetBJ=~Player Flag," is on for ",~Player
IsPlayerFlagSetBJHint=

IsPlayerAlly="Player Is An Ally Of Player"
IsPlayerAlly=~Player," is an ally of ",~Player
IsPlayerAllyHint=

IsPlayerEnemy="Player Is An Enemy Of Player"
IsPlayerEnemy=~Player," is an enemy of ",~Player
IsPlayerEnemyHint=

GetPlayerAlliance="Player Alliance Towards Player"
GetPlayerAlliance=~Player," is giving ",~Player," ",~Alliance Type
GetPlayerAllianceHint=

IsPlayerInForce="Player In Player Group"
IsPlayerInForce=~Player," is in ",~Player Group
IsPlayerInForceHint=

IsQuestItemCompleted="Quest Requirement Is Completed"
IsQuestItemCompleted=~Quest Requirement," is completed"
IsQuestItemCompletedHint=

IsQuestEnabled="Quest Is Enabled"
IsQuestEnabled=~Quest," is enabled"
IsQuestEnabledHint=

IsQuestCompleted="Quest Is Completed"
IsQuestCompleted=~Quest," is completed"
IsQuestCompletedHint=

IsQuestFailed="Quest Is Failed"
IsQuestFailed=~Quest," is failed"
IsQuestFailedHint=

IsQuestDiscovered="Quest Is Discovered"
IsQuestDiscovered=~Quest," is discovered"
IsQuestDiscoveredHint=

IsQuestRequired="Quest Is Required"
IsQuestRequired=~Quest," is required"
IsQuestRequiredHint=

RectContainsLoc="Region Contains Point"
RectContainsLoc=~Region," contains ",~Point
RectContainsLocHint=

IsTriggerEnabled="Trigger Is On"
IsTriggerEnabled=~Trigger," is on"
IsTriggerEnabledHint=

TriggerEvaluate="Evaluate Trigger Conditions"
TriggerEvaluate="Evaluate ",~Trigger," conditions"
TriggerEvaluateHint=

IsTriggerQueuedBJ="Trigger Is Queued"
IsTriggerQueuedBJ=~Trigger," is queued"
IsTriggerQueuedBJHint="Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."

IsTriggerQueueEmptyBJ="Trigger Queue Is Empty"
IsTriggerQueueEmptyBJ="The trigger queue is empty"
IsTriggerQueueEmptyBJHint="Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."

IsUnitType="Unit Classification Check"
IsUnitType=~Unit," is ",~Type
IsUnitTypeHint=

IsUnitIdType="Unit-Type Classification Check"
IsUnitIdType=~Unit-Type," is ",~Type
IsUnitIdTypeHint=

IsUnitInGroup="Unit In Unit Group"
IsUnitInGroup=~Unit," is in ",~Unit Group
IsUnitInGroupHint=

RectContainsUnit="Unit In Region"
RectContainsUnit=~Region," contains ",~Unit
RectContainsUnitHint=

IsUnitAliveBJ="Unit Is Alive"
IsUnitAliveBJ=~Unit," is alive"
IsUnitAliveBJHint=

IsUnitDeadBJ="Unit Is Dead"
IsUnitDeadBJ=~Unit," is dead"
IsUnitDeadBJHint=

IsUnitPausedBJ="Unit Is Paused"
IsUnitPausedBJ=~Unit," is paused"
IsUnitPausedBJHint=

IsUnitHiddenBJ="Unit Is Hidden"
IsUnitHiddenBJ=~Unit," is hidden"
IsUnitHiddenBJHint="A unit can be hidden with the 'Unit - Hide' trigger action, or by placing the unit into a transport, Soul Gem, altar, etc."

IsUnitIllusionBJ="Unit Is An Illusion"
IsUnitIllusionBJ=~Unit," is an illusion"
IsUnitIllusionBJHint=

UnitCanSleepPerm="Unit Sleeps"
UnitCanSleepPerm=~Unit," sleeps when unprovoked"
UnitCanSleepPermHint="Units owned by players 1 through 12 never sleep."

UnitCanSleepBJ="Unit Sleeps At Night"
UnitCanSleepBJ=~Unit," sleeps when unprovoked at night"
UnitCanSleepBJHint="Units owned by players 1 through 12 never sleep."

UnitIsSleepingBJ="Unit Is Sleeping"
UnitIsSleepingBJ=~Unit," is sleeping"
UnitIsSleepingBJHint="Units owned by players 1 through 12 never sleep."

DoesUnitGenerateAlarms="Unit Generates Alarms"
DoesUnitGenerateAlarms=~Unit," generates alarms"
DoesUnitGenerateAlarmsHint=

IsUnitLoadedBJ="Einheit wird gerade transportiert"
IsUnitLoadedBJ=~Einheit," wird gerade transportiert"
IsUnitLoadedBJHint=

IsUnitInTransportBJ="Einheit ist in Transporter"
IsUnitInTransportBJ=~Einheit," wurde in ",~Transporter," geladen"
IsUnitInTransportBJHint=

IsUnitSelected="Unit Selected By Player"
IsUnitSelected=~Unit," is selected by ",~Player
IsUnitSelectedHint=

IsUnitAlly="Unit Belongs To An Ally Of Player"
IsUnitAlly=~Unit," belongs to an ally of ",~Player
IsUnitAllyHint=

IsUnitEnemy="Unit Belongs To An Enemy Of Player"
IsUnitEnemy=~Unit," belongs to an enemy of ",~Player
IsUnitEnemyHint=

UnitHasBuffBJ="Unit Has Specific Buff"
UnitHasBuffBJ=~Unit," has buff ",~Buff
UnitHasBuffBJHint=

IsUnitGroupEmptyBJ="Unit Group Is Empty"
IsUnitGroupEmptyBJ=~Unit Group," is empty"
IsUnitGroupEmptyBJHint="This is true if the unit group contains no units."

IsUnitGroupInRectBJ="Units Of Unit Group Are In Region"
IsUnitGroupInRectBJ="All units of ",~Unit Group," are in ",~Region
IsUnitGroupInRectBJHint="This is true if every unit in the unit group is in the given region."

IsUnitGroupDeadBJ="Units Of Unit Group Are Dead"
IsUnitGroupDeadBJ="All units of ",~Unit Group," are dead"
IsUnitGroupDeadBJHint="This is true if every unit in the unit group is dead."

IsFogEnabled="Nebel des Krieges ist aktiviert"
IsFogEnabled="Nebel des Krieges ist aktiviert"
IsFogEnabledHint=

IsFogMaskEnabled="Black Mask Enabled"
IsFogMaskEnabled="Black mask is enabled"
IsFogMaskEnabledHint=

IsUnitVisible="Unit Is Visible To Player"
IsUnitVisible=~Unit," is visible to ",~Player
IsUnitVisibleHint=

IsUnitInvisible="Unit Is Invisible To Player"
IsUnitInvisible=~Unit," is invisible to ",~Player
IsUnitInvisibleHint=

IsUnitFogged="Unit Fogged To Player"
IsUnitFogged=~Unit," is fogged to ",~Player
IsUnitFoggedHint=

IsUnitMasked="Unit Is Masked To Player"
IsUnitMasked=~Unit," is masked to ",~Player
IsUnitMaskedHint=

IsLocationVisibleToPlayer="Point Visible To Player"
IsLocationVisibleToPlayer=~Point," is visible to ",~Player
IsLocationVisibleToPlayerHint=

IsLocationFoggedToPlayer="Point Fogged To Player"
IsLocationFoggedToPlayer=~Point," is fogged for ",~Player
IsLocationFoggedToPlayerHint=

IsLocationMaskedToPlayer="Point Masked To Player"
IsLocationMaskedToPlayer=~Point," is masked for ",~Player
IsLocationMaskedToPlayerHint=


// returns integer
OperatorInt="Arithmetik"
OperatorInt=~Wert," ",~Operator," ",~Wert
OperatorIntHint=

GetForLoopIndexA="For Loop Integer A"
GetForLoopIndexA="Integer A"
GetForLoopIndexAHint=

GetForLoopIndexB="For Loop Integer B"
GetForLoopIndexB="Integer B"
GetForLoopIndexBHint=

StringLength="String Length"
StringLength="Length of ",~String
StringLengthHint=

R2I="Convert Real To Integer"
R2I="Integer(",~Real,")"
R2RHint=

S2I="Convert String To Integer"
S2I="Integer(",~String,")"
S2IHint=

GetElevatorHeight="Elevator Height"
GetElevatorHeight="Height of ",~Elevator
GetElevatorHeightHint="An elevator's height can be changed using the 'Destructible - Set Elevator Height' action."

GetTerrainCliffLevelBJ="Terrain Cliff Level"
GetTerrainCliffLevelBJ="Terrain cliff level at ",~Location
GetTerrainCliffLevelBJHint="Cliff level values start at zero."

GetTerrainVarianceBJ="Terrain Variance"
GetTerrainVarianceBJ="Terrain variance at ",~Location
GetTerrainVarianceBJHint=

GetLearnedSkillLevel="Learned Skill Level"
GetLearnedSkillLevel="Learned skill level"
GetLearnedSkillLevelHint=

GetPlayers="Anzahl der Spieler"
GetPlayers="Anzahl der Spieler"
GetPlayersHint=

GetTeams="Anzahl der Teams"
GetTeams="Anzahl der Teams"
GetTeamsHint=

GetAllyColorFilterState="Ally Color Filter Setting"
GetAllyColorFilterState="Ally color filter setting"
GetAllyColorFilterStateHint="A value of 0 indicates that filtering is disabled.  A value of 1 indicates that filtering is only enabled for the minimap.  A value of 2 indicates that filtering is enabled for the minimap and the game view."

GetTournamentFinishNowRule="Tournament Finish Rule"
GetTournamentFinishNowRule="Tournament finish rule"
GetTournamentFinishNowRuleHint="A value of 1 indicates that the game is in a bracket and therefore cannot end in a draw.  Any other value indicates that this is a preliminary game and may end in a draw."

GetTournamentScore="Tournament Melee Score"
GetTournamentScore="Tournament melee score for ",~Player
GetTournamentScoreHint="This returns the melee score for a player, which is used by melee games to determine victory/defeat/draw if a tournament game runs too long."

GetStoredIntegerBJ="Load Integer Value"
GetStoredIntegerBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredIntegerBJHint="If the label is not found, this function returns 0."

GetHeroLevel="Hero Level"
GetHeroLevel="Hero level of ",~Hero
GetHeroLevelHint=

GetHeroXP="Hero Experience"
GetHeroXP="Hero experience of ",~Hero
GetHeroXPHint=

GetHeroStatBJ="Helden-Attribut"
GetHeroStatBJ=~Attribut," von ",~Held," (",~Einschließlich/Ausschließlich," Boni)"
GetHeroStatBJHint=

GetHeroSkillPoints="Unspent Skill Points"
GetHeroSkillPoints="Unspent skill points of ",~Hero
GetHeroSkillPointsHint=

GetItemLevel="Gegenstandsstufe"
GetItemLevel="Gegenstandsstufe von ",~Gegenstand
GetItemLevelHint=

GetItemCharges="Verbliebene Gegenstandsaufladungen"
GetItemCharges="Verbliebene Aufladungen von ",~Gegenstand
GetItemChargesHint="Gegenstände mit unbegrenzten Aufladungen geben null zurück."

GetItemUserData="Custom Value Of Item"
GetItemUserData="Custom value of ",~Item
GetItemUserDataHint="Use 'Item - Set Custom Value' to set the custom value of an item."

LeaderboardGetPlayerIndexBJ="Leaderboard Position"
LeaderboardGetPlayerIndexBJ="Position of ",~Player," in ",~Leaderboard
LeaderboardGetPlayerIndexBJHint=

GetRandomInt="Zufällige Zahl"
GetRandomInt="Zufällige Ganzzahl zwischen ",~Minimum," und ",~Maximum
GetRandomIntHint=

IMinBJ="Min"
IMinBJ="Min(",~Wert 1,", ",~Wert 2,")"
IMinBJHint=

IMaxBJ="Max"
IMaxBJ="Max(",~Wert 1,", ",~Wert 2,")"
IMaxBJHint=

IAbsBJ="Abs"
IAbsBJ="Abs(",~Value,")"
IAbsBJHint="Berechnet den absoluten Wert einer Zahl."

ISignBJ="Sign"
ISignBJ="Sign(",~Value,")"
ISignBJHint="Berechnet das Vorzeichen einer Zahl.  Das Vorzeichen einer negativen Zahl ist -1.  Das Vorzeichen einer nicht negativen Zahl ist 1."

ModuloInteger="Modulo"
ModuloInteger=~Dividend," mod ",~Divisor
ModuloIntegerHint="Calculates the remainder of a division.  Example: 12 mod 5 = 2."

MultiboardGetRowCount="Reihenanzahl"
MultiboardGetRowCount="Anzahl der Reihen in ",~Multiboard
MultiboardGetRowCountHint=

MultiboardGetColumnCount="Spaltenanzahl"
MultiboardGetColumnCount="Anzahl der Spalten in ",~Multiboard
MultiboardGetColumnCountHint=

GetResourceAmount="Verbleibendes Gold"
GetResourceAmount="Resource quantity contained in ",~Gold Mine
GetResourceAmountHint="This is for use with Gold Mines."

GetPlayerState="Player Property"
GetPlayerState=~Player," ",~Property
GetPlayerStateHint=

GetPlayerTaxRateBJ="Player Tax Rate"
GetPlayerTaxRateBJ="Tax rate of ",~Resource," from ",~Player," to ",~Player
GetPlayerTaxRateBJHint="The tax rate value is a percentage of total income (0-100)."

GetPlayerScore="Player Score"
GetPlayerScore=~Player," ",~Score
GetPlayerScoreHint=

GetConvertedPlayerId="Player Number"
GetConvertedPlayerId="Player number of ",~Player
GetConvertedPlayerIdHint="Player numbers range from 1 to 16."

GetPlayerStructureCount="Count Structures"
GetPlayerStructureCount="Count structures controlled by ",~Player," (",~Include/Exclude," incomplete structures)"
GetPlayerStructureCountHint=

GetPlayerUnitCount="Count Non-Structure Units"
GetPlayerUnitCount="Count non-structure units controlled by ",~Player," (",~Include/Exclude," incomplete units)"
GetPlayerUnitCountHint=

GetPlayerTechCountSimple="Current Research Level"
GetPlayerTechCountSimple="Current research level of ",~Tech," for ",~Player
GetPlayerTechCountSimpleHint="Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades."

GetPlayerTechMaxAllowedSwap="Max Research Level"
GetPlayerTechMaxAllowedSwap="Max research level of ",~Tech," for ",~Player
GetPlayerTechMaxAllowedSwapHint="Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades."

GetPlayerTeam="Player Team"
GetPlayerTeam="Team number of ",~Player
GetPlayerTeamHint=

CountPlayersInForceBJ="Count Players In Player Group"
CountPlayersInForceBJ="Number of players in ",~Player Group
CountPlayersInForceBJHint=

CountUnitsInGroup="Count Units In Unit Group"
CountUnitsInGroup="Number of units in ",~Unit Group
CountUnitsInGroupHint=

CountLivingPlayerUnitsOfTypeId="Count Living Units Owned By Player"
CountLivingPlayerUnitsOfTypeId="Number of living ",~Unit-Type," units owned by ",~Player
CountLivingPlayerUnitsOfTypeIdHint=

GetUnitFoodUsed="Verbrauchtes Essen einer Einheit"
GetUnitFoodUsed="Verbrauchtes Essen von ",~Einheit
GetUnitFoodUsedHint=

GetUnitFoodMade="Geliefertes Essen einer Einheit"
GetUnitFoodMade="Geliefertes Essen von ",~Einheit
GetUnitFoodMadeHint=

GetFoodUsed="Verbrauchtes Essen eines Einheitentyps"
GetFoodUsed="Verbrauchtes Essen von ",~Einheitentyp
GetFoodUsedHint=

GetFoodMade="Geliefertes Essen eines Einheitentyps"
GetFoodMade="Geliefertes Essen von ",~Einheitentyp
GetFoodMadeHint=

GetUnitPointValue="Point-Value Of Unit"
GetUnitPointValue="Point-value of ",~Unit
GetUnitPointValueHint=

GetUnitPointValueByType="Point-Value Of Unit-Type"
GetUnitPointValueByType="Point-value of ",~Unit-Type
GetUnitPointValueByTypeHint=

GetUnitUserData="Eigener Wert einer Einheit"
GetUnitUserData="Eigener Wert von ",~Einheit
GetUnitUserDataHint="Verwenden Sie 'Einheit - Setze eigenen Wert', um den eigenen Wert einer Einheit festzulegen."

GetUnitLevel="Stufe einer Einheit"
GetUnitLevel="Stufe von ",~Einheit
GetUnitLevelHint="Dies kann für Helden und reguläre Einheiten verwendet werden."

GetUnitAbilityLevelSwapped="Stufe einer Fähigkeit für eine Einheit"
GetUnitAbilityLevelSwapped="Stufe von ",~Fähigkeit," für ",~Einheit
GetUnitAbilityLevelSwappedHint="Falls die Einheit die Fähigkeit nicht besitzt, ist das Ergebnis null."

UnitInventoryCount="Zähle getragene Gegenstände"
UnitInventoryCount="Anzahl der von ",~Einheit," getragenen Gegenstände"
UnitInventoryCountHint=

UnitInventorySizeBJ="Größe des Inventars"
UnitInventorySizeBJ="Größe des Inventars von ",~Einheit
UnitInventorySizeBJHint=

UnitCountBuffsExBJ="Count Buffs By Type"
UnitCountBuffsExBJ="Number of ",~Buff Type," buffs considered ",~Buff Resist," on ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"
UnitCountBuffsExBJHint=

GetTriggerEvalCount="Auslöser-Auswertungsanzahl"
GetTriggerEvalCount="Auswertungsanzahl von ",~Auslöser
GetTriggerEvalCountHint=

GetTriggerExecCount="Auslöser-Ausführungsanzahl"
GetTriggerExecCount="Ausführungsanzahl von ",~Auslöser
GetTriggerExecCountHint=

QueuedTriggerCountBJ="Count Triggers In Trigger Queue"
QueuedTriggerCountBJ="Number of triggers in the trigger queue"
QueuedTriggerCountBJHint="Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."


// returns real
OperatorReal="Arithmetik"
OperatorReal=~Wert," ",~Operator," ",~Wert
OperatorRealHint=

GetLocationX="X eines Punkts"
GetLocationX="X von ",~Punkt
GetLocationXHint=

GetLocationY="Y eines Punkts"
GetLocationY="Y von ",~Punkt
GetLocationYHint=

CameraSetupGetFieldSwap="Kamerafeld eines Kameraobjekts"
CameraSetupGetFieldSwap=~Kamerafeld," von ",~Kameraobjekt
CameraSetupGetFieldSwapHint=

GetCameraField="Kamerafeld der derzeitigen Kamera"
GetCameraField=~Kamerafeld," der derzeitigen Kameraansicht"
GetCameraFieldHint=

GetCameraTargetPositionX="Ziel-X der derzeitigen Kamera"
GetCameraTargetPositionX="Ziel-X der derzeitigen Kameraansicht"
GetCameraTargetPositionXHint=

GetCameraTargetPositionY="Ziel-Y der derzeitigen Kamera"
GetCameraTargetPositionY="Ziel-Y der derzeitigen Kameraansicht"
GetCameraTargetPositionYHint=

GetCameraTargetPositionZ="Ziel-Z der derzeitigen Kamera"
GetCameraTargetPositionZ="Ziel-Z der derzeitigen Kameraansicht"
GetCameraTargetPositionZHint=

GetCameraEyePositionX="Quell-X der derzeitigen Kamera"
GetCameraEyePositionX="Quell-X der derzeitigen Kameraansicht"
GetCameraEyePositionXHint=

GetCameraEyePositionY="Quell-Y der derzeitigen Kamera"
GetCameraEyePositionY="Quell-Y der derzeitigen Kameraansicht"
GetCameraEyePositionYHint=

GetCameraEyePositionZ="Quell-Z der derzeitigen Kamera"
GetCameraEyePositionZ="Quell-Z der derzeitigen Kameraansicht"
GetCameraEyePositionZHint=

GetLastTransmissionDurationBJ="Letzte Übertragungslänge"
GetLastTransmissionDurationBJ="Länge der letzten Übertragung"
GetLastTransmissionDurationBJHint="Dies ist die Länge, in Sekunden, der letzten 'Filmisch - Übertragung'-Aktion."

I2R="Wandle Ganzzahl in Reelle um"
I2R="Reell(",~Ganzzahl,")"
I2RHint=

S2R="Wandle Zeichenkette in Reelle um"
S2R="Reell(",~Zeichenkette,")"
S2RHint=

Deg2Rad="Wandle Grad in Bogenmaße um"
Deg2Rad="Bogenmaße(",~Grad,")"
Deg2RadHint=

Rad2Deg="Wandle Bogenmaße in Grad um"
Rad2Deg="Grad(",~Bogenmaße,")"
Rad2DegHint=

TimerGetElapsed="Vergangene Zeit"
TimerGetElapsed="Vergangene Zeit für ",~Zeitgeber
TimerGetElapsedHint=

TimerGetRemaining="Verbleibende Zeit"
TimerGetRemaining="Verbleibende Zeit für ",~Zeitgeber
TimerGetRemainingHint=

TimerGetTimeout="Anfangszeit"
TimerGetTimeout="Anfangszeit für ",~Zeitgeber
TimerGetTimeoutHint=

GetDestructableLife="Leben"
GetDestructableLife="Derzeitiges Leben von ",~Zerstörbarem
GetDestructableLifeHint="Zerstörbare verlieren Leben, wenn sie angegriffen oder geerntet werden.  Wie Einheiten, sterben Zerstörbare wenn ihr Leben 0 erreicht."

GetDestructableMaxLife="Maximales Leben"
GetDestructableMaxLife="Maximales Leben von ",~Zerstörbarem
GetDestructableMaxLifeHint="Zerstörbare verlieren Leben, wenn sie angegriffen oder geerntet werden.  Wie Einheiten, sterben Zerstörbare wenn ihr Leben 0 erreicht."

GetDestructableOccluderHeight="Verstopfungshöhe"
GetDestructableOccluderHeight="Verstopfungshöhe von ",~Zerstörbarem
GetDestructableOccluderHeightHint=

GetEventDamage="Erlittener Schaden"
GetEventDamage="Erlittener Schaden"
GetEventDamageHint="Wenn auf ein 'Erleidet Schaden'-Einheitenereignis reagiert wird, verweist dies auf die Menge des erlittenen Schadens."

GetTournamentFinishSoonTimeRemaining="Verbleibende Turnierzeit"
GetTournamentFinishSoonTimeRemaining="Verbleibende Turnierzeit"
GetTournamentFinishSoonTimeRemainingHint="Wenn auf ein 'Spiel muss bald enden'-Turnierereignis reagiert wird, liefert dies den Betrag der verbleibenden Zeit, in Echtzeitsekunden."

GetTimeOfDay="Tageszeit"
GetTimeOfDay="Spielinterne Tageszeit"
GetTimeOfDayHint="Dies ist die spielinterne Zeit, nicht die echte Zeit."

GetTimeOfDayScalePercentBJ="Tageszeitgeschwindigkeit"
GetTimeOfDayScalePercentBJ="Derzeitige Tageszeitgeschwindigkeit"
GetTimeOfDayScalePercentBJHint="Dies liefert die Tageszeitgeschwindigkeit als Prozentsatz der normalen Tageszeitgeschwindigkeit."

GetStoredRealBJ="Lade Reellwert"
GetStoredRealBJ="Lade ",~Kennung," von ",~Kategorie," aus ",~Spiel-Cache
GetStoredRealBJHint="Falls die Kennung nicht gefunden wird, liefert diese Funktion 0."

LoadIntegerBJ="Lade Ganzzahlwert (Hash-Tabelle)"
LoadIntegerBJ="Lade ",~Wert," von ",~Wert," aus ",~Hash-Tabelle
LoadIntegerBJHint="Falls die Kennung nicht gefunden wird, liefert diese Funktion 0."

LoadRealBJ="Load Real Value (hashtable)"
LoadRealBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadRealBJHint="If the label is not found, this function returns 0."

LoadStringBJ="Load String Value (hashtable)"
LoadStringBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadStringBJHint="If the label is not found, this function returns an empty string."

LoadBooleanBJ="Load Boolean Value (hashtable)"
LoadBooleanBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadBooleanBJHint="If the label is not found, this function returns False."

LoadPlayerHandleBJ="Load Player Handle"
LoadPlayerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadPlayerHandleBJHint="If the label is not found, this function returns NULL."

LoadWidgetHandleBJ="Load Widget Handle"
LoadWidgetHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadWidgetHandleBJHint="If the label is not found, this function returns NULL."

LoadDestructableHandleBJ="Load Destructable Handle"
LoadDestructableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDestructableHandleBJHint="If the label is not found, this function returns NULL."

LoadItemHandleBJ="Load Item Handle"
LoadItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemHandleBJHint="If the label is not found, this function returns NULL."

LoadUnitHandleBJ="Load Unit Handle"
LoadUnitHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitHandleBJHint="If the label is not found, this function returns NULL."

LoadAbilityHandleBJ="Load Ability Handle"
LoadAbilityHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadAbilityHandleBJHint="If the label is not found, this function returns NULL."

LoadTimerHandleBJ="Load Timer Handle"
LoadTimerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerHandleBJHint="If the label is not found, this function returns NULL."

///LoadTriggerRegionHandleBJ="Load Region Handle"
///LoadTriggerRegionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
///LoadTriggerRegionHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerHandleBJ="Load Trigger Handle"
LoadTriggerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerConditionHandleBJ="Load Triggercondition Handle"
LoadTriggerConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerConditionHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerActionHandleBJ="Load Triggeraction Handle"
LoadTriggerActionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerActionHandleBJHint="If the label is not found, this function returns NULL."

LoadTriggerEventHandleBJ="Load Eventid Handle"
LoadTriggerEventHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerEventHandleBJHint="If the label is not found, this function returns NULL."

LoadForceHandleBJ="Load Force Handle"
LoadForceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadForceHandleBJHint="If the label is not found, this function returns NULL."

LoadGroupHandleBJ="Load Group Handle"
LoadGroupHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadGroupHandleBJHint="If the label is not found, this function returns NULL."

LoadLocationHandleBJ="Load Location Handle"
LoadLocationHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLocationHandleBJHint="If the label is not found, this function returns NULL."

LoadRegionHandleBJ="Load Region Handle"
LoadRegionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRegionHandleBJHint="If the label is not found, this function returns NULL."

LoadRectHandleBJ="Load Rect Handle"
LoadRectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRectHandleBJHint="If the label is not found, this function returns NULL."

LoadBooleanExprHandleBJ="Load Boolexpr Handle"
LoadBooleanExprHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadBooleanExprHandleBJHint="If the label is not found, this function returns NULL."

//LoadConditionFuncHandleBJ="Load Conditionfunc Handle"
//LoadConditionFuncHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadConditionFuncHandleBJHint="If the label is not found, this function returns NULL."

//LoadFilterFuncHandleBJ="Load Filterfunc Handle"
//LoadFilterFuncHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadFilterFuncHandleBJHint="If the label is not found, this function returns NULL."

LoadSoundHandleBJ="Load Sound Handle"
LoadSoundHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadSoundHandleBJHint="If the label is not found, this function returns NULL."

//LoadRaceHandleBJ="Load Race Handle"
//LoadRaceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadRaceHandleBJHint="If the label is not found, this function returns NULL."

LoadEffectHandleBJ="Load Effect Handle"
LoadEffectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadEffectHandleBJHint="If the label is not found, this function returns NULL."

LoadUnitPoolHandleBJ="Load Unitpool Handle"
LoadUnitPoolHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitPoolHandleBJHint="If the label is not found, this function returns NULL."

LoadItemPoolHandleBJ="Load Itempool Handle"
LoadItemPoolHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemPoolHandleBJHint="If the label is not found, this function returns NULL."

LoadQuestHandleBJ="Load Quest Handle"
LoadQuestHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestHandleBJHint="If the label is not found, this function returns NULL."

LoadQuestItemHandleBJ="Load Questitem Handle"
LoadQuestItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestItemHandleBJHint="If the label is not found, this function returns NULL."

LoadDefeatConditionHandleBJ="Load Defeatcondition Handle"
LoadDefeatConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDefeatConditionHandleBJHint="If the label is not found, this function returns NULL."

LoadTimerDialogHandleBJ="Load Timerdialog Handle"
LoadTimerDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerDialogHandleBJHint="If the label is not found, this function returns NULL."

LoadLeaderboardHandleBJ="Load Leaderboard Handle"
LoadLeaderboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLeaderboardHandleBJHint="If the label is not found, this function returns NULL."

LoadMultiboardHandleBJ="Load Multiboard Handle"
LoadMultiboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardHandleBJHint="If the label is not found, this function returns NULL."

LoadMultiboardItemHandleBJ="Load Multiboarditem Handle"
LoadMultiboardItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardItemHandleBJHint="If the label is not found, this function returns NULL."

LoadTrackableHandleBJ="Load Trackable Handle"
LoadTrackableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTrackableHandleBJHint="If the label is not found, this function returns NULL."

LoadDialogHandleBJ="Load Dialog Handle"
LoadDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDialogHandleBJHint="If the label is not found, this function returns NULL."

LoadButtonHandleBJ="Load Button Handle"
LoadButtonHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadButtonHandleBJHint="If the label is not found, this function returns NULL."

//LoadVersionHandleBJ="Load Version Handle"
//LoadVersionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadVersionHandleBJHint="If the label is not found, this function returns NULL."

//LoadItemTypeHandleBJ="Load Itemtype Handle"
//LoadItemTypeHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadItemTypeHandleBJHint="If the label is not found, this function returns NULL."

LoadTextTagHandleBJ="Load Texttag Handle"
LoadTextTagHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTextTagHandleBJ="If the label is not found, this function returns NULL."

LoadLightningHandleBJ="Load Lightning Handle"
LoadLightningHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLightningHandleBJHint="If the label is not found, this function returns NULL."

LoadImageHandleBJ="Load Image Handle"
LoadImageHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadImageHandleBJHint="If the label is not found, this function returns NULL."

LoadUbersplatHandleBJ="Load Ubersplat Handle"
LoadUbersplatHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUbersplatHandleBJHint="If the label is not found, this function returns NULL."

LoadFogStateHandleBJ="Load Fogstate Handle"
LoadFogStateHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogStateHandleBJHint="If the label is not found, this function returns NULL."

LoadFogModifierHandleBJ="Load Fogmodifier Handle"
LoadFogModifierHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogModifierHandleBJHint="If the label is not found, this function returns NULL."

GetItemLifeBJ="Gegenstandsleben"
GetItemLifeBJ="Derzeitiges Leben von ",~Gegenstand
GetItemLifeBJHint=

GetLightningColorRBJ="Roter Farbton eines Blitzes"
GetLightningColorRBJ="Roter Farbton von ",~Blitz
GetLightningColorRBJHint="Dies liefert einen Wert zwischen 0 und 1.  Verwenden Sie 'Blitz - Setze Blitzeffektfarbe', um die Farbe eines Blitzeffekts zu verändern."

GetLightningColorGBJ="Grüner Farbton eines Blitzes"
GetLightningColorGBJ="Grüner Farbton von ",~Blitz
GetLightningColorGBJHint="Dies liefert einen Wert zwischen 0 und 1.  Verwenden Sie 'Blitz - Setze Blitzeffektfarbe', um die Farbe eines Blitzeffekts zu verändern."

GetLightningColorBBJ="Blauer Farbton eines Blitzes"
GetLightningColorBBJ="Blauer Farbton von ",~Blitz
GetLightningColorBBJHint="Dies liefert einen Wert zwischen 0 und 1.  Verwenden Sie 'Blitz - Setze Blitzeffektfarbe', um die Farbe eines Blitzeffekts zu verändern."

GetLightningColorABJ="Alphawert eines Blitzes"
GetLightningColorABJ="Alphawert von ",~Blitz
GetLightningColorABJHint="Dies liefert einen Wert zwischen 0 und 1.  Ein Wert von 0 entspricht einem vollständig unsichtbaren Blitzeffekt.  Verwenden Sie 'Blitz - Setze Blitzeffektfarbe', um den Alphawert eines Blitzeffekts zu verändern."

GetRandomReal="Zufällige Zahl"
GetRandomReal="Zufällige reelle Zahl zwischen ",~Minimum," und ",~Maximum
GetRandomRealHint=

GetRandomDirectionDeg="Zufälliger Winkel"
GetRandomDirectionDeg="Zufälliger Winkel"
GetRandomDirectionDegHint="Dies ist eine zufällige reelle Zahl im Bereich von 0 bis 360, für die Verwendung als ein Winkel oder eine Einheitenausrichtung."

GetRandomPercentageBJ="Zufälliger Prozentsatz"
GetRandomPercentageBJ="Zufälliger Prozentsatz"
GetRandomPercentageBJHint="Dies ist eine zufällige reelle Zahl im Bereich von 0 bis 100, für die Verwendung als Prozentsatz."

DistanceBetweenPoints="Entfernung zwischen Punkten"
DistanceBetweenPoints="Entfernung zwischen ",~Punkt," und ",~Punkt
DistanceBetweenPointsHint="Liefert die euklidische Entfernung zwischen zwei Punkten, ungeachtet der Höhe."

AngleBetweenPoints="Winkel zwischen Punkten"
AngleBetweenPoints="Winkel von ",~Punkt," zu ",~Punkt
AngleBetweenPointsHint="Liefert den Winkel einer Strecke eines Punktes zu einem anderen."

RMinBJ="Min"
RMinBJ="Min(",~Wert 1,", ",~Wert 2,")"
RMinBJHint=

RMaxBJ="Max"
RMaxBJ="Max(",~Wert 1,", ",~Wert 2,")"
RMaxBJHint=

RAbsBJ="Abs"
RAbsBJ="Abs(",~Wert,")"
RAbsBJHint="Berechnet den absoluten Wert einer Zahl."

RSignBJ="Sign"
RSignBJ="Sign(",~Wert,")"
RSignBJHint="Berechnet das Vorzeichen einer Zahl.  Das Vorzeichen einer negativen Zahl ist -1.  Das Vorzeichen einer positiven Zahl ist 1."

ModuloReal="Modulo"
ModuloReal=~Dividend," mod ",~Divisor
ModuloRealHint="Berechnet den Rest einer Division.  Beispiel: 9,0 mod 2,5 = 1,5."

Pow="Potenz"
Pow="Potenz(",~Wert,", ",~Potenz,")"
PowHint=

SquareRoot="Quadratwurzel"
SquareRoot="Quadratwurzel(",~Wert,")"
SquareRootHint=

SinBJ="Sinus"
SinBJ="Sin(",~Winkel,")"
SinBJHint="Der festgelegte Winkel wird in Grad erwartet."

CosBJ="Kosinus"
CosBJ="Cos(",~Winkel,")"
CosBJHint="Der festgelegte Winkel wird in Grad erwartet."

TanBJ="Tangens"
TanBJ="Tan(",~Winkel,")"
TanBJHint="Der festgelegte Winkel wird in Grad erwartet."

AsinBJ="Arkussinus"
AsinBJ="Asin(",~Wert,")"
AsinBJHint="Der gelieferte Winkel ist in Grad."

AcosBJ="Arkuskosinus"
AcosBJ="Acos(",~Wert,")"
AcosBJHint="Der gelieferte Winkel ist in Grad."

AtanBJ="Arkustangens (vom Winkel)"
AtanBJ="Atan(",~Wert,")"
AtanBJHint="Der gelieferte Winkel ist in Grad."

Atan2BJ="Arkustangens (von den Deltas)"
Atan2BJ="Atan2(",~Y,", ",~X,")"
Atan2BJHint="Der gelieferte Winkel ist in Grad."

GetPlayerHandicapXPBJ="Erfahrungsrate"
GetPlayerHandicapXPBJ=~Spieler,"-Erfahrungsrate"
GetPlayerHandicapXPBJHint="Erfahrungsraten werden als Prozentsätze festgelegt, mit 100% als Standardwert."

GetPlayerHandicapBJ="Handicap"
GetPlayerHandicapBJ=~Spieler,"-Handicap"
GetPlayerHandicapBJHint="Handicap-Werte werden als Prozentsätze festgelegt, mit 100% als Standardwert."

GetRectCenterX="Mitte-X einer Region"
GetRectCenterX="Mitte-X von ",~Region
GetRectCenterXHint=

GetRectCenterY="Mitte-Y einer Region"
GetRectCenterY="Mitte-Y von ",~Region
GetRectCenterYHint=

GetRectMinX="Min-X einer Region"
GetRectMinX="Min-X von ",~Region
GetRectMinXHint=

GetRectMinY="Min-Y einer Region"
GetRectMinY="Min-Y von ",~Region
GetRectMinYHint=

GetRectMaxX="Max-X einer Region"
GetRectMaxX="Max-X von ",~Region
GetRectMaxXHint=

GetRectMaxY="Max-Y einer Region"
GetRectMaxY="Max-Y von ",~Region
GetRectMaxYHint=

GetRectWidthBJ="Breite einer Region"
GetRectWidthBJ="Breite von ",~Region
GetRectWidthBJHint=

GetRectHeightBJ="Höhe einer Region"
GetRectHeightBJ="Höhe einer ",~Region
GetRectHeightBJHint=

GetSoundDurationBJ="Geräuschlänge"
GetSoundDurationBJ="Länge von ",~Geräusch
GetSoundDurationBJHint="Dies liefert die Länge eines Geräusches, in Sekunden."

GetSoundFileDurationBJ="Musiklänge"
GetSoundFileDurationBJ="Länge von ",~Musik
GetSoundFileDurationBJHint="Dies liefert die Länge einer Filmmusik, in Sekunden."

GetUnitStateSwap="Eigenschaft"
GetUnitStateSwap=~Eigenschaft," von ",~Einheit
GetUnitStateSwapHint=

GetUnitLifePercent="Prozentuales Leben"
GetUnitLifePercent="Prozentuales Leben von ",~Einheit
GetUnitLifePercentHint=

GetUnitManaPercent="Prozentuales Mana"
GetUnitManaPercent="Prozentuales Mana von ",~Einheit
GetUnitManaPercentHint=

GetUnitFacing="Ausrichtungswinkel"
GetUnitFacing="Ausrichtung von ",~Einheit
GetUnitFacingHint="Der gelieferte Winkel ist in Grad, mit 0 als Ausrichtung nach Osten."

GetUnitMoveSpeed="Bewegungstempo (derzeitiges)"
GetUnitMoveSpeed="Derzeitiges Bewegungstempo von ",~Einheit
GetUnitMoveSpeedHint="Für gewöhnlich reichen Bewegungstempos von 150 bis 300."

GetUnitDefaultMoveSpeed="Bewegungstempo (standardmäßiges)"
GetUnitDefaultMoveSpeed="Standardmäßiges Bewegungstempo von ",~Einheit
GetUnitDefaultMoveSpeedHint="Für gewöhnlich reichen Bewegungstempos von 150 bis 300."

GetUnitAcquireRange="Zielerfassungs-Reichweite (derzeitige)"
GetUnitAcquireRange="Derzeitige Zielerfassungs-Reichweite von ",~Einheit
GetUnitAcquireRangeHint=

GetUnitDefaultAcquireRange="Zielerfassungs-Reichweite (standardmäßige)"
GetUnitDefaultAcquireRange="Standardmäßige Zielerfassungs-Reichweite of ",~Unit
GetUnitDefaultAcquireRangeHint=

GetUnitTurnSpeed="Drehgeschwindigkeit (derzeitige)"
GetUnitTurnSpeed="Derzeitige Drehgeschwindigkeit von ",~Einheit
GetUnitTurnSpeedHint="Die Drehgeschwindigkeit einer Einheit entscheidet, wie schnell die Einheit ihre Richtung wechselt.  Drehgeschwindigkeitswerte müssen zwischen 0 und 1 sein, mit kleineren Zahlen für langsamere Drehraten."

GetUnitDefaultTurnSpeed="Drehgeschwindigkeit (standardmäßige)"
GetUnitDefaultTurnSpeed="Standardmäßige Drehgeschwindigkeit von ",~Einheit
GetUnitDefaultTurnSpeedHint="Die Drehgeschwindigkeit einer Einheit entscheidet, wie schnell die Einheit ihre Richtung wechselt.  Drehgeschwindigkeitswerte müssen zwischen 0 und 1 sein, mit kleineren Zahlen für langsamere Drehraten."

GetUnitPropWindowBJ="Prop Window Angle (Current)"
GetUnitPropWindowBJ="Current prop window angle of ",~Unit
GetUnitPropWindowBJHint=

GetUnitDefaultPropWindowBJ="Prop Window Angle (Default)"
GetUnitDefaultPropWindowBJ="Default prop window angle of ",~Unit
GetUnitDefaultPropWindowBJHint=

GetUnitFlyHeight="Flughöhe (derzeitige)"
GetUnitFlyHeight="Derzeitige Flughöhe von ",~Einheit
GetUnitFlyHeightHint="Nur fliegende Einheiten verwenden Flughöhen."

GetUnitDefaultFlyHeight="Flughöhe (standardmäßige)
GetUnitDefaultFlyHeight="Standardmäßige Flughöhe von ",~Einheit
GetUnitDefaultFlyHeightHint=


// returns string
OperatorString="Verkettete Zeichenketten"
OperatorString=~Zeichenkette 1," + ",~Zeichenkette 2
OperatorStringHint=

SubStringBJ="Teilzeichenkette"
SubStringBJ="Teilzeichenkette(",~Zeichenkette,", ",~Anfang,", ",~Ende,")"
SubStringBJHint="Beispiel:  Teilzeichenkette(''Grunzer stinken'', 2, 4) = ''run''."

GetHandleIdBJ="Handle-ID erhalten"
GetHandleIdBJ="Schlüssel ",~Handle
GetHandleIdBJHint="Erzeugt einen Schlüssel eines Handles für die Verwendung in der Hash-Tabelle."

StringHashBJ="Zeichenketten-ID erhalten"
StringHashBJ="Schlüssel ",~Zeichenkette
StringHashBJHint="Erzeugt einen Schlüssel einer Zeichenkette für die Verwendung in der Hash-Tabelle."

I2S="Ganzzahl in Zeichenkette umwandeln"
I2S="Zeichenkette(",~Ganzzahl,")"
I2SHint=

R2S="Reelle in Zeichenkette umwandeln"
R2S="Zeichenkette(",~Reelle,")"
R2SHint=

R2SW="Reele in formatierte Zeichenkette umwandeln"
R2SW="Zeichenkette(",~Reelle,", ",~Breite,", ",~Genauigkeit,")"
R2SWHint="Beispiele:  Zeichenkette(1.234, 7, 2) = ''   1.23''.  Zeichenkette(1.234, 2, 5) = ''1.23400''."

OrderId2StringBJ="Befehl in Zeichenkette umwandeln"
OrderId2StringBJ="Zeichenkette(",~Befehl,")"
OrderId2StringBJHint="Beispiel-Befehlszeichenketten:  ''harvest'', ''move'', ''smart'', ''attack''."

UnitId2StringBJ="Einheitentyp in Zeichenkette umwandeln"
UnitId2StringBJ="Zeichenkette(",~Einheitentyp,")"
UnitId2StringBJHint=

StringIdentity="Ausgelagerte Zeichenkette umwandeln"
StringIdentity="Ausgelagerte Zeichenkette(",~Zeichenkette,")"
StringIdentityHint="Verwenden Sie dies, um sicherzustellen, dass die angegebene Zeichenkette in die Kartenzeichenkettendatei ausgelagert wird (war3map.wts)."

StringCase="Zeichenketten-Groß- und kleinschreibung umwandeln"
StringCase="Zeichenkette(",~Zeichenkette,") als ",~Klein-/Großschreibung
StringCaseHint="Alle Buchstaben in der Zeichenkette werden in die gewählte Schreibung geändert."

GetDestructableName="Zerstörbares-Name"
GetDestructableName="Name des ",~Zerstörbaren
GetDestructableNameHint=

GetEventPlayerChatString="Eingegebene Chat-Zeichenkette"
GetEventPlayerChatString="Eingegebene Chat-Zeichenkette"
GetEventPlayerChatStringHint=

GetEventPlayerChatStringMatched="Übereinstimmende Chat-Zeichenkette"
GetEventPlayerChatStringMatched="Übereinstimmende Chat-Zeichenkette"
GetEventPlayerChatStringMatchedHint=

GetSaveBasicFilename="Saved-Game Filename"
GetSaveBasicFilename="Saved-game filename"
GetSaveBasicFilenameHint="When responding to a 'Game - Game Save' event, this refers to the name of the file being saved."

GetAbilityName="Fähigkeitenname"
GetAbilityName="Name von ",~Fähigkeit
GetAbilityNameHint=

GetAbilityEffectBJ="Ability Effect Art Path"
GetAbilityEffectBJ="Art path of ",~Ability," ",~EffectType," (index ",~Index,")"
GetAbilityEffectBJHint="This returns the model file path of an ability's effect art."

GetAbilitySoundBJ="Ability Effect Sound Name"
GetAbilitySoundBJ="Name of ",~Ability," ",~SoundType
GetAbilitySoundBJHint=

GetStoredStringBJ="Load String Value"
GetStoredStringBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredStringBJHint="If the label is not found, this function returns an empty string."

GetHeroProperName="Heldeneigenname"
GetHeroProperName="Eigenname von ",~Held
GetHeroProperNameHint="Wird dies für einen Helden aufgerufen, wird sein eigentliche Name zurückgegeben (z. B. 'Granis Darkhammer' für einen Paladin)."

GetItemName="Gegenstandsname"
GetItemName="Name von ",~Gegenstand
GetItemNameHint=

MultiboardGetTitleText="Multiboard Title"
MultiboardGetTitleText="Title of ",~Multiboard
MultiboardGetTitleTextHint=

GetPlayerName="Spielername"
GetPlayerName="Name von ",~Spieler
GetPlayerNameHint=

GetTriggerName="Auslösername"
GetTriggerName="Name des derzeitigen Auslösers"
GetTriggerNameHint="Liefert den, wie im Editor eingegebenen Namen des Auslösers, der diese Funktion enthält."

GetUnitName="Einheitenname"
GetUnitName="Name von ",~Einheit
GetUnitNameHint="Dies liefert den internen Namen einer Einheit, nicht den Eigennamevon Einheiten oder Helden."


// returns location
GetRectCenter="Mitte einer Region"
GetRectCenter="Mitte von ",~Region
GetRectCenterHint=

GetRandomLocInRect="Zufälliger Punkt in einer Region"
GetRandomLocInRect="Zufälliger Punkt in ",~Region
GetRandomLocInRectHint=

OffsetLocation="Punkt mit Abstand"
OffsetLocation=~Punkt," verschoben um (",~X,", ",~Y,")"
OffsetLocationHint="Die Abstandswerte sind (X, Y)."

PolarProjectionBJ="Punkt mit polarem Abstand"
PolarProjectionBJ=~Punkt," verschoben um ",~Entfernung," in Richtung ",~Winkel," Grad"
PolarProjectionBJHint=

CameraSetupGetDestPositionLoc="Ziel eines Kameraobjekts"
CameraSetupGetDestPositionLoc="Ziel von ",~Kameraobjekt
CameraSetupGetDestPositionLocHint=

GetCameraTargetPositionLoc="Target Of Current Camera"
GetCameraTargetPositionLoc="Target of current camera view"
GetCameraTargetPositionLocHint=

GetCameraEyePositionLoc="Source Of Current Camera"
GetCameraEyePositionLoc="Source of current camera view"
GetCameraEyePositionLocHint=

Location="Convert Coordinates To Point"
Location="Point(",~X,", ",~Y,")"
LocationHint=

GetDestructableLoc="Position Of Destructible"
GetDestructableLoc="Position of ",~Destructible
GetDestructableLocHint=

GetOrderPointLoc="Target Point Of Issued Order"
GetOrderPointLoc="Target point of issued order"
GetOrderPointLocHint="When responding to an 'Is Issued An Order Targeting A Point' unit event, this refers to the target of the order."

GetSpellTargetLoc="Target Point Of Ability Being Cast"
GetSpellTargetLoc="Target point of ability being cast"
GetSpellTargetLocHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the target point of the ability being cast."

GetItemLoc="Position Of Item"
GetItemLoc="Position of ",~Item
GetItemLocHint=

WaygateGetDestinationLocBJ="Way Gate Destination"
WaygateGetDestinationLocBJ="Destination of ",~Way Gate
WaygateGetDestinationLocBJHint=

GetPlayerStartLocationLoc="Player Start Location"
GetPlayerStartLocationLoc=~Player," start location"
GetPlayerStartLocationLocHint=

GetUnitLoc="Position Of Unit"
GetUnitLoc="Position of ",~Unit
GetUnitLocHint=

GetUnitRallyPoint="Rally-Point As Point"
GetUnitRallyPoint="Rally-Point of ",~Unit," as a point"
GetUnitRallyPointHint="If the unit has no rally-point set, the result will be (0,0)"


// returns rect
GetCurrentCameraBoundsMapRectBJ="Current Camera Bounds"
GetCurrentCameraBoundsMapRectBJ="Current camera bounds"
GetCurrentCameraBoundsMapRectBJHint="This is the area to which the camera target is currently restricted."

GetCameraBoundsMapRect="Initial Camera Bounds"
GetCameraBoundsMapRect="Initial camera bounds"
GetCameraBoundsMapRectHint="This is the area to which the camera target is restricted at map initialization."

GetPlayableMapRect="Playable Map Area"
GetPlayableMapRect="Playable map area"
GetPlayableMapRectHint="This is the area to which units are restricted.  This area typically extends just beyond the camera bounds."

GetEntireMapRect="Gesamte Karte"
GetEntireMapRect="Gesamte Karte"
GetEntireMapRectHint="Dies ist die gesamte Karte, einschließlich der Gebiete, die normalerweise nicht von Einheiten erreicht werden können."

OffsetRectBJ="Region mit Abstand"
OffsetRectBJ=~Region," verschoben um (",~X,", ",~Y,")"
OffsetRectBJHint="Die Abstandswerte sind (X, Y)."

RectFromCenterSizeBJ="Punkt mit Größe zu Region umwandeln"
RectFromCenterSizeBJ="Region centered at ",~Point," with size (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint="The size values are (Width, Height)."

Rect="Convert Coordinates To Region"
Rect="Region(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint="Choose four coordinates (min X, min Y, max X, max Y) to define a rectangular region on the map."

RectFromLoc="Convert Points To Region"
RectFromLoc="Region(",~Point 1,", ",~Point 2,")"
RectFromLocHint="Choose two points to define a rectangular region on the map."


// returns unit
GetLastCreatedUnit="Zuletzt erzeugte Einheit"
GetLastCreatedUnit="Zuletzt erzeugte Einheit"
GetLastCreatedUnitHint="Dies ist die zuletzt über eine 'Einheit - Erzeugen'-Auslöseraktion erzeugte Einheit."

GetLastRestoredUnitBJ="Last Restored Unit"
GetLastRestoredUnitBJ="Last restored unit"
GetLastRestoredUnitBJHint="This is the last unit restored via a 'Game Cache - Restore Unit' trigger action."

GetLastReplacedUnitBJ="Last Replaced Unit"
GetLastReplacedUnitBJ="Last replaced unit"
GetLastReplacedUnitBJHint="This is the last unit created via a 'Unit - Replace' trigger action."

GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMineHint="This is the last Haunted Gold Mine created via a 'Neutral Building - Haunt Gold Mine (Instantly)' trigger action."

GetEnumUnit="Picked Unit"
GetEnumUnit="Picked unit"
GetEnumUnitHint="When using the 'Pick Every Unit...' action, this refers to each unit as it is picked."

GetFilterUnit="Übereinstimmende Einheit"
GetFilterUnit="Übereinstimmende Einheit"
GetFilterUnitHint="Use this to refer to the unit being considered for 'Units Matching Condition' functions."

GroupPickRandomUnit="Zufällige Einheit aus Einheitengruppe"
GroupPickRandomUnit="Zufällige Einheit aus ",~Einheitengruppe
GroupPickRandomUnitHint=

GetAttackedUnitBJ="Angegriffene Einheit"
GetAttackedUnitBJ="Angegriffene Einheit"
GetAttackedUnitBJHint="When responding to an 'Is Attacked' unit event, this refers to the unit that is being attacked."

GetAttacker="Angreifende Einheit"
GetAttacker="Attacking unit"
GetAttackerHint="When responding to an 'Is Attacked' unit event, this refers to the attacking unit."

GetBuyingUnit="Buying Unit"
GetBuyingUnit="Buying unit"
GetBuyingUnitHint="When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the buying."

GetCancelledStructure="Cancelled Structure"
GetCancelledStructure="Cancelled structure"
GetCancelledStructureHint="When responding to a 'Cancels Construction' unit event, this refers to the unit whose construction has been cancelled."

GetSpellAbilityUnit="Casting Unit"
GetSpellAbilityUnit="Casting unit"
GetSpellAbilityUnitHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the unit casting the ability."

GetConstructedStructure="Constructed Structure"
GetConstructedStructure="Constructed structure"
GetConstructedStructureHint="When responding to a 'Finishes Construction' unit event, this refers to the unit whose construction has finished."

GetConstructingStructure="Constructing Structure"
GetConstructingStructure="Constructing structure"
GetConstructingStructureHint="When responding to a 'Begins Construction' unit event, this refers to the unit whose construction has begun."

GetEventDamageSource="Schadensquelle"
GetEventDamageSource="Schadensquelle"
GetEventDamageSourceHint="Wenn auf ein 'Erleidet Schaden'-Einheitenereignis reagiert wird, verweist dies auf die Quelle des verursachten Schadens."

GetDecayingUnit="Verwesende Einheit"
GetDecayingUnit="Verwesende Einheit"
GetDecayingUnitHint="Wenn auf ein 'Verwest'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die gerade verwest."

GetDyingUnit="Sterbende Einheit"
GetDyingUnit="Sterbende Einheit"
GetDyingUnitHint="Wenn auf ein 'Stirbt'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die gerade stirbt."

GetEnteringUnit="Entering Unit"
GetEnteringUnit="Entering unit"
GetEnteringUnitHint="When responding to a 'Unit Enters Region' unit event, this refers to the unit entering the region."

GetManipulatingUnit="Hero Manipulating Item"
GetManipulatingUnit="Hero manipulating item"
GetManipulatingUnitHint="When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the Hero that is manipulating the item."

GetKillingUnitBJ="Killing Unit"
GetKillingUnitBJ="Killing unit"
GetKillingUnitBJHint="When responding to a 'Dies' unit event, this refers to the killer of the dying unit.  In cases where a unit dies from a source other than a killing unit, this returns 'No unit'."

GetLearningUnit="Learning Hero"
GetLearningUnit="Learning Hero"
GetLearningUnitHint="When responding to a 'Learns A Skill' unit event, this refers to the unit learning the skill."

GetLeavingUnit="Leaving Unit"
GetLeavingUnit="Leaving unit"
GetLeavingUnitHint="When responding to a 'Unit Leaves Region' event, this refers to the unit leaving the region."

GetLevelingUnit="Leveling Hero"
GetLevelingUnit="Leveling Hero"
GetLevelingUnitHint="When responding to a 'Gains A Level' unit event, this refers to the unit gaining the level."

GetLoadedUnitBJ="Loading Unit"
GetLoadedUnitBJ="Loading unit"
GetLoadedUnitBJHint="When responding to an 'Is Loaded Into A Transport' unit event, this refers to the unit that is being loaded."

GetOrderedUnit="Befehligte Einheit"
GetOrderedUnit="Befehligte Einheit"
GetOrderedUnitHint="Wenn auf ein 'Erhält einen Befehl erteilt'-Einheitenereigniss reagiert wird, verweist dies auf die Einheit, die den Befehl erhält."

GetChangingUnit="Ownership-Changed Unit"
GetChangingUnit="Ownership-changed unit"
GetChangingUnitHint="When responding to a 'Changes Owner' unit event, this refers to the unit whose ownership has changed."

GetResearchingUnit="Forschende Einheit"
GetResearchingUnit="Forschende Einheit"
GetResearchingUnitHint="Wenn auf 'Beginnt/Bricht ab/Schließt ab Ausbaustufe'-Einheitenereignisse reagiert wird, verweist dies auf die Einheit, welche die Ausbaustufe gerade erforscht."

GetRevivableUnit="Revivable Hero"
GetRevivableUnit="Revivable Hero"
GetRevivableUnitHint="When responding to a 'Becomes Revivable' unit event, this refers to the unit that has become available for revival."

GetRevivingUnit="Reviving Hero"
GetRevivingUnit="Reviving Hero"
GetRevivingUnitHint="When responding to 'Begins/Cancels/Finishes Reviving' unit events, this refers to the unit being revived."

GetSellingUnit="Verkaufende Einheit"
GetSellingUnit="Verkaufende Einheit"
GetSellingUnitHint="Wenn auf ein 'Verkauft eine Einheit'-, 'Verkauft einen Gegenstand'- oder 'Verpfändet einen Gegenstand'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die den Verkauf gerade abwickelt."

GetSoldUnit="Verkaufte Einheit"
GetSoldUnit="Verkaufte Einheit"
GetSoldUnitHint="Wenn auf ein 'Verkauft eine Einheit'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die gerade verkauft wird."

GetSummonedUnit="Beschworene Einheit"
GetSummonedUnit="Beschworene Einheit"
GetSummonedUnitHint="Wenn auf ein 'Erzeugt eine beschworene Einheit'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die gerade beschworen wird."

GetSummoningUnit="Beschwörende Einheit"
GetSummoningUnit="Beschwörende Einheit"
GetSummoningUnitHint="Wenn auf ein 'Erzeugt eine beschworene Einheit'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die gerade die beschworene Einheit erzeugt."

GetOrderTargetUnit="Target Unit Of Issued Order"
GetOrderTargetUnit="Target unit of issued order"
GetOrderTargetUnitHint="When responding to an 'Is Issued An Order Targeting An Object' unit event with a unit target, this refers to the target of the order."

GetSpellTargetUnit="Target Unit Of Ability Being Cast"
GetSpellTargetUnit="Target unit of ability being cast"
GetSpellTargetUnitHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events with a unit target, this refers to the target of the ability being cast."

GetEventTargetUnit="Targeted Unit"
GetEventTargetUnit="Targeted unit"
GetEventTargetUnitHint="When responding to an 'Acquires A Target' unit event, this refers to the target being acquired."

GetTrainedUnit="Ausgebildete Einheit"
GetTrainedUnit="Ausgebildete Einheit"
GetTrainedUnitHint="Wenn auf ein 'Beendet Ausbildung einer Einheit'-Einheitenereignis reagiert wird, verweist dies auf die Einheit, die ausgebildet wurde."

GetTransportUnitBJ="Transportierende Einheit"
GetTransportUnitBJ="Transportierende Einheit"
GetTransportUnitBJHint="Wenn auf ein 'Wird in einen Transporter geladen'-Einheitenereignis reagiert wird, verweist dies auf den Transporter, der die Einheit geladen hat."

GetTriggerUnit="Auslösende Einheit"
GetTriggerUnit="Auslösende Einheit"
GetTriggerUnitHint=

GetUnitRallyUnit="Sammelpunkt als Einheit"
GetUnitRallyUnit="Sammelpunkt von ",~Einheit," als eine Einheit"
GetUnitRallyUnitHint="Falls die Einheit keinen Sammelpunkt auf einer Einheit hat, gibt dies 'Keine Einheit' zurück."


// returns unitcode
GetUnitTypeId="Einheitentyp einer Einheit"
GetUnitTypeId="Einheitentyp von ",~Einheit
GetUnitTypeIdHint=

ChooseRandomCreepBJ="Zufälliger Unhold-Einheitentyp"
ChooseRandomCreepBJ="Zufälliger Stufe-",~Stufe,"-Unhold-Einheitentyp"
ChooseRandomCreepBJHint="Verwenden Sie -1 für eine beliebige Stufe."

ChooseRandomNPBuildingBJ="Zufälliger Neutrales-Gebäude-Einheitentyp"
ChooseRandomNPBuildingBJ="Zufälliger Neutrales-Gebäude-Einheitentyp"
ChooseRandomNPBuildingBJHint=

String2UnitIdBJ="Convert String To Unit-Type"
String2UnitIdBJ="Unit-type(",~String,")"
String2UnitIdBJHint=

GetTrainedUnitType="Ausgebildeter Einheitentyp"
GetTrainedUnitType="Ausgebildeter Einheitentyp"
GetTrainedUnitTypeHint="Wenn auf 'Beginnt/Bricht ab/Beendet eine Einheit auszubilden'-Einheitentereignisse reagiert wird, verweist dies auf den Einheitentyp der Einheit, die gerade ausgebildet wird."


// returns ordercode
String2OrderIdBJ="Zeichenkette in Befehl umwandeln"
String2OrderIdBJ="Befehl(",~Zeichenkette,")"
String2OrderIdBJHint="Beispielbefehlszeichenketten:  ''harvest'', ''move'', ''smart'', ''attack''."

UnitId2OrderIdBJ="Einheitentyp in Befehl umwandeln"
UnitId2OrderIdBJ="Befehl(",~Einheitentyp,")"
UnitId2OrderIdBJHint=

GetIssuedOrderIdBJ="Erteilter Befehl"
GetIssuedOrderIdBJ="Erteilter Befehl"
GetIssuedOrderIdBJHint="Wenn auf 'Bekommt einen Befehl erteilt'-Einheitenereignisse reagiert wird, verweist dies auf den Befehl der gerade erteilt wird."

GetUnitCurrentOrder="Derzeitiger Befehl einer Einheit"
GetUnitCurrentOrder="Derzeitiger Befehl von ",~Einheit
GetUnitCurrentOrderHint=


// returns destructable
GetLastCreatedDestructable="Zuletzt erzeugtes Zerstörbares"
GetLastCreatedDestructable="Zuletzt erzeugtes Zerstörbares"
GetLastCreatedDestructableHint="Dies ist das zuletzt erzeugte Zerstörbare This is the last destructible created via a 'Destructible - Create' trigger action."

RandomDestructableInRectSimpleBJ="Random Destructible In Region"
RandomDestructableInRectSimpleBJ="Random destructible in ",~Region
RandomDestructableInRectSimpleBJHint=

RandomDestructableInRectBJ="Random Destructible In Region Matching Condition"
RandomDestructableInRectBJ="Random destructible in ",~Region," matching ",~Condition
RandomDestructableInRectBJHint="Use 'Matching Destructible' to refer to the destructible being considered."

GetEnumDestructable="Picked Destructible"
GetEnumDestructable="Picked destructible"
GetEnumDestructableHint="When using the 'Pick Every Destructible...' action, this refers to each destructible as it is picked."

GetFilterDestructable="Übereinstimmendes Zerstörbares"
GetFilterDestructable="Übereinstimmendes Zerstörbares"
GetFilterDestructableHint="Use this to refer to the destructible being considered for the 'Random Destructible' functions."

GetDyingDestructable="Sterbendes Zerstörbares"
GetDyingDestructable="Sterbendes Zerstörbares"
GetDyingDestructableHint="Wenn auf ein 'Zerstörbares stirbt'-Ereignis reagiert wird, verweist dies auf das Zerstörbare, das gerade stirbt."

GetOrderTargetDestructable="Ziel-Zerstörbares des erteilten Befehls"
GetOrderTargetDestructable="Ziel-Zerstörbares des erteilten Befehl"
GetOrderTargetDestructableHint="Wenn auf ein 'Bekommt einen Objekt anvisierenden Befehl erteilt'-Einheitenereignis mit einem zerstörbaren Ziel, verweist dies auf das Ziel des Befehls."

GetSpellTargetDestructable="Target Destructible Of Ability Being Cast"
GetSpellTargetDestructable="Target destructible of ability being cast"
GetSpellTargetDestructableHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events with a destructible target, this refers to the target of the ability being cast."

GetUnitRallyDestructable="Rally-Point As Destructible"
GetUnitRallyDestructable="Rally-Point of ",~Unit," as a destructible"
GetUnitRallyDestructableHint="If the unit does not have a rally-point set to a destructible, this will return 'No destructible'."


// returns destructablecode
GetDestructableTypeId="Destructible-Type of Destructible"
GetDestructableTypeId="Destructible-type of ",~Destructible
GetDestructableTypeIdHint=


// returns item
GetLastCreatedItem="Zuletzt erzeugter Gegenstand"
GetLastCreatedItem="Zuletzt erzeugter Gegenstand"
GetLastCreatedItemHint="Dies ist der zuletzt über eine 'Gegenstand - Erzeugen'- oder 'Held - Erzeuge Gegenstand für Held'-Auslöseraktion erzeugte Gegenstand."

GetLastRemovedItem="Zuletzt fallen gelassener Gegenstand"
GetLastRemovedItem="Zuletzt fallen gelassener Gegenstand"
GetLastRemovedItemHint="Dies ist der zuletzt über eine 'Held - Lasse Gegenstand fallen'-Auslöseraktion fallen gelassene Gegenstand."

RandomItemInRectSimpleBJ="Zufälliger Gegenstand in Region"
RandomItemInRectSimpleBJ="Zufälliger Gegenstand in ",~Region
RandomItemInRectSimpleBJHint=

RandomItemInRectBJ="Random Item In Region Matching Condition"
RandomItemInRectBJ="Random item in ",~Region," matching ",~Condition
RandomItemInRectBJHint="Use 'Matching Item' to refer to the item being considered."

GetEnumItem="Picked Item"
GetEnumItem="Picked item"
GetEnumItemHint="When using the 'Pick Every Item...' action, this refers to each item as it is picked."

GetFilterItem="Matching Item"
GetFilterItem="Matching item"
GetFilterItemHint="Use this to refer to the item being considered for the 'Random Item' functions."

UnitItemInSlotBJ="Item Carried By Hero"
UnitItemInSlotBJ="Item carried by ",~Hero," in slot ",~Index
UnitItemInSlotBJHint=

GetItemOfTypeFromUnitBJ="Item Carried By Hero Of Type"
GetItemOfTypeFromUnitBJ="Item carried by ",~Hero," of type ",~Item-Type
GetItemOfTypeFromUnitBJHint=

GetManipulatedItem="Item Being Manipulated"
GetManipulatedItem="Item being manipulated"
GetManipulatedItemHint="When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the item being manipulated."

GetSoldItem="Sold Item"
GetSoldItem="Sold Item"
GetSoldItemHint="When responding to 'Sells An Item' or 'Pawns An Item' unit events, this refers to the item being sold."

GetOrderTargetItem="Target Item Of Issued Order"
GetOrderTargetItem="Target item of issued order"
GetOrderTargetItemHint="When responding to an 'Is Issued An Order Targeting An Object' unit event with an item target, this refers to the target of the order."

GetSpellTargetItem="Target Item Of Ability Being Cast"
GetSpellTargetItem="Target item of ability being cast"
GetSpellTargetItemHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events with an item target, this refers to the target of the ability being cast."


// returns itemtype
GetItemType="Item-Class Of Item"
GetItemType="Item-class of ",~Item
GetItemTypeHint=


// returns itemcode
GetItemTypeId="Item-Type Of Item"
GetItemTypeId="Item-type of ",~Item
GetItemTypeIdHint=

ChooseRandomItemBJ="Random Item-Type"
ChooseRandomItemBJ="Random level ",~Level," item-type"
ChooseRandomItemBJHint="This function corresponds to the original unclassified item system with levels 0-10.  Use -1 for any level."

ChooseRandomItemExBJ="Random Item-Type Of Class"
ChooseRandomItemExBJ="Random level ",~Level," ",~Class," item-type"
ChooseRandomItemExBJHint="This function corresponds to the newer item classification system with levels 0-8.  Use -1 for any level."


// returns techcode
GetResearched="Researched Tech-Type"
GetResearched="Researched tech-type"
GetResearchedHint="When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the tech-type being researched."


// returns abilcode
GetSpellAbilityId="Ability Being Cast"
GetSpellAbilityId="Ability being cast"
GetSpellAbilityIdHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the ability being cast."


// returns heroskillcode
GetLearnedSkillBJ="Erlernte Helden-Fähigkeit"
GetLearnedSkillBJ="Erlernte Helden-Fähigkeit"
GetLearnedSkillBJHint=


// returns player
GetEnumPlayer="Picked Player"
GetEnumPlayer="Picked player"
GetEnumPlayerHint="When using the 'Pick Every Player...' action, this refers to each player as he/she is picked."

GetFilterPlayer="Übereinstimmender Spieler"
GetFilterPlayer="Übereinstimmender Spieler"
GetFilterPlayerHint="Use this to refer to the player being considered for the 'All Players Matching Condition' function."

GetOwningPlayer="Besitzer der Einheit"
GetOwningPlayer="Besitzer der ",~Einheit
GetOwningPlayerHint=

GetItemPlayer="Besitzer des Gegenstands"
GetItemPlayer="Besitzer des ",~Gegenstands
GetItemPlayerHint=

ForcePickRandomPlayer="Zufälliger Spieler einer Spielergruppe"
ForcePickRandomPlayer="Zufälliger Spieler aus ",~Spielergruppe
ForcePickRandomPlayerHint=

ConvertedPlayer="Spielerindex zu Spieler umwandeln"
ConvertedPlayer="Spieler(",~Spielerindex,")"
ConvertedPlayerHint="Spielerindizes reichen von 1 bis 16."

GetChangingUnitPrevOwner="Vorheriger Besitzer"
GetChangingUnitPrevOwner="Vorheriger Besitzer"
GetChangingUnitPrevOwnerHint="When responding to a 'Changes Owner' unit event, this refers to the previous owner of the unit."

GetTriggerPlayer="Auslösender Spieler"
GetTriggerPlayer="Auslösender Spieler"
GetTriggerPlayerHint=

LeaderboardGetIndexedPlayerBJ="Spieler auf Platz"
LeaderboardGetIndexedPlayerBJ="Spieler auf Platz ",~Platz," von ",~Bestenliste
LeaderboardGetIndexedPlayerBJHint=


// returns group
GetLastCreatedGroup="Zuletzt erstellte Einheitengruppe"
GetLastCreatedGroup="Zuletzt erstellte Einheitengruppe"
GetLastCreatedGroupHint="This is the last set of units created via a 'Unit - Create' trigger action."

GetRandomSubGroup="Zufällige N Einheiten einer Einheitengruppe"
GetRandomSubGroup="Zufällige ",~Anzahl," Einheiten von ",~Einheitengruppe
GetRandomSubGroupHint=

GetUnitsInRectAll="Einheiten in Region"
GetUnitsInRectAll="Einheiten in ",~Region
GetUnitsInRectAllHint=

GetUnitsInRectOfPlayer="Units In Region Owned By Player"
GetUnitsInRectOfPlayer="Units in ",~Region," owned by ",~Player
GetUnitsInRectOfPlayerHint=

GetUnitsInRectMatching="Units In Region Matching Condition"
GetUnitsInRectMatching="Units in ",~Region," matching ",~Condition
GetUnitsInRectMatchingHint="Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."

GetUnitsInRangeOfLocAll="Einheiten in Reichweite"
GetUnitsInRangeOfLocAll="Einheiten innerhalb ",~Radius," von ",~Punkt
GetUnitsInRangeOfLocAllHint=

GetUnitsInRangeOfLocMatching="Units In Range Matching Condition"
GetUnitsInRangeOfLocMatching="Units within ",~Radius," of ",~Point," matching ",~Condition
GetUnitsInRangeOfLocMatchingHint="Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."

GetUnitsOfPlayerAll="Einheiten im Besitz eines Spielers"
GetUnitsOfPlayerAll="Einheiten im Besitz von ",~Spieler
GetUnitsOfPlayerAllHint=

GetUnitsOfPlayerAndTypeId="Einheiten im Besitz eines Spielers eines Typs"
GetUnitsOfPlayerAndTypeId="Einheiten im Besitz von ",~Spieler," des Typs ",~Einheitentyp
GetUnitsOfPlayerAndTypeIdHint=

GetUnitsOfPlayerMatching="Units Owned By Player Matching Condition"
GetUnitsOfPlayerMatching="Units owned by ",~Player," matching ",~Condition
GetUnitsOfPlayerMatchingHint="Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."

GetUnitsOfTypeIdAll="Einheiten eines Typs"
GetUnitsOfTypeIdAll="Einheiten des Typs ",~Einheitentyp
GetUnitsOfTypeIdAllHint=

GetUnitsSelectedAll="Ausgewählte Einheiten"
GetUnitsSelectedAll="Derzeitig ausgewählte Einheiten von ",~Spieler
GetUnitsSelectedAllHint="Dies sollte nicht in Auslöserbedingungen verwendet werden."


// returns force
GetPlayersAll="Alle Spieler"
GetPlayersAll="Alle Spieler"
GetPlayersAllHint="Schließt nicht verwendete und neutrale Spieler mit ein."

GetPlayersByMapControl="Alle Spieler einer Kontrolle"
GetPlayersByMapControl="Alle von einem ",~Kontrolltyp,"-Spieler kontrollierten Spieler"
GetPlayersByMapControlHint=

GetPlayersMatching="All Players Matching Condition"
GetPlayersMatching="All players matching ",~Condition
GetPlayersMatchingHint="Use 'Matching Player' to refer to the player on whom the comparison is being performed.  This includes unused and neutral players."

GetPlayersAllies="Verbündete eines Spielers"
GetPlayersAllies="Alle Verbündeten von ",~Spieler
GetPlayersAlliesHint="Alle Verbündeten des angegebenen Spielers, einschließlich ihm/ihr selbst."

GetPlayersEnemies="Feinde eines Spielers"
GetPlayersEnemies="Alle Feinde von ",~Spieler
GetPlayersEnemiesHint="Alle Feinde des angegebenen Spielers."

GetForceOfPlayer="Wandle Spieler zu Spielergruppe um"
GetForceOfPlayer="Spielergruppe(",~Spieler,")"
GetForceOfPlayerHint=


// returns race
GetPlayerRace="Volk eines Spielers"
GetPlayerRace="Volk von ",~Spieler
GetPlayerRaceHint=

GetUnitRace="Volk einer Einheit"
GetUnitRace="Volk von ",~Einheit
GetUnitRaceHint=


// returns camerasetup
GetCurrentCameraSetup="Derzeitige Kamera"
GetCurrentCameraSetup="Derzeitige Kamera"
GetCurrentCameraSetupHint=


// returns fogmodifier
GetLastCreatedFogModifier="Last Created Visibility Modifier"
GetLastCreatedFogModifier="Last created visibility modifier"
GetLastCreatedFogModifierHint="This is the last visibility modifier created via a 'Visibility - Create Visibility Modifier' trigger action."


// returns trigger
GetTriggeringTrigger="Dieser Auslöser"
GetTriggeringTrigger="Dieser Auslöser"
GetTriggeringTriggerHint=


// returns gamedifficulty
GetGameDifficulty="Schwierigkeitsstufe"
GetGameDifficulty="Schwierigkeitsstufe"
GetGameDifficultyHint=


// returns aidifficulty
GetAIDifficulty="Nahkampf-KI eines Spielers"
GetAIDifficulty="Nahkampf-KI von ",~Spieler
GetAIDifficultyHint=


// returns gamespeed
GetGameSpeed="Derzeitige Spielgeschwindigkeit"
GetGameSpeed="Derzeitige Spielgeschwindigkeit"
GetGameSpeedHint=


// returns mapcontrol
GetPlayerController="Player Controller"
GetPlayerController=~Player," controller"
GetPlayerControllerHint=


// returns playercolor
GetPlayerColor="Farbe eines Spielers"
GetPlayerColor="Farbe von ",~Spieler
GetPlayerColorHint=


// returns playerslotstate
GetPlayerSlotState="Spieler-Slot-Status"
GetPlayerSlotState=~Spieler,"-Slot-Status"
GetPlayerSlotStateHint=


// returns effect
GetLastCreatedEffectBJ="Last Created Special Effect"
GetLastCreatedEffectBJ="Last created special effect"
GetLastCreatedEffectBJHint=


// returns lightning
GetLastCreatedLightningBJ="Zuletzt erzeugter Blitzeffekt"
GetLastCreatedLightningBJ="Zuletzt erzeugter Blitzeffekt"
GetLastCreatedLightningBJHint=


// returns image
GetLastCreatedImage="Zuletzt erzeugtes Bild"
GetLastCreatedImage="Zuletzt erzeugtes Bild"
GetLastCreatedImageHint=


// returns ubersplat
GetLastCreatedUbersplat="Last Created Ubersplat"
GetLastCreatedUbersplat="Last created ubersplat"
GetLastCreatedUbersplatHint=


// returns weathereffect
GetLastCreatedWeatherEffect="Zuletzt erzeugter Wettereffekt"
GetLastCreatedWeatherEffect="Zuletzt erzeugter Wettereffekt"
GetLastCreatedWeatherEffectHint="This is the last weather effect created via an 'Environment - Create Weather Effect' trigger action."


// returns terraindeformation
GetLastCreatedTerrainDeformation="Last Created Terrain Deformation"
GetLastCreatedTerrainDeformation="Last created terrain deformation"
GetLastCreatedTerrainDeformationHint="This is the last terrain deformation created via any of the 'Environment - Create Terrain Deformation' trigger actions."


// returns terraintype
GetTerrainTypeBJ="Geländetyp"
GetTerrainTypeBJ="Geländetyp an ",~Position
GetTerrainTypeBJHint=


// returns sound
GetLastPlayedSound="Zuletzt abgespieltes Geräusch"
GetLastPlayedSound="Zuletzt abgespieltes Geräusch"
GetLastPlayedSoundHint="Dies ist das zuletzt über eine 'Geräusch - Geräusch abspielen'- oder 'Filmisch - Übertragung'-Auslöseraktion abgespielte Geräusch."


// returns music
GetLastPlayedMusic="Zuletzt abgespielte Musik"
GetLastPlayedMusic="Zuletzt abgespielte Musik"
GetLastPlayedMusicHint="Dies ist die zuletzt über eine 'Geräusch - Musik abspielen'-Auslöseraktion abgespielte Musik."


// returns quest
GetLastCreatedQuestBJ="Zuletzt erstelltes Quest"
GetLastCreatedQuestBJ="Zuletzt erstelltes Quest"
GetLastCreatedQuestBJHint="Dies ist das zuletzt über die 'Quest - Quest erstellen'-Auslöseraktion erstellte Quest."


// returns questitem
GetLastCreatedQuestItemBJ="Last Created Quest Requirement"
GetLastCreatedQuestItemBJ="Last created quest requirement"
GetLastCreatedQuestItemBJHint="This is the last quest requirement created via a 'Quest - Create Quest Requirement' trigger action."


// returns defeatcondition
GetLastCreatedDefeatConditionBJ="Last Created Defeat Condition"
GetLastCreatedDefeatConditionBJ="Last created defeat condition"
GetLastCreatedDefeatConditionBJHint="This is the last defeat condition created via a 'Quest - Create Defeat Condition' trigger action."


// returns dialog
GetClickedDialogBJ="Clicked Dialog"
GetClickedDialogBJ="Clicked dialog"
GetClickedDialogBJHint="When responding to a 'Dialog - Dialog Button Click' event, this refers to the dialog containing the clicked button."


// returns button
GetLastCreatedButtonBJ="Last Created Dialog Button"
GetLastCreatedButtonBJ="Last created dialog Button"
GetLastCreatedButtonBJHint="This is the last dialog button created via a 'Dialog - Create Dialog Button' trigger action."

GetClickedButtonBJ="Clicked Dialog Button"
GetClickedButtonBJ="Clicked dialog button"
GetClickedButtonBJHint="When responding to a 'Dialog - Button Clicked' event, this refers to the dialog button that is being clicked."


// returns leaderboard
GetLastCreatedLeaderboard="Zuletzt erzeugte Bestenliste"
GetLastCreatedLeaderboard="Zuletzt erzeugte Bestenliste"
GetLastCreatedLeaderboardHint="Dies ist die zuletzt über eine 'Bestenliste - Erzeuge Bestenliste'-Auslöseraktion erzeugte Bestenliste."

PlayerGetLeaderboardBJ="Bestenliste eines Spielers"
PlayerGetLeaderboardBJ="Bestenliste von ",~Spieler
PlayerGetLeaderboardBJHint="Jeder Spieler kann höchstens eine Bestenliste haben."


// returns multiboard
GetLastCreatedMultiboard="Zuletzt erzeugtes Multiboard"
GetLastCreatedMultiboard="Zuletzt erzeugtes Multiboard"
GetLastCreatedMultiboardHint="Dies ist das zuletzt über eine 'Multiboard - Erzeuge Multiboard'-Auslöseraktion erzeugte Multiboard."


// returns timer
GetLastCreatedTimerBJ="Zuletzt gestarteter Zeitgeber"
GetLastCreatedTimerBJ="Zuletzt gestarteter Zeitgebe"
GetLastCreatedTimerBJHint="Dies ist der zuletzt über eine 'Countdown-Timer - Zeitgeber starten'-Auslöseraktion gestartete Zeitgeber."

GetExpiredTimer="Ablaufender Zeitgeber"
GetExpiredTimer="Ablaufender Zeitgeber"
GetExpiredTimerHint="Wenn auf ein 'Zeit - Zeitgeber läuft ab'-Ereignis reagiert wird, verweist dies auf den Zeigeber, der gerade abläuft."


// returns timerdialog
GetLastCreatedTimerDialogBJ="Last Created Timer Window"
GetLastCreatedTimerDialogBJ="Last created timer window"
GetLastCreatedTimerDialogBJHint="This is the last timer window created via a 'Countdown Timer - Create Timer Window' trigger action."


// returns gamecache
GetLastCreatedGameCacheBJ="Last Created Game Cache"
GetLastCreatedGameCacheBJ="Last created game cache"
GetLastCreatedGameCacheBJHint="This is the last game cache created via a 'Game Cache - Create Game Cache' trigger action."


// returns hashtable
GetLastCreatedHashtableBJ="Last Created Hashtable"
GetLastCreatedHashtableBJ="Last created hashtable"
GetLastCreatedHashtableBJHint="This is the last hashtable created via a 'Hashtable - Create Hashtable' trigger action."


// returns texttag
GetLastCreatedTextTag="Last Created Floating Text"
GetLastCreatedTextTag="Last created floating text"
GetLastCreatedTextTagHint="This is the last floating text created via a 'Floating Text - Create Floating Text' trigger action."

// ASL - Core - String

// returns integer
FindString="Position einer Zeichenkette"
FindString="Position in ",~Zeichenkette," der gesuchten ",~anderen Zeichenkette,"."
FindStringHint="Liefert die Position einer Zeichenkette in einer anderen. Befindet sich die Zeichenkette nicht in der anderen, so liefert die Funktion -1 (ungültige Position)."

// returns string
ReplaceSubString="Teilzeichenkette ersetzen"
ReplaceSubString="Ersetze in ",~Zeichenkette," an ",~Stelle," den Inhalt durch ",~andere Zeichenkette,"."
ReplaceSubStringHint="Ersetzt einen Teil einer Zeichenkette durch eine andere. Die gelieferte Zeichenkette kann dadurch länger werden als die ursprüngliche."

// returns string
ReplaceString="Zeichenkette ersetzen"
ReplaceString="Ersetze in ",~Zeichenkette," Teil ",~enthaltene Zeichenkette," durch ",~andere Zeichenkette,"."
ReplaceStringHint="Ersetzt eine in einer Zeichenkette enthaltene Zeichenkette durch eine andere. Die Zeichenketten müssen nicht gleich lang sein. In diesem Fall werden keine anderen Zeichen, die nicht zur ersetzten Zeichenkette gehören überschrieben. Die gelieferte Zeichenkette wird lediglich um zusätzliche Zeichen erweitert oder um fehlende verkürzt."

// returns string
RemoveSubString="Teilzeichenkette entfernen"
RemoveSubString="Entferne aus ",~Zeichenkette," an ",~Position," eine Zeichenkette mit ",~n," Zeichen."
RemoveSubStringHint="Entfernt den Teil einer Zeichenkette und liefert die daraus resultierende Zeichenkette."

// returns string
RemoveString="Zeichenkette entfernen"
RemoveString="Entferne aus ",~Zeichenkette," den Inhalt von ",~anderer Zeichenkette,"."
RemoveStringHint="Entfernt aus einer Zeichenkette eine andere. Ist diese nicht enthalten, wird die ursprüngliche Zeichenkette zurückgegeben."

// ASL - Core - Environment

// returns boolean
IsUnitInvulnerable="Einheit ist unverwundbar"
IsUnitInvulnerable=~Einheit," ist unverwundbar."

// returns alliancesetting (integer)
GetUnitAllianceStateToUnit="Bündniseinstellung zu Einheit"
GetUnitAllianceStateToUnit="Bündniseinstellung von ",~Einheit," zu ",~anderer Einheit,"."

// returns boolean
IsUnitSpellResistant="Einheit ist zauberresistent"
IsUnitSpellResistant=~Einheit," ist zauberresistent."

// returns boolean
IsUnitSpellImmune="Einheit ist zauberimmun"
IsUnitSpellImmune=~Einheit," ist zauberimmun."

// returns real
GetUnitArmor="Rüstung einer Einheit"
GetUnitArmor="Rüstung von ",~Einheit,"."

// ASL - Systems - Bonus Mod

// returns integer
AUnitGetBonus="Bonus einer Einheit"
AUnitGetBonus="Bonus von ",~Einheit," des Typs ",~Typ,"."
AUnitGetBonusHint="Liefert den Bonus einer Einheit."

// returns boolean
AUnitSetBonus="Einheitenbonus festlegen"
AUnitSetBonus="Legt den Bonus von ",~Einheit," des Typs ",~Typ," auf den Wert ",~Wert," fest."
AUnitGetBonusHint="Legt den Bonus einer Einheit auf einen bestimmten Wert fest."

// returns boolean
AUnitClearBonus="Einheitenbonus entfernen"
AUnitClearBonus="Entfernt den Bonus von ",~Einheit," des Typs ",~Typ,"."
AUnitClearBonusHint="Entfernt den Bonus einer Einheit."

// returns boolean
AUnitAddBonus="Einheitenbonus hinzufügen"
AUnitAddBonus="Gibt ",~Einheit," einen Bonus des Typs ",~Typ," von ",~Wert,"."
AUnitAddBonus="Gibt einer Einheit einen Bonus."

// returns boolean
AUnitRemoveBonus="Einheitenbonus entfernen"
AUnitRemoveBonus="Entfernt von ",~Einheit," einen Bonus des Typs ",~Typ," von ",~Wert,"."
AUnitRemoveBonusHint="Entfernt einen Bonus von einer Einheit."

sc__ASpawnPoint_create="Erzeugungspunkt erschaffen"
sc__ASpawnPoint_create="Erschaffe einen Erzeugungspunkt am Punkt (",~X,"|",~Y,") mit dem Radius ",~Radius,"."
sc__ASpawnPoint_createHint="Erschafft einen Erzeugungspunkt an einem bestimmten Punkt, mit einem festgelegten Radius. An diesem Punkt können innerhalb des festgelegten Radius Kreaturen in regelmäßigen Zeitintervallen erzeugt werden."

sc__ARoutine_create="Tagesablauf erzeugen"
sc__ARoutine_create="Erzeuge einen Tagesablauf, welcher einen ",~Zielpunkt," eine ",~Schleifenaktion," und die ",~Startaktion,", ",~Endaktion," und ",~Zielaktion," verwendet."
sc__ARoutine_createHint="Erzeugt einen Tagesablauf mit einem bestimmten Zielpunkt und diversen Aktionen."



//***************************************************************************
[AIFunctionStrings]
// These functions are defined in AIEditorData.txt

// --- Boolean

TownThreatened="Stadt wird angegriffen"
TownThreatened="Stadt wird angegriffen"
TownThreatenedHint=""

TownHasMine="Stadt hat Mine"
TownHasMine="Stadt #",~Stadt," hat eine aktive Goldmine"

TownHasHall="Town Has Hall"
TownHasHall="Town #",~Town," has a town hall building"

CaptainIsHome="Attack Captain Is At Home"
CaptainIsHome="Attack captain is at home"

CaptainIsFull="Attack Group Is Complete"
CaptainIsFull="Attack group is complete"

CaptainIsEmpty="Attack Group Is Empty"
CaptainIsEmpty="Attack group is empty"

CaptainRetreating="Attack Captain Is Retreating"
CaptainRetreating="Attack captain is retreating"

CaptainAtGoal="Attack Captain Is At Goal"
CaptainAtGoal="Attack captain is at goal"

CaptainInCombat="Captain Is In Combat"
CaptainInCombat=~Captain Type," captain is in combat"

CreepsOnMap="Creeps Exist Anywhere"
CreepsOnMap="Creeps exist anywhere on the map"

ExpansionNeeded="Expansion Spot Needed"
ExpansionNeeded="Expansion spot needed"
ExpansionNeededHint="Returns true if the AI needs to build an expansion but there are currently no open spots."

// --- Integer

GetUnitCount="Total Units of Type"
GetUnitCount="Total number of ",~Unit Type," units"
GetUnitCountHint="This count includes units currently being trained or constructed."

GetUnitCountDone="Total Units of Type - Completed Only"
GetUnitCountDone="Total number of ",~Unit Type," units completed"
GetUnitCountDoneHint="This count does NOT include units currently being trained or constructed."

GetTownUnitCount="Total Units of Type - By Town"
GetTownUnitCount="Total number of ",~Unit Type," units in town #",~Town," (completed only: ",~Option,")"
GetTownUnitCountHint=""

GetMinesOwned="Number of Mines Owned"
GetMinesOwned="Number of mines owned"
GetMinesOwnedHint="The total number of mines currently in use by the AI player."

GetGoldOwned="Total Unmined Gold Owned"
GetGoldOwned="Total unmined gold owned"
GetGoldOwnedHint="The total amount of gold remaining in all mines currently in use."

TownWithMine="Town With Mine"
TownWithMine="Town with a gold mine"
TownWithMineHint="Returns the ID of the first town with an active gold mine"

GetGold="Current Gold Amount"
GetGold="Current gold amount"
GetGoldHint="The amount of gold currently owned by the AI player"

GetWood="Current Lumber Amount"
GetWood="Current lumber amount"
GetWoodHint="The amount of lumber currently owned by the AI player"

GetUnitGoldCost="Gold Cost of Unit"
GetUnitGoldCost="Gold cost of ",~Unit Type

GetUnitWoodCost="Lumber Cost of Unit"
GetUnitWoodCost="Lumber cost of ",~Unit Type

GetUnitBuildTime="Build Time of Unit"
GetUnitBuildTime="Build time of ",~Unit Type
GetUnitBuildTimeHint="Build time is in seconds."

GetUpgradeLevel="Current Upgrade Level"
GetUpgradeLevel="Upgrade level of ",~Upgrade Type

GetUpgradeGoldCost="Gold Cost of Upgrade"
GetUpgradeGoldCost="Gold cost of the next ",~Upgrade Type," upgrade"

GetUpgradeWoodCost="Lumber Cost of Upgrade"
GetUpgradeWoodCost="Lumber cost of the next ",~Upgrade Type," upgrade"

GetNextExpansion="Next Expansion Town"
GetNextExpansion="Next expansion town"
GetNextExpansionHint="Returns the town ID for the next expansion location"

FoodUsed="Food Used"
FoodUsed="Food used"
FoodUsedHint="The total amount of food currently being used by the AI player"

TotalFoodProduced="Food Produced"
TotalFoodProduced="Food produced"
TotalFoodProducedHint="The total amount of food currently produced by the AI player"

GetFoodMade="Food Produced By Unit"
GetFoodMade="Food produced by ",~Unit Type," units"

CommandsWaiting="Commands Waiting"
CommandsWaiting="Number of commands waiting"
CommandsWaitingHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."

CheckLastCommand="Last Command"
CheckLastCommand="Last command sent, ",~Option," the command"
CheckLastCommandHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."

CheckLastCommandData="Last Command Data"
CheckLastCommandData="Last command data sent, ",~Option," the command"
CheckLastCommandDataHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."

CaptainGroupSize="Angriffsgruppengröße"
CaptainGroupSize="Angriffsgruppengröße"
CaptainGroupSizeHint="Die derzeitige Anzahl der Einheiten in der Angriffsgruppe."

CaptainReadinessHP="Attack Group Health Level"
CaptainReadinessHP="Attack group health level"
CaptainReadinessHPHint="The health level is an estimation of the average attack group health, with 100 being full."

CaptainReadinessMa="Attack Group Mana Level"
CaptainReadinessMa="Attack group mana level"
CaptainReadinessMaHint="The mana level is an estimation of the average attack group mana, with 100 being full."

CurrentAttackWave="Current Attack Wave"
CurrentAttackWave="Current attack wave"
CurrentAttackWaveHint="Attack waves are defined in the attack wave list in the Attacking tab."

MeleeDifficulty="Nahkampfschwierigkeitsstufe"
MeleeDifficulty="Nahkampfschwierigkeitsstufe"
